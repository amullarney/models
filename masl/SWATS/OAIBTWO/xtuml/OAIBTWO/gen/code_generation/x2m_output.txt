domain,OAIBTWO,Open Architecture Internal Bridge Domain Two,,,,,,
object,I_Into_The_Great_Wide_Open,,,,,,,
object,,,,,,,,
object,Report_Data,,,,,,,
object,,,,,,,,
type,Very_Simple_Source_Structure_Type,public,,,,,,
structure,Very_Simple_Source_Structure_Type,,,,,,,
member,Source_Simple_Integer,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
member,,,,,,,,
member,Source_Simple_Real,,,,,,,
typeref,real,,,,,,,
typeref,,,,,,,,
member,,,,,,,,
structure,,,,,,,,
type,,,,,,,,
type,Colour_Type,public,,,,,,
enumeration,Colour_Type,,,,,,,
enumerator,Red,,,,,,,
enumerator,,,,,,,,
enumerator,Green,,,,,,,
enumerator,,,,,,,,
enumerator,Blue,,,,,,,
enumerator,,,,,,,,
enumeration,,,,,,,,
type,,,,,,,,
type,Source_Structure_Type,public,,,,,,
structure,Source_Structure_Type,,,,,,,
member,Source_Integer,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
member,,,,,,,,
member,Source_Real,,,,,,,
typeref,real,,,,,,,
typeref,,,,,,,,
member,,,,,,,,
member,Source_String,,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
member,,,,,,,,
member,Source_Boolean,,,,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
member,,,,,,,,
member,Source_Colour,,,,,,,
typeref,Colour_Type,,,,,,,
typeref,,,,,,,,
member,,,,,,,,
structure,,,,,,,,
type,,,,,,,,
routine,OAIBTWO,,private,Local_scenario_for_OAIBTWO_standalone_test,1,,,
codeblock,#--------------------------------------------------------------------------%0A# In the abscence of the calling OAIBONE domain in a multi domain build%2C%0A# this scenario mat be run in stand-alone mode.%0A#--------------------------------------------------------------------------%0A%0A   Result = FALSE%0A%0A   {Received_Structure} is Source_Structure_Type%0A%0A   Test       = 1%0A   An_Integer = 0%0A   A_Real     = 0.0%0A   Some_Text  = "Fred"%0A   A_Boolean  = FALSE%0A%0A   A_Colour of Colour_Type = 'Red'%0A%0A   append [An_Integer%2C A_Real%2C Some_Text%2C A_Boolean%2C A_Colour] to {Received_Structure}%0A%0A   [Result] = OAIBTWO1::Receive_The_Structure[Test%2C {Received_Structure}%2C An_Integer%2C A_Real%2C Some_Text%2C A_Colour%2C A_Boolean%2C 1]%0A%0A   if Result = TRUE then%0A      [] = RPT2:Test_Passed["OAIBTWO local call"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed ["OAIBTWO local call"%2C Test%2C -1]%0A   endif%0A%0A,,,,,,,
codeblock,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,1,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, Local scenario for OAIBTWO standalone test%0A,,,,,,,
routine,,,,,,,,
routine,OAIBTWO,,private,Start_OAIBTWO_Tests,3,,,
codeblock,[] = OAIBTWO4::Create_Report_Data[]%0A,,,,,,,
codeblock,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,3,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, Start_OAIBTWO_Tests%0A,,,,,,,
routine,,,,,,,,
routine,OAIBTWO,,private,Finish_OAIBTWO_Tests,4,,,
codeblock,[] = OAIBTWO5::Delete_Report_Data[]%0A,,,,,,,
codeblock,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,4,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, Finish_OAIBTWO_Tests%0A,,,,,,,
routine,,,,,,,,
routine,OAIBTWO,,public,Receive_The_Structure,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,The_Structure,in,,,,,,
typeref,Source_Structure_Type,,,,,,,
typeref,,,,,,,,
parameter,Control_Integer,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Control_Real,in,,,,,,
typeref,real,,,,,,,
typeref,,,,,,,,
parameter,Control_String,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Control_Enum,in,,,,,,
typeref,Colour_Type,,,,,,,
typeref,,,,,,,,
parameter,Control_Boolean,in,,,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
parameter,Number_Of_Structures_In_Set,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Result,out,,,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#--------------------------------------------------------------------------%0A# Receive a structure and the control data from the other domain.%0A#--------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "OAIBTWO"%2C "DBSS Receive_The_Structure"%2C "Decode received structure"]%0A%0AHas_Passed = FALSE%0AFailure_Code = 0%0A%0AHow_Many_Sets = countof{The_Structure}%0A%0A%0Aif How_Many_Sets = Number_Of_Structures_In_Set then%0A%0A   Count = 1%0A%0A   for [local_integer%2C local_real%2C local_string%2C local_boolean%2C local_colour] in {The_Structure} do%0A%0A      # Look at the last entry only.%0A      if Count = How_Many_Sets then %0A%0A         if local_integer = Control_Integer then%0A%0A            if local_real = Control_Real then%0A%0A               if local_string = Control_String then%0A%0A                  if local_colour = Control_Enum then%0A%0A                     if local_boolean = Control_Boolean then%0A%0A                        Has_Passed = TRUE%0A                        [] = RPT2:Test_Passed ["OAIBTWO Destination Structure correctly received"%2C Test%2C 0]%0A%0A                     else%0A                        # Boolean incorrectly decoded%0A                        Has_Passed = TRUE%0A                        Failure_Code = -6%0A                     endif%0A%0A                  else%0A                     # Enumeration incorrectly decoded%0A                     Has_Passed = FALSE%0A                     Failure_Code = -5%0A                  endif%0A%0A               else%0A                  # String incorrectly decoded%0A                  Has_Passed = FALSE%0A                  Failure_Code = -4%0A               endif%0A%0A            else%0A               # Real incorrectly decoded%0A               Has_Passed = FALSE%0A               Failure_Code = -3%0A            endif%0A%0A         else%0A            # Integer incorrectly decoded%0A            Has_Passed = FALSE%0A            Failure_Code = -2%0A         endif%0A%0A      else%0A         # Not interested in this entry. Control data will only match up with the %0A         # last entry in the set.%0A         Count        = Count + 1%0A         Has_Passed   = FALSE%0A         Failure_Code = 0%0A      endif%0A%0A   # Loop around the entries in the set of structures.%0A   endfor%0A%0Aelse%0A   # Conflict in the number of sets found and the number%0A   # specified by the source domain.%0A   Has_Passed = FALSE%0A   Failure_Code = -1%0Aendif%0A%0Aif Has_Passed = FALSE then%0A   [] = RPT3:Test_Failed["OAIBTWO Destination Structure corrupted"%2C Test%2C Failure_Code]%0Aendif%0A%0AResult = Has_Passed,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,OAIBTWO,,public,Receive_A_Very_Simple_Structure,3,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Received_Very_Simple_Structure,in,,,,,,
typeref,Very_Simple_Source_Structure_Type,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,%0A[] = RPT1:Start_Test[Test_Number%2C "Null Requid"%2C "OAIBTWO"%2C "Receive simple structure"%2C "RX from SBONE"]%0A%0ATotal_Integer = 0%0ATotal_Real    = 0.0%0A%0Afor [local_simple_integer%2C local_simple_real] in {Received_Very_Simple_Structure} do%0A%0A   Total_Integer = Total_Integer + local_simple_integer%0A%0A   Total_Real = Total_Real + local_simple_real%0A%0Aendfor%0A%0Aif Total_Integer = 1530 then %0A   [] = RPT2:Test_Passed["OAIBTWO Receive v simple structure"%2C Test_Number%2C Total_Integer]%0Aelse%0A   [] = RPT3:Test_Failed["OAIBTWO Receive v simple structure"%2C Test_Number%2C Total_Integer]%0Aendif%0A%0A,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,OAIBTWO,,public,Create_Report_Data,4,,,
codeblock,# Find out of there already is one of these.%0A# It is not inconceivable that a report object still exists from a previous run.%0A# Report objects are not deleted at the end of a run%2C as certain events may%0A# still be en-queued.%0A%0Aold_report = find-one Report_Data%0A%0Aif old_report != UNDEFINED then%0A   delete old_report%0Aendif%0A%0AMy_Report = create unique Report_Data with Reported_Domain_Number = 0%0A%0A[] = RPT6:Domain_Test_Start["OA Internal Bridge Domain Two"]%0A,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,OAIBTWO,,public,Delete_Report_Data,5,,,
codeblock,[] = RPT7:Domain_Test_Finished["OA Internal Bridge Domain Two"]%0A%0A# Do not delete the Report_Data object%2C as there may be still events in%0A# the queue.,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
terminator,Report,RPT,,,,,,
routine,OAIBTWO,,public,Start_Test,1,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Requid,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Invoking_Domain,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Invoking_Object,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Purpose,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,# No action taken%0A,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,OAIBTWO,,public,Test_Passed,2,,,
parameter,Test_Object_Domain,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Value,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#Null%0A%0A# No action taken%0A,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,OAIBTWO,,public,Test_Failed,3,,,
parameter,Failed_Domain_Object,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Failed_Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Failed_Test_Value,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,OAIBTWO,,public,Test_Unsupported,4,,,
parameter,Unsupported_Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,OAIBTWO,,public,Test_Text,5,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Free_Text,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,OAIBTWO,,public,Domain_Test_Start,6,,,
parameter,This_Domain_Name,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,OAIBTWO,,public,Domain_Test_Finished,7,,,
parameter,This_Domain_Name,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
terminator,,,,,,,,
terminator,Under_The_Bridge,UTB,,,,,,
routine,OAIBTWO,,public,Create_A_Structure_In_Target_Domain,1,,,
parameter,Source_Very_Simple_Structure,in,,,,,,
typeref,Very_Simple_Source_Structure_Type,,,,,,,
typeref,,,,,,,,
parameter,Source_Control_Integer,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Source_Control_Real,in,,,,,,
typeref,real,,,,,,,
typeref,,,,,,,,
parameter,Source_Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Source_Result,out,,,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
description, This bridge will pass a simple structure%0A into a target domain%2C and then check to see that an object in the target domain has had its attributes set accordingly.%0A,,,,,,,
routine,,,,,,,,
terminator,,,,,,,,
object,I_Into_The_Great_Wide_Open,IITGWO,3,,,,,
attribute,iitgwo_id,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
operation,OAIBTWO,I_Into_The_Great_Wide_Open,public,Across_The_Great_Divide,instance,,1,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,A_Structure_To_Send,in,,,,,,
typeref,Source_Structure_Type,,,,,,,
typeref,,,,,,,,
parameter,Control_Integer,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Control_Real,in,,,,,,
typeref,real,,,,,,,
typeref,,,,,,,,
parameter,Control_String,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Control_Enum,in,,,,,,
typeref,Colour_Type,,,,,,,
typeref,,,,,,,,
parameter,Control_Boolean,in,,,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
parameter,Elements_In_Structure,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Result,out,,,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
parameter,A_Structure_To_Return,out,,,,,,
typeref,Source_Structure_Type,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,## my_test = find-one Test_Data%0A## %0A## # Receive a structure and the control data from this domain.%0A## # Decode it%2C and create another structure locally and pass it back%0A## # to the calling routine. In this case%2C the bridge and the calling routine %0A## # are in the same domain.%0A## %0A## Local_Test = Test%0A## %0A## Reporter = find-one Report_Data%0A## if Reporter != UNDEFINED then%0A## %0A##    Reporter_Number = Reporter.Reported_Domain_Number%0A## %0A## else%0A## %0A##    Reporter_Number = -1%0A## %0A## endif%0A## %0A## $USE RP%0A## %0A## [] = RP4::Test_Description[Local_Test%2C "null requid"%2C "Structure Bridge"%2C "Pass back structure"%2C "Decode received structure"%2C Reporter_Number]%0A## %0A## %0A## $ENDUSE%0A## %0A##%0A[] = RPT1:Start_Test[Test%2C"Null Requid"%2C "OAIBTWO"%2C "IITGWO1"%2C "Decode received structure"]%0A%0AHas_Passed = FALSE%0AFailure_Code = 0%0A%0AHow_Many_Sets = countof{A_Structure_To_Send}%0A%0A%0Aif How_Many_Sets = Elements_In_Structure then%0A%0A   Count = 1%0A%0A   for [local_integer%2C local_real%2C local_string%2C local_boolean%2C local_colour] in {A_Structure_To_Send} do%0A%0A%0A%0A      # Look at the last entry only.%0A      if Count = How_Many_Sets then %0A%0A         # Copy the contents into a locally defined structure.%0A         append [local_integer%2C local_real%2C local_string%2C local_boolean%2C local_colour] to {A_Structure_To_Return}%0A%0A%0A         if local_integer = Control_Integer then%0A%0A            if local_real = Control_Real then%0A%0A               if local_string = Control_String then%0A%0A                  if local_colour = Control_Enum then%0A%0A                     if local_boolean = Control_Boolean then%0A%0A                        Has_Passed = TRUE%0A%0A                     else%0A                        # Boolean incorrectly decoded%0A                        Has_Passed = TRUE%0A                        Failure_Code = -6%0A                     endif%0A%0A                  else%0A                     # Enumeration incorrectly decoded%0A                     Has_Passed = FALSE%0A                     Failure_Code = -5%0A                  endif%0A%0A               else%0A                  # String incorrectly decoded%0A                  Has_Passed = FALSE%0A                  Failure_Code = -4%0A               endif%0A%0A            else%0A               # Real incorrectly decoded%0A               Has_Passed = FALSE%0A               Failure_Code = -3%0A            endif%0A%0A         else%0A            # Integer incorrectly decoded%0A            Has_Passed = FALSE%0A            Failure_Code = -2%0A         endif%0A%0A      else%0A         # Not interested in this entry. Control data will only match up with the %0A         # last entry in the set.%0A         Count        = Count + 1%0A         Has_Passed   = FALSE%0A         Failure_Code = 0%0A      endif%0A%0A   # Loop around the entries in the set of structures.%0A   endfor%0A%0Aelse%0A   # Conflict in the number of sets found and the number%0A   # specified by the source domain.%0A   Has_Passed = FALSE%0A   Failure_Code = -1%0Aendif%0A%0Aif Has_Passed = FALSE then%0A      [] = RPT3:Test_Failed["OAIBTWO Local Structure corrupted"%2C Test%2C -1]%0Aelse%0A      [] = RPT2:Test_Passed["OAIBTWO Local Structure correctly received"%2C Test%2C 0]%0Aendif%0A%0AResult = Has_Passed%0A,,,,,,,
codeblock,,,,,,,,
operation,,,,,,,,
description, Class realising Interface%0A,,,,,,,
object,,,,,,,,
object,Report_Data,RD,2,,,,,
attribute,Report_Data_Unique_id,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Reported_Domain_Number,,,Report_Data_Unique_id,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
pragma,version,,,,,,,
pragmaitem,1,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
domain,,,,,,,,
