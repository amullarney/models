-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("74374860-2edd-4638-a5a6-b41fc7288d24",
	'An_Active_Array_Of_One_Object',
	8,
	'AAAOOO',
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("9e8589be-2c79-4b57-9013-29d5e1b6254f",
	"74374860-2edd-4638-a5a6-b41fc7288d24",
	'Do_Active_Single_Array_Tests',
	' @@TAGS-01-0004
',
	"ba5eda7a-def5-0000-0000-000000000000",
	0,
	'#--------------------------------------------------------------------------
# The array of 1 should be treated exactly the same way as an object tagged
# SINGLETON.
#--------------------------------------------------------------------------

# Create first of the single active array objects.

my_test = find-one Test_Data

Test = my_test.Number
This_Environment = my_test.Environment

if This_Environment = ''WACA'' then 
   Supported = TRUE
else
   Supported = FALSE
endif

#--------------------------------------------------------------------------
# Test 1 - Create first and only allowable instance of the object
#          This will be an asynchronous test.
#--------------------------------------------------------------------------

   First_Single = create unique An_Active_Array_Of_One_Object with Result = 0 & Current_State = ''Idle''

   Value_To_Add = 10
   Expected_Result_Value = 10

   generate AAAOOO1:Start(Test, Value_To_Add, "Create first object", Expected_Result_Value) to First_Single

   Test = Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2 - This will be a synchronous test.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "Single Array Active Object", "Inhibit second instance"]

   # Second_Single = create unique An_Active_Array_Of_One_Object with Result = 0 & Current_State = ''Idle''
   # {Set_Of_Single_Array} = find-all An_Active_Array_Of_One_Object
   # Number_Of_Single_Array = countof {Set_Of_Single_Array}
   # Should only be 1, but reporter widget expects a zero in the Failure field for a pass.
   # So if there are more than one instances found, this should be reported as an
   # error.
   # Failure_Value = Number_Of_Single_Array - 1
   # [] = TAGS5::Report_Now[Test, "Inhibit second instance", Failure_Value, Supported]

   [] = RPT4:Test_Unsupported[Test]

   Test = Test + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3 - Prove that the instance handle for the second instance is 
#          UNDEFINED, or in ada''s case, NULL.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "Single Array Active Object", "Second instance is null"]

   # if Second_Single = UNDEFINED then
   #   Failure_Value = 0
   # else
   #   Failure_Value = 1
   #   # It isn''t supposed to be here, so get rid of it.
   #   delete Second_Single
   # endif
   # [] = TAGS5::Report_Now[Test, "Second instance is null", Failure_Value, Supported]

   [] = RPT4:Test_Unsupported[Test]

   # Perform some synchronous tests as a result of this asynchronous service.

   generate AAAOOO3:Lets_Test() to First_Single
   

   # Prove that the first legal instance can be deleted and a new one created in it''s place.
   # This processing will be done when the event is unqueued. It shall effectively delete
   # First_Single instance, and create a new one and generate an event to the new instance
   # to prove that it can execute its'' state machine correctly.

   # In the wrong hands, this could turn into a recursive call. If the Phoenix event was sent to
   # the new instance in the state machine by the deleted state machine, there would be no return. 
   # Ever.

   generate AAAOOO4:Phoenix() to First_Single

   Test = Test + 1

# End Test 3

#--------------------------------------------------------------------------

my_test.Number = Test
',
	3,
	'',
	"00000000-0000-0000-0000-000000000000",
	2,
	1);
INSERT INTO O_NBATTR
	VALUES ("fd263a15-5033-4928-9811-07bdc86c6eea",
	"74374860-2edd-4638-a5a6-b41fc7288d24");
INSERT INTO O_BATTR
	VALUES ("fd263a15-5033-4928-9811-07bdc86c6eea",
	"74374860-2edd-4638-a5a6-b41fc7288d24");
INSERT INTO O_ATTR
	VALUES ("fd263a15-5033-4928-9811-07bdc86c6eea",
	"74374860-2edd-4638-a5a6-b41fc7288d24",
	"00000000-0000-0000-0000-000000000000",
	'Unique_Identifier',
	'',
	'',
	'Unique_Identifier',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("1bf565bd-e76e-4582-ba39-ad3691ef7c50",
	"74374860-2edd-4638-a5a6-b41fc7288d24");
INSERT INTO O_BATTR
	VALUES ("1bf565bd-e76e-4582-ba39-ad3691ef7c50",
	"74374860-2edd-4638-a5a6-b41fc7288d24");
INSERT INTO O_ATTR
	VALUES ("1bf565bd-e76e-4582-ba39-ad3691ef7c50",
	"74374860-2edd-4638-a5a6-b41fc7288d24",
	"fd263a15-5033-4928-9811-07bdc86c6eea",
	'Result',
	'',
	'',
	'Result',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("731ae100-9148-4df9-a425-0064a6798a2d",
	"74374860-2edd-4638-a5a6-b41fc7288d24");
INSERT INTO O_BATTR
	VALUES ("731ae100-9148-4df9-a425-0064a6798a2d",
	"74374860-2edd-4638-a5a6-b41fc7288d24");
INSERT INTO O_ATTR
	VALUES ("731ae100-9148-4df9-a425-0064a6798a2d",
	"74374860-2edd-4638-a5a6-b41fc7288d24",
	"1bf565bd-e76e-4582-ba39-ad3691ef7c50",
	'current_state',
	'',
	'',
	'current_state',
	0,
	"ba5eda7a-def5-0000-0000-000000000006",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"74374860-2edd-4638-a5a6-b41fc7288d24");
INSERT INTO O_OIDA
	VALUES ("fd263a15-5033-4928-9811-07bdc86c6eea",
	"74374860-2edd-4638-a5a6-b41fc7288d24",
	0,
	'Unique_Identifier');
INSERT INTO O_ID
	VALUES (1,
	"74374860-2edd-4638-a5a6-b41fc7288d24");
INSERT INTO O_ID
	VALUES (2,
	"74374860-2edd-4638-a5a6-b41fc7288d24");
INSERT INTO PE_PE
	VALUES ("74374860-2edd-4638-a5a6-b41fc7288d24",
	1,
	"1ca18a37-f7ff-4b6d-8304-00f3872da90d",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("1ca18a37-f7ff-4b6d-8304-00f3872da90d",
	"00000000-0000-0000-0000-000000000000",
	"9d0e218b-2cd2-4326-80e9-6837c9a1a9f8",
	'TAGS',
	'',
	0,
	'../TAGS.xtuml');
