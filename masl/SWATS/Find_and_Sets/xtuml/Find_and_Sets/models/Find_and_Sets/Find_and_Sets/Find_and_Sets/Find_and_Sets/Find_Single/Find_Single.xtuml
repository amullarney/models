-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("e08a8180-77cf-4d66-b4c6-c2218326190f",
	'Find_Single',
	10,
	'objFSI',
	' This object verifies the statements:
 
 	find-one
 	find-only
',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("d263fb30-4c93-408f-9ca0-3426dbaa0938",
	"e08a8180-77cf-4d66-b4c6-c2218326190f",
	'do_find_one',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	0,
	'#------------------------------------------------------------------------#
# Find-one
#------------------------------------------------------------------------#

Test_Number = Test

#------------------------------------------------------------------------#
# Test 1 - FIND-ONE, no instance is returned
#          The object to which the ''FIND'' is being performed contains no 
#          instances
#------------------------------------------------------------------------#

   [] = RPT1:Start_Test [Test_Number, "1103-0000-01-0544", "Find and Sets", "objFSI find one", "on no instances"]
   [] = RPT8:Specify_Requid [Test_Number, "1241-0000-01-1206"]

   # Perform the test
   an_instanceB = find-one Object_B

   # Check that no instance is returned
   if an_instanceB != UNDEFINED then
      [] = RPT3:Test_Failed["objFSI find one", Test_Number,-1]
   else

      if an_instanceFSI = UNDEFINED then
         [] = RPT3:Test_Failed["objFSI", Test_Number, -2]
      else
         temp = an_instanceFSI.ResultFSI + 10
         an_instanceFSI.ResultFSI = temp
         [] = RPT2:Test_Passed["objFSI find one", Test_Number, temp]
      endif

   endif

# End Test 1

#------------------------------------------------------------------------#
# Test 2 - FIND-ONE WHERE, no instance is returned
#          The object to which the ''FIND'' is being performed contains no 
#          instances
#------------------------------------------------------------------------#

   [Test_Number] = Find_and_Sets1::Increment[Test_Number]

   [] = RPT1:Start_Test [Test_Number, "1103-0000-01-0545", "Find and Sets", "objFSI find one", "on no instances"]
   [] = RPT8:Specify_Requid [Test_Number, "1241-0000-01-1207"]

   # Perform the test
   an_instanceB = find-one Object_B where idB = 1

   # Check that no instance is returned
   if an_instanceB != UNDEFINED then
      [] = RPT3:Test_Failed["objFSI find one", Test_Number,-3]
   else

      if an_instanceFSI = UNDEFINED then
         [] = RPT3:Test_Failed["objFSI", Test_Number, -4]
      else
         temp = an_instanceFSI.ResultFSI + 10
         an_instanceFSI.ResultFSI = temp
         [] = RPT2:Test_Passed["objFSI find one", Test_Number,temp]
      endif

   endif

# End Test 2

#------------------------------------------------------------------------#
# Test 3 - FIND-ONE WHERE <single condition>, no instance returned
#------------------------------------------------------------------------#

   [Test_Number] = Find_and_Sets1::Increment[Test_Number]

   [] = RPT1:Start_Test [Test_Number, "1103-0000-01-0545", "Find and Sets", "objFSI find one", "on no instances"]
   [] = RPT8:Specify_Requid [Test_Number, "1241-0000-01-1207"]

   # Perform the test
   an_instanceA = find-one Object_A where IntegerA = 666

   # Check that no instance is returned
   if an_instanceA != UNDEFINED then
      [] = RPT3:Test_Failed["objFSI find one", Test_Number,-3]
   else
      temp = an_instanceFSI.ResultFSI + 10
      an_instanceFSI.ResultFSI = temp
      [] = RPT2:Test_Passed["objFSI find one", Test_Number, temp]
   endif

# End Test 3

#------------------------------------------------------------------------#
# Test 4 - FIND-ONE WHERE <multiple conditions>, no instance returned
#------------------------------------------------------------------------#

   [Test_Number] = Find_and_Sets1::Increment[Test_Number]

   [] = RPT1:Start_Test [Test_Number, "1103-0000-01-0545", "Find and Sets", "objFSI find one", "on no instances"]
   [] = RPT8:Specify_Requid [Test_Number, "1241-0000-01-1207"]

   # Perform the test
   an_instanceA = find-one Object_A where IntegerA = 666 & idA = 1

   # Check that no instance is returned
   if an_instanceA != UNDEFINED then
      [] = RPT3:Test_Failed["objFSI find one", Test_Number, -4]
   else
      temp = an_instanceFSI.ResultFSI + 10
      an_instanceFSI.ResultFSI = temp
      [] = RPT2:Test_Passed["objFSI find one", Test_Number, temp]
   endif

# End Test 4

#------------------------------------------------------------------------#
# Test 5 - FIND-ONE, an instance is returned
#------------------------------------------------------------------------#

   [Test_Number] = Find_and_Sets1::Increment[Test_Number]

   [] = RPT1:Start_Test [Test_Number, "1103-0000-01-0544", "Find and Sets", "objFSI find one", "one instance"]
   [] = RPT8:Specify_Requid [Test_Number, "1241-0000-01-1206"]

   # Perform the test
   an_instanceA = find-one Object_A

   # Check that an instance is returned
   if an_instanceA = UNDEFINED then
      [] = RPT3:Test_Failed["objFSI find one", Test_Number, -5]
   else
      temp = an_instanceFSI.ResultFSI + 10
      an_instanceFSI.ResultFSI = temp
      [] = RPT2:Test_Passed["objFSI find one", Test_Number, temp]
   endif

# End Test 5

#------------------------------------------------------------------------#
# Test 6 - FIND-ONE WHERE <single condition>, an instance is returned
#------------------------------------------------------------------------#

   [Test_Number] = Find_and_Sets1::Increment[Test_Number]

   [] = RPT1:Start_Test [Test_Number, "1103-0000-01-0545", "Find and Sets", "objFSI find one", "one instance"]
   [] = RPT8:Specify_Requid [Test_Number, "1241-0000-01-1207"]

   # Perform the test
   an_instanceA = find-one Object_A where idA = 1

   # Check that an instance is returned
   if (an_instanceA != UNDEFINED)then

      if (an_instanceA.idA != 1) then
         [] = RPT3:Test_Failed["objFSI find one", Test_Number, -6]
      else
         temp = an_instanceFSI.ResultFSI + 10
         an_instanceFSI.ResultFSI = temp
         [] = RPT2:Test_Passed["objFSI find one", Test_Number, temp]
      endif

   else
      [] = RPT3:Test_Failed["objFSI find one", Test_Number, -7]
   endif

# End Test 6

#------------------------------------------------------------------------#
# Test 7 - FIND-ONE WHERE <both conditions are fulfilled>, an instance is 
#          returned
#------------------------------------------------------------------------#

   [Test_Number] = Find_and_Sets1::Increment[Test_Number]

   [] = RPT1:Start_Test [Test_Number, "1103-0000-01-0545", "Find and Sets", "objFSI find one", "one instance"]
   [] = RPT8:Specify_Requid [Test_Number, "1241-0000-01-1207"]

   # Perform the test
   an_instanceA = find-one Object_A where idA = 1 | idA = 2

   # Check that an instance is returned
   if (an_instanceA != UNDEFINED)then

      if (an_instanceA.idA > 2) then
         [] = RPT3:Test_Failed["objFSI find one", Test_Number, -8]
      else
         temp = an_instanceFSI.ResultFSI + 10
         an_instanceFSI.ResultFSI = temp
         [] = RPT2:Test_Passed["objFSI find one", Test_Number, temp]
      endif

   else
      [] = RPT3:Test_Failed["objFSI find one", Test_Number, -9]
   endif

# End Test 7

#------------------------------------------------------------------------#
# Test 8 - FIND-ONE WHERE <only one conditions fulfilled>, an instance is 
#          returned
#------------------------------------------------------------------------#

   [Test_Number] = Find_and_Sets1::Increment[Test_Number]

   [] = RPT1:Start_Test [Test_Number, "1103-0000-01-0545", "Find and Sets", "objFSI find one", "one instance"]
   [] = RPT8:Specify_Requid [Test_Number, "1241-0000-01-1207"]

   # Perform the test
   an_instanceA = find-one Object_A where idA = 3 | idA = 666

   # Check that an instance is returned
   if (an_instanceA != UNDEFINED)then

      if(an_instanceA.idA != 3) then
         [] = RPT3:Test_Failed["objFSI find one", Test_Number, -10]
      else
         temp = an_instanceFSI.ResultFSI + 10
         an_instanceFSI.ResultFSI = temp
         [] = RPT2:Test_Passed["objFSI find one", Test_Number, temp]
      endif

   else
      [] = RPT3:Test_Failed["objFSI find one", Test_Number, -11]
   endif

# End Test 8

#------------------------------------------------------------------------#

Returned_Number = Test_Number',
	3,
	'',
	"00000000-0000-0000-0000-000000000000",
	2,
	1);
INSERT INTO O_TPARM
	VALUES ("ef56b802-8c84-4a56-9cb5-b35015bda6da",
	"d263fb30-4c93-408f-9ca0-3426dbaa0938",
	'Test',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("edcdfda6-6ad7-4235-8c6d-15e5dd4e416b",
	"d263fb30-4c93-408f-9ca0-3426dbaa0938",
	'an_instanceFSI',
	"f45a4f86-6b3b-4721-accd-f958c116da73",
	0,
	'',
	"ef56b802-8c84-4a56-9cb5-b35015bda6da",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("f45a4f86-6b3b-4721-accd-f958c116da73",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Find_Single>',
	'',
	'',
	'../Find_and_Sets.xtuml');
INSERT INTO O_TPARM
	VALUES ("49aba0c3-b02c-4d7c-b6b9-486061a7796a",
	"d263fb30-4c93-408f-9ca0-3426dbaa0938",
	'Returned_Number',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'',
	"edcdfda6-6ad7-4235-8c6d-15e5dd4e416b",
	'');
INSERT INTO O_TFR
	VALUES ("2e1f09b6-6033-4299-a889-ea7d7880ea5b",
	"e08a8180-77cf-4d66-b4c6-c2218326190f",
	'do_find_only',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	0,
	'#------------------------------------------------------------------------#
# Find-only
#------------------------------------------------------------------------#

[Host] = WAW1:What_Env[]
Test = Test_Number

#------------------------------------------------------------------------#
# Test 1 - FIND-ONLY return the first instance of Object A found
#------------------------------------------------------------------------#

   [] = RPT1:Start_Test[Test, "1103-0000-01-0546", "Find and Sets", "objFSI find only","Return first inst with find-only"]
   [] = RPT8:Specify_Requid [Test, "1241-0000-01-1208"]

   Has_Failed = FALSE

   # Perform the test

   if Host = "ISIM" then
      [] = RPT4:Test_Unsupported[Test]
   else
      an_instanceA = find-only Object_A

      # Check that an instance is returned
      if (an_instanceA = UNDEFINED) then
         [] = RPT3:Test_Failed["objFSI find only", Test,-4]
         Has_Failed = TRUE
      else
         temp = an_instanceFSI.ResultFSI + 10
         an_instanceFSI.ResultFSI = temp
         [] = RPT2:Test_Passed["objFSI find only", Test,temp]
      endif

   endif

# End Test 1


#------------------------------------------------------------------------#
# Test 2 - FIND-ONLY WHERE <single condition>, an instance is returned
#------------------------------------------------------------------------#

   [Test] = Find_and_Sets1::Increment[Test]

   [] = RPT1:Start_Test[Test, "1103-0000-01-0547", "Find and Sets", "objFSI find only","a condition an instance ret"]
   [] = RPT8:Specify_Requid [Test, "1241-0000-01-1209"]

   Has_Failed = FALSE

   # Perform the test
   an_instanceA = find-only Object_A where idA = 4

   # Check that an instance is returned
   if (an_instanceA = UNDEFINED)|(an_instanceA.idA != 4)then
      [] = RPT3:Test_Failed["objFSI find only", Test,-1]
      Has_Failed = TRUE
   else

      if an_instanceFSI = UNDEFINED then
         Has_Failed = TRUE
         [] = RPT3:Test_Failed["objFSI", Test, -2]
      else
         temp = an_instanceFSI.ResultFSI + 10
         an_instanceFSI.ResultFSI = temp
         [] = RPT2:Test_Passed["objFSI find only", Test,temp]
      endif

   endif

# End Test 2

#------------------------------------------------------------------------#
# Test 3 -  FIND-ONLY WHERE <only one condition fulfilled>, an instance 
#           is returned
#------------------------------------------------------------------------#

   [Test] = Find_and_Sets1::Increment[Test]

   [] = RPT1:Start_Test[Test, "1103-0000-01-0547", "Find and Sets", "objFSI find only","a condition an instance ret"]
   [] = RPT8:Specify_Requid [Test, "1241-0000-01-1209"]

   Has_Failed = FALSE

   # Perform the test
   an_instanceA = find-only Object_A where IntegerA = 666 | idA = 5

   # Check that an instance is returned
   if (an_instanceA = UNDEFINED)|(an_instanceA.idA != 5) then
      [] = RPT3:Test_Failed["objFSI find only", Test,-2]
      Has_Failed = TRUE
   else
      temp = an_instanceFSI.ResultFSI + 10
      an_instanceFSI.ResultFSI = temp
      [] = RPT2:Test_Passed["objFSI find only", Test,temp]
   endif

# End Test 3

#------------------------------------------------------------------------#
# Test 4 - FIND-ONLY WHERE <multiple conditions fulfilled>, an instance 
#          is returned
#------------------------------------------------------------------------#

   [Test] = Find_and_Sets1::Increment[Test]

   [] = RPT1:Start_Test[Test, "1103-0000-01-0547", "Find and Sets", "objFSI find only","mult conditions 1 instance ret"]
   [] = RPT8:Specify_Requid [Test, "1241-0000-01-1209"]

   Has_Failed = FALSE

   # Perform the test
   an_instanceA = find-only Object_A where IntegerA = 6 | idA = 6

   # Check that an instance is returned
   if (an_instanceA = UNDEFINED)|(an_instanceA.idA != 6) then
      [] = RPT3:Test_Failed["objFSI find only", Test,-3]
      Has_Failed = TRUE
   else
      temp = an_instanceFSI.ResultFSI + 10
      an_instanceFSI.ResultFSI = temp
      [] = RPT2:Test_Passed["objFSI find only", Test,temp]
   endif

# End Test 4

#------------------------------------------------------------------------#

Returned_Number = Test',
	3,
	'',
	"d263fb30-4c93-408f-9ca0-3426dbaa0938",
	2,
	2);
INSERT INTO O_TPARM
	VALUES ("6106abcd-8b0a-4a31-a6f3-9767e3f8622f",
	"2e1f09b6-6033-4299-a889-ea7d7880ea5b",
	'Test_Number',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("70e7acaa-c615-45f4-8fd6-efb4e30d83ea",
	"2e1f09b6-6033-4299-a889-ea7d7880ea5b",
	'an_instanceFSI',
	"f45a4f86-6b3b-4721-accd-f958c116da73",
	0,
	'',
	"6106abcd-8b0a-4a31-a6f3-9767e3f8622f",
	'');
INSERT INTO O_TPARM
	VALUES ("faae9836-2e66-40bd-b322-1ede073641c8",
	"2e1f09b6-6033-4299-a889-ea7d7880ea5b",
	'Returned_Number',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'',
	"70e7acaa-c615-45f4-8fd6-efb4e30d83ea",
	'');
INSERT INTO O_NBATTR
	VALUES ("61e36c6c-b1c4-42aa-bbb3-4c3f8f01abca",
	"e08a8180-77cf-4d66-b4c6-c2218326190f");
INSERT INTO O_BATTR
	VALUES ("61e36c6c-b1c4-42aa-bbb3-4c3f8f01abca",
	"e08a8180-77cf-4d66-b4c6-c2218326190f");
INSERT INTO O_ATTR
	VALUES ("61e36c6c-b1c4-42aa-bbb3-4c3f8f01abca",
	"e08a8180-77cf-4d66-b4c6-c2218326190f",
	"00000000-0000-0000-0000-000000000000",
	'idFSI',
	' Preferred identifier.
',
	'',
	'idFSI',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("a6cc6fa3-b9d2-44c7-9f28-7c5911613068",
	"e08a8180-77cf-4d66-b4c6-c2218326190f");
INSERT INTO O_BATTR
	VALUES ("a6cc6fa3-b9d2-44c7-9f28-7c5911613068",
	"e08a8180-77cf-4d66-b4c6-c2218326190f");
INSERT INTO O_ATTR
	VALUES ("a6cc6fa3-b9d2-44c7-9f28-7c5911613068",
	"e08a8180-77cf-4d66-b4c6-c2218326190f",
	"61e36c6c-b1c4-42aa-bbb3-4c3f8f01abca",
	'ResultFSI',
	' This attribute is manipulated to indicate that the required operation was successful.
',
	'',
	'ResultFSI',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("0a42af6f-fc11-4af3-92ab-daf8e4fac3c5",
	"e08a8180-77cf-4d66-b4c6-c2218326190f");
INSERT INTO O_BATTR
	VALUES ("0a42af6f-fc11-4af3-92ab-daf8e4fac3c5",
	"e08a8180-77cf-4d66-b4c6-c2218326190f");
INSERT INTO O_ATTR
	VALUES ("0a42af6f-fc11-4af3-92ab-daf8e4fac3c5",
	"e08a8180-77cf-4d66-b4c6-c2218326190f",
	"a6cc6fa3-b9d2-44c7-9f28-7c5911613068",
	'current_state',
	'',
	'',
	'current_state',
	0,
	"ba5eda7a-def5-0000-0000-000000000006",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"e08a8180-77cf-4d66-b4c6-c2218326190f");
INSERT INTO O_OIDA
	VALUES ("61e36c6c-b1c4-42aa-bbb3-4c3f8f01abca",
	"e08a8180-77cf-4d66-b4c6-c2218326190f",
	0,
	'idFSI');
INSERT INTO O_ID
	VALUES (1,
	"e08a8180-77cf-4d66-b4c6-c2218326190f");
INSERT INTO O_ID
	VALUES (2,
	"e08a8180-77cf-4d66-b4c6-c2218326190f");
INSERT INTO PE_PE
	VALUES ("e08a8180-77cf-4d66-b4c6-c2218326190f",
	1,
	"af4be4d6-263a-4b8f-82d2-fef12f33c65c",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("af4be4d6-263a-4b8f-82d2-fef12f33c65c",
	"00000000-0000-0000-0000-000000000000",
	"493a9445-b290-4380-8d40-c5b13e08da98",
	'Find_and_Sets',
	'',
	0,
	'../Find_and_Sets.xtuml');
