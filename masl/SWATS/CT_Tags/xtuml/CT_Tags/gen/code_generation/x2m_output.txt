domain,CT_Tags,CCA_TCA_Tagging,,,,,,
object,CCA_A,,,,,,,
object,,,,,,,,
object,CCA_B,,,,,,,
object,,,,,,,,
object,CCA_C,,,,,,,
object,,,,,,,,
object,CCA_CP,,,,,,,
object,,,,,,,,
object,CCA_SubB,,,,,,,
object,,,,,,,,
object,CCA_SubE,,,,,,,
object,,,,,,,,
object,CCA_SubH,,,,,,,
object,,,,,,,,
object,CCA_Super,,,,,,,
object,,,,,,,,
object,Global_A,,,,,,,
object,,,,,,,,
object,Global_B,,,,,,,
object,,,,,,,,
object,Global_CP,,,,,,,
object,,,,,,,,
object,Global_SubC,,,,,,,
object,,,,,,,,
object,Global_SubF,,,,,,,
object,,,,,,,,
object,Global_SubI,,,,,,,
object,,,,,,,,
object,Global_Super,,,,,,,
object,,,,,,,,
object,Report_Data,,,,,,,
object,,,,,,,,
object,Results,,,,,,,
object,,,,,,,,
object,TCA_A,,,,,,,
object,,,,,,,,
object,TCA_B,,,,,,,
object,,,,,,,,
object,TCA_C,,,,,,,
object,,,,,,,,
object,TCA_CP,,,,,,,
object,,,,,,,,
object,TCA_D,,,,,,,
object,,,,,,,,
object,TCA_E,,,,,,,
object,,,,,,,,
object,TCA_F,,,,,,,
object,,,,,,,,
object,TCA_SubA,,,,,,,
object,,,,,,,,
object,TCA_SubD,,,,,,,
object,,,,,,,,
object,TCA_SubG,,,,,,,
object,,,,,,,,
object,TCA_Super,,,,,,,
object,,,,,,,,
object,Test_Data,,,,,,,
object,,,,,,,,
routine,CT_Tags,,private,Start_Domain_Tests,4,,,
codeblock,my_test = create Test_Data with Current_Test_Number = 1%0A%0Aold_report = find-one Report_Data%0A%0Aif old_report != UNDEFINED then%0A   delete old_report%0Aendif%0A%0AMy_Report = create unique Report_Data with Reported_Domain_Number = 1%0A%0AMy_Results = create unique Results with CCATotal   = 0     &\%0A                                        TCATotal   = 0     &\%0A                                        CCAFlag    = FALSE &\%0A                                        TCAFlag    = FALSE &\%0A                                        ResRef     = 0     &\%0A                                        idRes      = 1%0A%0A[] = RPT6:Domain_Test_Start["CCU TCU Tagging"],,,,,,,
codeblock,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,4,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, Start_Domain_Tests%0A,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,private,TCA_Tests,1,,,
codeblock,my_test = find-one Test_Data%0A%0ATest = my_test.Current_Test_Number%0A%0ALocalCount = 0%0A%0AinstResult = find-one Results where idRes = 1%0A%0AinstResult.TCAFlag = TRUE%0A%0AfirstGS = create Global_Super with idGS          = 2      &\%0A                                   GSRef         = 0      &\%0A                                   CCAFlag       = FALSE  &\%0A                                   TCAFlag       = FALSE  &\%0A                                   GlobalFlag    = FALSE  &\%0A                                   Current_State = 'Idle'%0A%0AfirstTSA = create TCA_SubA with idTSA         = 2     &\%0A                                Current_State = 'Idle'%0A%0AfirstGSC = create Global_SubC with idGSC         = 2 &\%0A                                   Current_State = 'Idle'%0A%0A%0AfirstTS = create TCA_Super with idTS          = 2     &\%0A                                TSRef         = 0     &\%0A                                TCAFlag       = FALSE &\%0A                                Current_State = 'Idle'%0A%0AfirstTSD = create TCA_SubD with idTSD         = 2 &\%0A                                Current_State = 'Idle'%0A%0AfirstGSF = create Global_SubF with idGSF         = 2     &\%0A                                   GlobalFlag    = FALSE &\%0A                                   Current_State = 'Idle'%0A%0AfirstTCA_D = create TCA_D with idTD          = 2     &\%0A                               TDRef         = 0     &\%0A                               TDPassed      = FALSE &\%0A                               TDLinked      = FALSE &\%0A                               Current_State = 'Idle'%0A%0AfirstTCA_E = create TCA_E with idTE          = 2 &\%0A                               TERef         = 0 &\%0A                               Current_State = 'Idle'%0A%0AfirstTCA_F = create TCA_F with idTF          = 2 &\%0A                               TFRef         = 0 &\%0A                               Current_State = 'Idle'%0A%0AfirstTSG = create TCA_SubG with idTSG = 2%0A%0AfirstGSI = create Global_SubI with idGSI         = 2     &\%0A                                   GlobalFlag    = FALSE &\%0A                                   Current_State = 'Idle'%0A%0AfirstTA = create TCA_A    with idTA = 2 and Current_State = 'Idle'%0AfirstTB = create TCA_B    with idTB = 2%0AfirstTC = create TCA_C    with idTC = 2%0AfirstGA = create Global_A with idGA = 2%0AfirstGB = create Global_B with idGB = 2%0A%0AfirstTCA_CP = create TCA_CP with idTCP = 2%0AfirstGlob_CP = create Global_CP with idGCP = 2%0A%0A#-----------------------------------------------------------------------------------%0A# Test 1 - Test for existance of object instances%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "TCA Objects created"]%0A%0A   if firstTA != UNDEFINED then%0A%0A      if firstTB != UNDEFINED then%0A%0A         if firstTC != UNDEFINED then%0A%0A            if firstGA != UNDEFINED then%0A%0A               if firstGB != UNDEFINED then%0A                  [] = RPT2:Test_Passed["TCA Objects created"%2C Test%2C 0]%0A               else%0A                  [] = RPT3:Test_Failed["TCA Objects created"%2C Test%2C -10]%0A               endif%0A%0A            else%0A               [] = RPT3:Test_Failed["TCA Objects created"%2C Test%2C -20]%0A            endif%0A%0A         else%0A            [] = RPT3:Test_Failed["TCA Objects created"%2C Test%2C -30]%0A         endif%0A%0A      else%0A         [] = RPT3:Test_Failed["TCA Objects created"%2C Test%2C -40]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed["TCA Objects created"%2C Test%2C -50]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 1%0A%0A#-----------------------------------------------------------------------------------%0A# Test 2 - Navigate from TCA_A to TCA_B%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Navigate TCA super to TCA sub"]%0A%0A   link firstTA R2 firstTB%0A%0A   instTB = firstTA -> R2.TCA_B%0A%0A   unlink firstTA R2 firstTB%0A%0A   if instTB !=UNDEFINED then%0A%0A      if instTB.idTB = 2 then%0A         [] = RPT2:Test_Passed["Navigate TCA super to TCA sub"%2C Test%2C 0]%0A      else%0A         [] = RPT3:Test_Failed["Navigate TCA super to TCA sub"%2C Test%2C -10]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed["Navigate TCA super to TCA sub"%2C Test%2C -20]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 2%0A%0A#-----------------------------------------------------------------------------------%0A# Test 3 - Navigate from Global_B to TCA_C%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Navigate GlobB to TCA"]%0A%0A   link firstGB R4 firstTC%0A%0A   instTC = firstGB -> R4.TCA_C%0A%0A   unlink firstGB R4 firstTC%0A%0A   if instTC != UNDEFINED then%0A%0A      if instTC.idTC = 2 then%0A         [] = RPT2:Test_Passed["Navigate GlobB to TCA"%2C Test%2C 0]%0A      else%0A         [] = RPT3:Test_Failed["Navigate GlobB to TCA"%2C Test%2C -10]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed["Navigate GlobB to TCA"%2C Test%2C -20]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 3%0A%0A#-----------------------------------------------------------------------------------%0A# Test 4 - Navigate from Global_A to Global_B%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Navigate Global to Global"]%0A%0A   link firstGA R13 firstGB%0A%0A   instGB = firstGA -> R13.Global_B%0A%0A   unlink firstGA R13 firstGB%0A%0A   if instGB != UNDEFINED then%0A%0A      if instGB.idGB = 2 then%0A         [] = RPT2:Test_Passed["Navigate Global to Global"%2C Test%2C 0]%0A      else%0A         [] = RPT3:Test_Failed["Navigate Global to Global"%2C Test%2C -10]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed["Navigate Global to Global"%2C Test%2C -20]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 4%0A%0A#-----------------------------------------------------------------------------------%0A# Test 5 - Navigate round Global super type TCA subtypes%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Global Super type"]%0A%0A   link firstGS    R5  firstTSA%0A   link firstTSA   R8  firstTCA_D%0A   link firstTCA_D R12 firstTCA_E%0A   link firstTCA_E R11 firstTCA_F%0A   link firstTCA_F R10 firstGSC%0A%0A   instTSA   = firstGS   -> R5.TCA_SubA%0A   instTCA_D = instTSA   -> R8.TCA_D%0A   instTCA_E = instTCA_D -> R12.TCA_E%0A   instTCA_F = instTCA_E -> R11.TCA_F%0A   instGSC   = instTCA_F -> R10.Global_SubC%0A%0A   unlink firstGS    R5  firstTSA%0A   unlink firstTSA   R8  firstTCA_D%0A   unlink firstTCA_D R12 firstTCA_E%0A   unlink firstTCA_E R11 firstTCA_F%0A   unlink firstTCA_F R10 firstGSC%0A%0A   if instGSC.idGSC = 2 then%0A      [] = RPT2:Test_Passed["Global Super type"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Global Super type"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 5%0A%0A#-----------------------------------------------------------------------------------%0A# Test 6 - Navigate round Global super type TCA subtypes%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Global Super type"]%0A%0A   link firstGS    R5  firstGSC%0A   link firstTSA   R8  firstTCA_D%0A   link firstTCA_D R12 firstTCA_E%0A   link firstTCA_E R11 firstTCA_F%0A   link firstTCA_F R10 firstGSC%0A%0A   instGSC   = firstGS   -> R5.Global_SubC%0A   instTCA_F = instGSC   -> R10.TCA_F%0A   instTCA_E = instTCA_F -> R11.TCA_E%0A   instTCA_D = instTCA_E -> R12.TCA_D%0A   instTSA   = instTCA_D -> R8.TCA_SubA%0A%0A   unlink firstGS    R5  firstGSC%0A   unlink firstTSA   R8  firstTCA_D%0A   unlink firstTCA_D R12 firstTCA_E%0A   unlink firstTCA_E R11 firstTCA_F%0A   unlink firstTCA_F R10 firstGSC%0A%0A   if instTSA.idTSA = 2 then%0A      [] = RPT2:Test_Passed["Global Super type"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Global Super type"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 6%0A%0A#-----------------------------------------------------------------------------------%0A# Test 7 - Navigate TCA Super type to TSA sub type%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "TCA Supertype to TCA subtype"]%0A%0A   link firstTS R6 firstTSD%0A%0A   instTSD = firstTS -> R6.TCA_SubD%0A%0A   unlink firstTS R6 firstTSD%0A%0A   temp = instTSD.idTSD%0A%0A   instTSD = firstTS -> R6.TCA_SubD%0A%0A   if temp = 2 and instTSD = UNDEFINED then%0A      [] = RPT2:Test_Passed["TCA Supertype to TCA subtype"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["TCA Supertype to TCA subtype"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 7%0A%0A#-----------------------------------------------------------------------------------%0A# Test 8 - Navigate TCA Super type to Global sub type%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "TCA Supertype to Global subtype"]%0A%0A   link firstTS R6 firstGSF%0A%0A   instGSF = firstTS -> R6.Global_SubF%0A%0A   unlink firstTS R6 firstGSF%0A%0A   temp = instGSF.idGSF%0A%0A   instGSF = firstTS -> R6.Global_SubF%0A%0A   if temp = 2 and instGSF = UNDEFINED then%0A      [] = RPT2:Test_Passed["TCA Supertype to Global subtype"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["TCA Supertype to Global subtype"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 8%0A%0A#-----------------------------------------------------------------------------------%0A# Test 9 - Ensure that sub type of a CCA super type still exists%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "TCA Sub type of CCA super type"]%0A%0A   if firstTSG != UNDEFINED then%0A      [] = RPT2:Test_Passed["TCA Sub type of CCA super type"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["TCA Sub type of CCA super type"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 9%0A%0A#-----------------------------------------------------------------------------------%0A# Test 10 - Ensure that Global sub type of CCA super type still exists%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Glob Sub type of CCA super type"]%0A%0A   if firstGSI != UNDEFINED then%0A      [] = RPT2:Test_Passed["Glob Sub type of CCA super type"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Glob Sub type of CCA super type"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 10%0A%0A#-----------------------------------------------------------------------------------%0A# Test 11 - Test TCA object sync service for a TCA object%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Call TCA service"]%0A%0A   TheRes = 0%0A%0A   [TheRes] = TCAA1:Add_One[TheRes]%0A%0A   if TheRes = 1 then%0A      [] = RPT2:Test_Passed["Call TCA service"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Call TCA service"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 11%0A%0A#-----------------------------------------------------------------------------------%0A# Test 12 - Test Global object sync service for a global object%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Call Global service"]%0A%0A   [TheRes] = GA1:Add_One[TheRes]%0A%0A   if TheRes = 2 then%0A      [] = RPT2:Test_Passed["Call Global service"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Call Global service"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 12%0A%0A#-----------------------------------------------------------------------------------%0A# Test 13 - Test TCA Domain Sync Service%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Call Global service"]%0A%0A   [TheRes] = CT_Tags1::TCA_Add_One[TheRes]%0A%0A   if TheRes = 3 then%0A      [] = RPT2:Test_Passed["Call TCA Domain Sync service"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Call TCA Domain Sync service"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 13%0A%0A#-----------------------------------------------------------------------------------%0A# Test 14 - Test TCA Domain Sync Service%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Call Global service"]%0A%0A   [TheRes] = CT_Tags3::Global_Add_One[TheRes]%0A%0A   if TheRes = 4 then%0A      [] = RPT2:Test_Passed["Call Global Domain Sync service"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Call Global Domain Sync service"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 14%0A%0A#-----------------------------------------------------------------------------------%0A# Test 15 - Test TCA Domain Sync Service%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "TCA_Bridge"]%0A%0A   [TheRes] = AO1:TCA_Add[TheRes]%0A%0A   if TheRes = 5 then%0A      [] = RPT2:Test_Passed["TCA_Bridge"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["TCA_Bridge"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 15%0A%0A#-----------------------------------------------------------------------------------%0A# Test 16 - Test TCA Domain Sync Service%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "TCA_Bridge"]%0A%0A   [TheRes] = AO2:Global_Add[TheRes]%0A%0A   if TheRes = 6 then%0A      [] = RPT2:Test_Passed["TCA_Bridge"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["TCA_Bridge"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 16%0A%0A#-----------------------------------------------------------------------------------%0A# Test 17 - TCA to TCA Counterpoint link%0A#-----------------------------------------------------------------------------------%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "TCA to TCA Counterpoint Link"]%0A%0A   [ReturnVal] = Nav_TCA2:Create_And_Link_TCA[firstTCA_CP]%0A%0A   if ReturnVal = 1 then%0A      [] = RPT2:Test_Passed["TCA counterpoint link"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["TCA counterpoint link"%2C Test%2C ReturnVal]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 17%0A%0A#-----------------------------------------------------------------------------------%0A# Test 18 - TCA to TCA Counterpoint navigate%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "TCA to TCA Counterpoint nav"]%0A%0A   [ReturnVal] = Nav_TCA1:Navigate_TCA[firstTCA_CP]%0A%0A   if ReturnVal = 1 then%0A      [] = RPT2:Test_Passed["TCA counterpoint nav"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["TCA counterpoint nav"%2C Test%2C ReturnVal]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 18%0A%0A#-----------------------------------------------------------------------------------%0A# Test 19 - TCA to TCA Counterpoint navigate%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "TCA to TCA Counterpoint unlink"]%0A%0A   [ReturnVal] = Nav_TCA3:Unlink_TCA[firstTCA_CP]%0A%0A   if ReturnVal = 1 then%0A      [] = RPT2:Test_Passed["TCA counterpoint unlink"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["TCA counterpoint unlink"%2C Test%2C ReturnVal]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 19%0A%0A#-----------------------------------------------------------------------------------%0A# Test 20 - Global to Global Counterpoint link%0A#-----------------------------------------------------------------------------------%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Glob to Glob Counterpoint Link"]%0A%0A   [ReturnVal] = Nav_Glob1:Create_And_Link_Glob[firstGlob_CP]%0A%0A   if ReturnVal = 1 then%0A      [] = RPT2:Test_Passed["Glob counterpoint link"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Glob counterpoint link"%2C Test%2C ReturnVal]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 20%0A%0A#-----------------------------------------------------------------------------------%0A# Test 21 - Global to Global Counterpoint navigate%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Glob to Glob Counterpoint nav"]%0A%0A   [ReturnVal] = Nav_Glob2:Navigate_Glob[firstGlob_CP]%0A%0A   if ReturnVal = 1 then%0A      [] = RPT2:Test_Passed["Glob counterpoint nav"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Glob counterpoint nav"%2C Test%2C ReturnVal]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 21%0A%0A#-----------------------------------------------------------------------------------%0A# Test 22 - Global to Global Counterpoint unlink%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Glob to Glob Counterpoint unlink"]%0A%0A   [ReturnVal] = Nav_Glob3:Unlink_Glob[firstGlob_CP]%0A%0A   if ReturnVal = 1 then%0A      [] = RPT2:Test_Passed["Glob counterpoint unlink"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Glob counterpoint unlink"%2C Test%2C ReturnVal]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 22%0A%0A#-----------------------------------------------------------------------------------%0A# Test 23 - Delete all TCA instances%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Delete all TCA instances"]%0A%0A   {SetTS} = find-all TCA_Super%0A   for instTS in {SetTS} do%0A      delete instTS%0A   endfor%0A%0A   {SetTSA} = find-all TCA_SubA%0A   for instTSA in {SetTSA} do%0A      delete instTSA%0A   endfor%0A%0A   {SetTSD} = find-all TCA_SubD%0A   for instTSD in {SetTSD} do%0A      delete instTSD%0A   endfor%0A%0A   {SetTD} = find-all TCA_D%0A   for instTD in {SetTD} do%0A      delete instTD%0A   endfor%0A%0A   {SetTE} = find-all TCA_E%0A   for instTE in {SetTE} do%0A      delete instTE%0A   endfor%0A%0A   {SetTF} = find-all TCA_F%0A   for instTF in {SetTF} do%0A      delete instTF%0A   endfor%0A%0A   {SetTG} = find-all TCA_SubG%0A   for instTG in {SetTG} do%0A      delete instTG%0A   endfor%0A%0A   {SetTA} = find-all TCA_A%0A   for instTA in {SetTA} do%0A      delete instTA%0A   endfor%0A%0A   {SetTB} = find-all TCA_B%0A   for instTB in {SetTB} do%0A      delete instTB%0A   endfor%0A%0A   {SetTC} = find-all TCA_C%0A   for instTC in {SetTC} do%0A      delete instTC%0A   endfor%0A%0A%0A   {SetTS} = find-all TCA_Super%0A   {SetTSA} = find-all TCA_SubA%0A   {SetTSD} = find-all TCA_SubD%0A   {SetTD} = find-all TCA_D%0A   {SetTE} = find-all TCA_E%0A   {SetTF} = find-all TCA_F%0A   {SetTG} = find-all TCA_SubG%0A   {SetTA} = find-all TCA_A%0A   {SetTB} = find-all TCA_B%0A   {SetTC} = find-all TCA_C%0A%0A   if countof {SetTS} = 0 then%0A%0A      if countof {SetTSA} = 0 then%0A%0A         if countof {SetTSD} = 0 then%0A%0A            if countof {SetTD} = 0 then%0A%0A               if countof {SetTE} = 0 then%0A%0A                  if countof {SetTF} = 0 then%0A%0A                     if countof {SetTG} = 0 then%0A   %0A                        if countof {SetTA} = 0 then%0A%0A                           if countof {SetTB} = 0 then%0A%0A                              if countof {SetTC} = 0 then%0A                                 [] = RPT2:Test_Passed["Delete all TCA instances"%2C Test%2C 0]%0A                              else%0A                                 [] = RPT3:Test_Failed["Delete all TCA instances"%2C Test%2C -10]%0A                              endif%0A%0A                           else%0A                              [] = RPT3:Test_Failed["Delete all TCA instances"%2C Test%2C -20]%0A                           endif%0A%0A                        else%0A                           [] = RPT3:Test_Failed["Delete all TCA instances"%2C Test%2C -30]%0A                        endif%0A%0A                     else%0A                        [] = RPT3:Test_Failed["Delete all TCA instances"%2C Test%2C -40]%0A                     endif%0A%0A                  else%0A                     [] = RPT3:Test_Failed["Delete all TCA instances"%2C Test%2C -50]%0A                  endif%0A%0A               else%0A                  [] = RPT3:Test_Failed["Delete all TCA instances"%2C Test%2C -60]%0A               endif%0A%0A            else%0A               [] = RPT3:Test_Failed["Delete all TCA instances"%2C Test%2C -70]%0A            endif%0A%0A         else%0A            [] = RPT3:Test_Failed["Delete all TCA instances"%2C Test%2C -80]%0A         endif%0A%0A      else%0A         [] = RPT3:Test_Failed["Delete all TCA instances"%2C Test%2C -90]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed["Delete all TCA instances"%2C Test%2C -90]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 23%0A%0A#-----------------------------------------------------------------------------------%0A# Test 24 - Delete all global instances%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Delete all Global instances"]%0A%0A   {SetGS} = find-all Global_Super%0A   for instGS in {SetGS} do%0A      delete instGS%0A   endfor%0A%0A   {SetGSC} = find-all Global_SubC%0A   for instGSC in {SetGSC} do%0A      delete instGSC%0A   endfor%0A%0A   {SetGSF} = find-all Global_SubF%0A   for instGSF in {SetGSF} do%0A      delete instGSF%0A   endfor%0A%0A   {SetGSI} = find-all Global_SubI%0A   for instGSI in {SetGSI} do%0A      delete instGSI%0A   endfor%0A%0A   {SetGA} = find-all Global_A%0A   for instGA in {SetGA} do%0A      delete instGA%0A   endfor%0A%0A   {SetGB} = find-all Global_B%0A   for instGB in {SetGB} do%0A      delete instGB%0A   endfor%0A%0A   {SetGS}  = find-all Global_Super%0A   {SetGSC} = find-all Global_SubC%0A   {SetGSF} = find-all Global_SubF%0A   {SetGSI} = find-all Global_SubI%0A   {SetGA}  = find-all Global_A%0A   {SetGB}  = find-all Global_B%0A%0A   if countof {SetGS} = 0 then%0A%0A      if countof {SetGSC} = 0 then%0A%0A         if countof {SetGSF} = 0 then%0A%0A            if countof {SetGSI} = 0 then%0A%0A               if countof {SetGA} = 0 then%0A%0A                  if countof {SetGB} = 0 then%0A                     [] = RPT2:Test_Passed["Global instances deleted"%2C Test%2C 0]%0A                  else%0A                     [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -10]%0A                  endif%0A%0A               else%0A                  [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -20]%0A               endif%0A   %0A            else%0A               [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -30]%0A            endif%0A%0A         else%0A            [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -40]%0A         endif%0A   %0A      else%0A         [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -50]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -60]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 24%0A%0A#-----------------------------------------------------------------------------------%0A%0Atemp = instResult.TCATotal%0Atemp = temp + LocalCount%0AinstResult.TCATotal = temp%0A%0Amy_test.Current_Test_Number = Test%0A,,,,,,,
codeblock,,,,,,,,
pragma,tca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,1,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, TCA_Tests%0A,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,private,Get_Totals,6,,,
codeblock,my_test = find-one Test_Data%0A%0ATest = my_test.Current_Test_Number%0A%0AExpectedCCACount = 39%0AExpectedTCACount = 39%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Total No of tests"]%0A%0A   instResult = find-one Results where idRes = 1%0A%0A   if instResult.CCAFlag and instResult.TCAFlag then%0A%0A      if instResult.CCATotal = ExpectedCCACount and instResult.TCATotal = ExpectedTCACount then%0A         [] = RPT2:Test_Passed["All tests ran"%2C Test%2C 0]%0A      else%0A%0A         if instResult.CCATotal != ExpectedCCACount and instResult.TCATotal = ExpectedTCACount then%0A            [] = RPT3:Test_Failed["Missing CCA tests in Glob build"%2C Test%2C instResult.CCATotal]%0A         else%0A%0A            if instResult.CCATotal = ExpectedCCACount and instResult.TCATotal != ExpectedTCACount then%0A               [] = RPT3:Test_Failed["Missing TCA tests in Glob build"%2C Test%2C instResult.TCATotal]%0A            else%0A               [] = RPT3:Test_Failed["Missing TCA CCA tests in Global"%2C Test%2C instResult.TCATotal]%0A            endif%0A%0A         endif%0A%0A      endif%0A            %0A   else%0A%0A      if instResult.CCAFlag and !instResult.TCAFlag then%0A%0A         if instResult.CCATotal = ExpectedCCACount then%0A            [] = RPT2:Test_Passed["All CCA tests ran in CCA build"%2C Test%2C 0]%0A         else%0A            [] = RPT3:Test_Failed["Missing CCA tests in CCA build"%2C Test%2C instResult.CCATotal]%0A         endif%0A%0A      else%0A%0A         if !instResult.CCAFlag and instResult.TCAFlag then%0A%0A            if instResult.TCATotal = ExpectedTCACount then%0A               [] = RPT2:Test_Passed["All TCA tests ran in TCA build"%2C Test%2C 0]%0A            else%0A               [] = RPT3:Test_Failed["Missing TCA tests in TCA build"%2C Test%2C instResult.TCATotal]%0A            endif%0A%0A         else%0A            [] = RPT3:Test_Failed["Something very wrong has happend"%2C Test%2C -10]%0A         endif%0A%0A      endif%0A%0A   endif%0A%0ATest = Test + 1%0A%0Amy_test.Current_Test_Number = Test,,,,,,,
codeblock,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,6,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, Get_Totals%0A,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,private,Finish_Domain_Tests,5,,,
codeblock,[] = RPT7:Domain_Test_Finished["CCU TCU Tagging"],,,,,,,
codeblock,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,5,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, Finish_Domain_Tests%0A,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,private,CCA_Tests,2,,,
codeblock,my_test = find-one Test_Data%0A%0ATest = my_test.Current_Test_Number%0A%0ALocalCount = 0%0A%0AinstResult = find-one Results where idRes = 1%0A%0AinstResult.CCAFlag = TRUE%0A%0AfirstGS = create Global_Super with idGS          = 1      &\%0A                                   GSRef         = 0      &\%0A                                   CCAFlag       = FALSE  &\%0A                                   TCAFlag       = FALSE  &\%0A                                   GlobalFlag    = FALSE  &\%0A                                   Current_State = 'Idle'%0A%0AfirstCSB = create CCA_SubB with idCSB         = 1 &\%0A                                Current_State = 'Idle'%0A%0AfirstGSC = create Global_SubC with idGSC         = 1 &\%0A                                   Current_State = 'Idle'%0A%0AfirstCSE = create CCA_SubE with idCSE = 1 &\%0A                                Current_State = 'Idle'%0A%0AfirstGSF = create Global_SubF with idGSF         = 1      &\%0A                                   GlobalFlag    = FALSE  &\%0A                                   Current_State = 'Idle'%0A%0AfirstCS = create CCA_Super with idCS = 1 &\%0A                                Current_State = 'Idle'%0A%0AfirstCSH = create CCA_SubH with idCSH = 1 &\%0A                                Current_State = 'Idle'%0A%0AfirstGSI = create Global_SubI with idGSI         = 1     &\%0A                                   GlobalFlag    = FALSE &\%0A                                   Current_State = 'Idle'%0A%0AfirstCA = create CCA_A with idCA          = 1     &\ %0A                            CARef         = 0     &\%0A                            CAPassed      = FALSE &\%0A                            CALinked      = FALSE &\%0A                            Current_State = 'Idle'%0A%0AfirstCB = create CCA_B with idCB = 1 and Current_State = 'Idle'%0AfirstCC = create CCA_C with idCC = 1%0AfirstGA = create Global_A with idGA = 1%0AfirstGB = create Global_B with idGB = 1%0A%0AfirstCCA_CP  = create CCA_CP    with idCCP = 1%0AfirstGlob_CP = create Global_CP with idGCP = 1%0A%0A#-----------------------------------------------------------------------------------%0A# CCA    Test 1 %0A# Navigate from CCA object to CCA object%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Navigate CCA to CCA"]%0A%0A   link firstCA R1 firstCB%0A%0A   instCB = firstCA -> R1.CCA_B%0A%0A   unlink firstCA R1 firstCB%0A%0A   if instCB !=UNDEFINED then%0A      [] = RPT2:Test_Passed["Navigate CCA to CCA"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Navigate CCA to CCA"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 1%0A%0A#-----------------------------------------------------------------------------------%0A# CCA    Test 2 %0A# Navigate from Global object to CCA object%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Navigate Global to CCA"]%0A%0A   link firstGA R3 firstCC%0A%0A   instCC = firstGA -> R3.CCA_C%0A%0A   unlink firstGA R3 firstCC%0A%0A   if instCC !=UNDEFINED then%0A      [] = RPT2:Test_Passed["Navigate Global to CCA"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Navigate Global to CCA"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 2%0A%0A#-----------------------------------------------------------------------------------%0A# Test 3 - Check GlobalB still exists as part of a Global TCA relationship%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Check GlobalB still exists"]%0A%0A   if firstGB !=UNDEFINED then%0A      [] = RPT2:Test_Passed["Check GlobalB still exists"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Check GlobalB still exists"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 3%0A%0A#-----------------------------------------------------------------------------------%0A# Test 4 - Navigate from Global super to Global sub%0A#-----------------------------------------------------------------------------------%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Navigate Glob super to Glob sub"]%0A%0A   link firstGS R5 firstGSC%0A%0A   instGSC = firstGS -> R5.Global_SubC%0A%0A   unlink firstGS R5 firstGSC%0A%0A   if instGSC.idGSC = 1 then%0A      [] = RPT2:Test_Passed["Navigate Glob super to Glob sub"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Navigate Glob super to Glob sub"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 4%0A%0A#-----------------------------------------------------------------------------------%0A# Test 5 - Navigate from Global super to CCA sub%0A#-----------------------------------------------------------------------------------%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Navigate Global super to CSA sub"]%0A%0A   link firstGS R5 firstCSB%0A%0A   instCSB = firstGS -> R5.CCA_SubB%0A%0A   unlink firstGS R5 firstCSB%0A%0A   if instCSB.idCSB = 1 then%0A      [] = RPT2:Test_Passed["Navigate Global super to CSA sub"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Navigate Global super to CSA sub"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 5%0A%0A#-----------------------------------------------------------------------------------%0A# Test 6 - Ensure CCA sub type still exist when part of a TCA supertype CCA subtype %0A#          relationship%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "TCA super CCA sub"]%0A%0A   if firstCSE != UNDEFINED then%0A      [] = RPT2:Test_Passed["TCA super CCA sub"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["TCA super CCA sub"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 6%0A%0A#-----------------------------------------------------------------------------------%0A# Test 7 - Ensure Global sub type still exist when part of a TCA supertype Global%0A#          subtype relationship%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "TCA Super Global sub"]%0A%0A   if firstGSF != UNDEFINED then%0A      [] = RPT2:Test_Passed["TCA Super Global sub"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["TCA Super Global sub"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 7%0A%0A#-----------------------------------------------------------------------------------%0A# Test 8 - Navigate CCA supertype to CCA subtype%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Navigate CCA Super CCA Sub"]%0A%0A   link firstCS R7 firstCSH%0A%0A   instCSH = firstCS -> R7.CCA_SubH%0A%0A   unlink firstCS R7 firstCSH%0A%0A   if instCSH.idCSH = 1 then%0A      [] = RPT2:Test_Passed["Navigate CCA Super CCA Sub"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Navigate CCA Super CCA Sub"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 8%0A%0A#-----------------------------------------------------------------------------------%0A# Test 9 - Navigate CCA supertype to Global subtype%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Navigate CCA Super Global Sub"]%0A%0A   link firstCS R7 firstGSI%0A%0A   instGSI = firstCS -> R7.Global_SubI%0A%0A   unlink firstCS R7 firstGSI%0A%0A   if instGSI.idGSI = 1 then%0A      [] = RPT2:Test_Passed["Navigate CCA Super Global Sub"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Navigate CCA Super Global Sub"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 9%0A%0A#-----------------------------------------------------------------------------------%0A# Test 10 - Call CCA Object Sync service%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Call CCA service"]%0A%0A   TheRes = 0%0A%0A   [TheRes] = CCAA1:Add_One[TheRes]%0A%0A   if TheRes = 1 then%0A      [] = RPT2:Test_Passed["Call TCA service"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Call TCA service"%2C Test%2C TheRes]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 10%0A%0A#-----------------------------------------------------------------------------------%0A# Test 11 - Test Global object sync service for a global object%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Call Global service"]%0A%0A   [TheRes] = GA1:Add_One[TheRes]%0A%0A   if TheRes = 2 then%0A      [] = RPT2:Test_Passed["Call TCA service"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Call TCA service"%2C Test%2C TheRes]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 11%0A%0A#-----------------------------------------------------------------------------------%0A# Test 12 - Test CCA Domain Sync Service%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Call Global service"]%0A%0A   [TheRes] = CT_Tags2::CCA_Add_One[TheRes]%0A%0A   if TheRes = 3 then%0A      [] = RPT2:Test_Passed["Call CCA Domain Sync service"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Call CCA Domain Sync service"%2C Test%2C TheRes]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 12%0A%0A#-----------------------------------------------------------------------------------%0A# Test 13 - Test Global Domain Sync Service%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Call Global service"]%0A%0A   [TheRes] = CT_Tags3::Global_Add_One[TheRes]%0A%0A   if TheRes = 4 then%0A      [] = RPT2:Test_Passed["Call Global Domain Sync service"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Call Global Domain Sync service"%2C Test%2C TheRes]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 13%0A%0A#-----------------------------------------------------------------------------------%0A# Test 14 - Test CCA Bridge%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "CCA Bridge"]%0A%0A   [TheRes] = AO3:CCA_Add[TheRes]%0A%0A   if TheRes = 5 then%0A      [] = RPT2:Test_Passed["CCA Bridge"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["CCA Bridge"%2C Test%2C TheRes]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 14%0A%0A#-----------------------------------------------------------------------------------%0A# Test 15 - Test Global Domain Sync Service%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "CCA Bridge"]%0A%0A   [TheRes] = AO2:Global_Add[TheRes]%0A%0A   if TheRes = 6 then%0A      [] = RPT2:Test_Passed["CCA Bridge"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["CCA Bridge"%2C Test%2C TheRes]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 15%0A%0A#-----------------------------------------------------------------------------------%0A# Test 16 - CCA to CCA Counterpoint link%0A#-----------------------------------------------------------------------------------%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "CCA to CCA Counterpoint Link"]%0A%0A   [ReturnVal] = Nav_CCA1:Create_And_Link_CCA[firstCCA_CP]%0A%0A   if ReturnVal = 1 then%0A      [] = RPT2:Test_Passed["CCA counterpoint link"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["CCA counterpoint link"%2C Test%2C ReturnVal]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 16%0A%0A#-----------------------------------------------------------------------------------%0A# Test 17 - CCA to CCA Counterpoint navigate%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "CCA to CCA Counterpoint nav"]%0A%0A   [ReturnVal] = Nav_CCA2:Navigate_CCA[firstCCA_CP]%0A%0A   if ReturnVal = 1 then%0A      [] = RPT2:Test_Passed["CCA counterpoint nav"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["CCA counterpoint nav"%2C Test%2C ReturnVal]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 17%0A%0A#-----------------------------------------------------------------------------------%0A# Test 18 - CCA to CCA Counterpoint navigate%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "CCA to CCA Counterpoint unlink"]%0A%0A   [ReturnVal] = Nav_CCA3:Unlink_CCA[firstCCA_CP]%0A%0A   if ReturnVal = 1 then%0A      [] = RPT2:Test_Passed["CCA counterpoint unlink"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["CCA counterpoint unlink"%2C Test%2C ReturnVal]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 18%0A%0A#-----------------------------------------------------------------------------------%0A# Test 19 - Global to Global Counterpoint link%0A#-----------------------------------------------------------------------------------%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Glob to Glob Counterpoint Link"]%0A%0A   [ReturnVal] = Nav_Glob1:Create_And_Link_Glob[firstGlob_CP]%0A%0A   if ReturnVal = 1 then%0A      [] = RPT2:Test_Passed["Glob counterpoint link"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Glob counterpoint link"%2C Test%2C ReturnVal]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 19%0A%0A#-----------------------------------------------------------------------------------%0A# Test 20 - TCA to TCA Counterpoint navigate%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Glob to Glob Counterpoint nav"]%0A%0A   [ReturnVal] = Nav_Glob2:Navigate_Glob[firstGlob_CP]%0A%0A   if ReturnVal = 1 then%0A      [] = RPT2:Test_Passed["Glob counterpoint nav"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Glob counterpoint nav"%2C Test%2C ReturnVal]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 20%0A%0A#-----------------------------------------------------------------------------------%0A# Test 21 - Global to Global Counterpoint unlink%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Glob to Glob Counterpoint unlink"]%0A%0A   [ReturnVal] = Nav_Glob3:Unlink_Glob[firstGlob_CP]%0A%0A   if ReturnVal = 1 then%0A      [] = RPT2:Test_Passed["Glob counterpoint unlink"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Glob counterpoint unlink"%2C Test%2C ReturnVal]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 21%0A%0A#-----------------------------------------------------------------------------------%0A# Test 22 - Delete all CCA instances%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Delete all CCA instances"]%0A%0A   {SetCSB} = find-all CCA_SubB%0A   for instCSB in {SetCSB} do%0A      delete instCSB%0A   endfor%0A%0A   {SetCSE} = find-all CCA_SubE%0A   for instCSE in {SetCSE} do%0A      delete instCSE%0A   endfor%0A%0A   {SetCS} = find-all CCA_Super%0A   for instCS in {SetCS} do%0A      delete instCS%0A   endfor%0A%0A   {SetCSH} = find-all CCA_SubH%0A   for instCSH in {SetCSH} do%0A      delete instCSH%0A   endfor%0A%0A   {SetCSE} = find-all CCA_SubE%0A   for instCSE in {SetCSE} do%0A      delete instCSE%0A   endfor%0A%0A   {SetCA} = find-all CCA_A%0A   for instCA in {SetCA} do%0A      delete instCA%0A   endfor%0A%0A   {SetCB} = find-all CCA_B%0A   for instCB in {SetCB} do%0A      delete instCB%0A   endfor%0A%0A   {SetCC} = find-all CCA_C%0A   for instCC in {SetCC} do%0A      delete instCC%0A   endfor%0A%0A   {SetCSB} = find-all CCA_SubB%0A   {SetCSE} = find-all CCA_SubE%0A   {SetCS}  = find-all CCA_Super%0A   {SetCSH} = find-all CCA_SubH%0A   {SetCA}  = find-all CCA_A%0A   {SetCB}  = find-all CCA_B%0A   {SetCC}  = find-all CCA_C%0A%0A   if countof {SetCSB} = 0 then%0A%0A      if countof {SetCSE} = 0 then%0A%0A         if countof {SetCS} = 0 then%0A%0A            if countof {SetCSH} = 0 then%0A%0A               if countof {SetCA} = 0 then%0A%0A                  if countof {SetCB} = 0 then%0A%0A                     if countof {SetCC} = 0 then%0A                        [] = RPT2:Test_Passed["Delete all CCA instances"%2C Test%2C 0]%0A                     else%0A                        [] = RPT3:Test_Failed["Delete all CCA instances"%2C Test%2C -10]%0A                     endif%0A%0A                  else%0A                     [] = RPT3:Test_Failed["Delete all CCA instances"%2C Test%2C -20]%0A                  endif%0A%0A               else%0A                  [] = RPT3:Test_Failed["Delete all CCA instances"%2C Test%2C -30]%0A               endif%0A%0A            else%0A               [] = RPT3:Test_Failed["Delete all CCA instances"%2C Test%2C -40]%0A            endif%0A%0A         else%0A            [] = RPT3:Test_Failed["Delete all CCA instances"%2C Test%2C -50]%0A         endif%0A%0A      else%0A         [] = RPT3:Test_Failed["Delete all CCA instances"%2C Test%2C -60]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed["Delete all CCA instances"%2C Test%2C -10]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 22%0A%0A#-----------------------------------------------------------------------------------%0A# Test 23 - Delete all global instances%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Delete all Global instances"]%0A%0A   {SetGS} = find-all Global_Super%0A   for instGS in {SetGS} do%0A      delete instGS%0A   endfor%0A%0A   {SetGSC} = find-all Global_SubC%0A   for instGSC in {SetGSC} do%0A      delete instGSC%0A   endfor%0A%0A   {SetGSF} = find-all Global_SubF%0A   for instGSF in {SetGSF} do%0A      delete instGSF%0A   endfor%0A%0A   {SetGSI} = find-all Global_SubI%0A   for instGSI in {SetGSI} do%0A      delete instGSI%0A   endfor%0A%0A   {SetGA} = find-all Global_A%0A   for instGA in {SetGA} do%0A      delete instGA%0A   endfor%0A%0A   {SetGB} = find-all Global_B%0A   for instGB in {SetGB} do%0A      delete instGB%0A   endfor%0A%0A   {SetGS}  = find-all Global_Super%0A   {SetGSC} = find-all Global_SubC%0A   {SetGSF} = find-all Global_SubF%0A   {SetGSI} = find-all Global_SubI%0A   {SetGA}  = find-all Global_A%0A   {SetGB}  = find-all Global_B%0A%0A   if countof {SetGS} = 0 then%0A%0A      if countof {SetGSC} = 0 then%0A%0A         if countof {SetGSF} = 0 then%0A%0A            if countof {SetGSI} = 0 then%0A%0A               if countof {SetGA} = 0 then%0A%0A                  if countof {SetGB} = 0 then%0A                     [] = RPT2:Test_Passed["Global instances deleted"%2C Test%2C 0]%0A                  else%0A                     [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -10]%0A                  endif%0A%0A               else%0A                  [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -20]%0A               endif%0A   %0A            else%0A               [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -30]%0A            endif%0A%0A         else%0A            [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -40]%0A         endif%0A   %0A      else%0A         [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -50]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -60]%0A   endif%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 23%0A%0A#-----------------------------------------------------------------------------------%0A%0Atemp = instResult.CCATotal %0Atemp = temp + LocalCount%0AinstResult.CCATotal = temp%0A%0Amy_test.Current_Test_Number = Test,,,,,,,
codeblock,,,,,,,,
pragma,cca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,2,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, CCA_Tests%0A,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,private,TCA_Events,3,,,
codeblock,my_test = find-one Test_Data%0A%0ATest = my_test.Current_Test_Number%0A%0ALocalCount = 0%0A%0AinstResult = find-one Results where idRes = 1%0A%0AfirstGS = create Global_Super with idGS          = 1     &\%0A                                   GSRef         = 0     &\%0A                                   CCAFlag       = FALSE &\%0A                                   TCAFlag       = FALSE &\%0A                                   GlobalFlag    = FALSE &\%0A                                   Current_State = 'Idle'%0A%0AfirstGSC = create Global_SubC with idGSC         = 1     &\ %0A                                   Current_State = 'Idle'%0A%0AfirstTSA = create TCA_SubA with idTSA         = 1     &\%0A                                Current_State = 'Idle'%0A%0AfirstTD = create TCA_D with idTD          = 1     &\%0A                            TDPassed      = FALSE &\%0A                            TDLinked      = FALSE &\%0A                            Current_State = 'Idle'%0A%0AfirstTE = create TCA_E with idTE          = 1     &\%0A                            TERef         = 0     &\%0A                            TELinked      = FALSE &\%0A                            TEPassed      = FALSE &\%0A                            Current_State = 'Idle'%0A%0AfirstTS = create TCA_Super with  idTS          = 1     &\%0A                                 TCAFlag       = FALSE &\%0A                                 TSRef         = 0     &\%0A                                 Current_State = 'Idle'%0A%0AfirstTSD = create TCA_SubD with idTSD         = 1     &\%0A                                TSDRef        = 0     &\%0A                                Current_State = 'Idle'%0A%0AfirstGSF = create Global_SubF with idGSF         = 1     &\%0A                                   GlobalFlag    = FALSE &\ %0A                                   Current_State = 'Idle'%0A%0AfirstTCAA = create TCA_A with idTA          = 1 &\%0A                              Current_State = 'Idle'%0A%0A#-----------------------------------------------------------------------------------%0A# Test 25 - Generate event to TDA object D%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Gen event to TCA object"]%0A%0A   generate ObjTD1:Fired (Test) to firstTD%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 25%0A%0A#-----------------------------------------------------------------------------------%0A# Test 26 - Link Global super type to TCA sub type%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Link Global Super to TCA Sub"]%0A%0A   generate ObjTD2:Link_SuperSub (Test) to firstTD%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 26%0A%0A#-----------------------------------------------------------------------------------%0A# Test 27 - Test Polymorphic event delivery%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Gen event to Global super"]%0A%0A   generate GS1:Poly_Fired(Test) to firstGS%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 27%0A%0A#-----------------------------------------------------------------------------------%0A# Test 28 - Unlink Global supertype from TCA subtype%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Unlink Global Super TCA Sub"]%0A%0A   generate TSA1:Unlink_SuperSub(Test) to firstTSA%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 28%0A%0A#-----------------------------------------------------------------------------------%0A# Test 29 - Link Global supertype to Global subtype%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Link Glob Super to Glob Sub"]%0A%0A   generate GSC4:Link_SuperSub(Test) to firstGSC%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 29%0A%0A#-----------------------------------------------------------------------------------%0A# Test 30 - Polymorphic event delivery from Global super to global sub%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Gen event to Global super"]%0A%0A   generate GS1:Poly_Fired(Test) to firstGS%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 30%0A%0A#-----------------------------------------------------------------------------------%0A# Test 31 - Unlink Global supertype from Global subtype%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Unlink Glob Super to Glob Sub"]%0A%0A   generate GSC1:Unlink_SuperSub(Test) to firstGSC%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 31%0A%0A#-----------------------------------------------------------------------------------%0A# Test 32 - Generate event to TCA Sub E%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Gen event to TCA Sub E"]%0A%0A   generate ObjTE1:Fired(Test) to firstTE%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 32%0A%0A%0A#-----------------------------------------------------------------------------------%0A# Test 33 - Link TCA Super to TCA Sub%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Link TCA Super to TCA Sub"]%0A%0A   generate ObjTE2:Link_SuperSub(Test) to firstTE%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 33%0A%0A#-----------------------------------------------------------------------------------%0A# Test 34 - Test Polymorphic event delivery from TCA Super to TCA Sub%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Gen event to TCA Super"]%0A%0A   generate TS1:Fired(Test) to firstTS%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 34%0A%0A#-----------------------------------------------------------------------------------%0A# Test 35 - Unlink%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Unlink TCA Super from TCA Sub"]%0A%0A   generate TSD2:Unlink_SuperSub(Test) to firstTSD%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 35%0A%0A#-----------------------------------------------------------------------------------%0A# Test 36 - Link TCA Super to Global Sub%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Link TCA Super to TCA Sub"]%0A%0A   generate TCAA1:Link_To_Global(Test) to firstTCAA%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 36%0A%0A#-----------------------------------------------------------------------------------%0A# Test 37 - Test Polymorphic event delivery from TCA Super to Global Sub%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Gen event to TCA Super"]%0A%0A   generate TS1:Fired(Test) to firstTS%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 37%0A%0A#-----------------------------------------------------------------------------------%0A# Test 38 - Unlink%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Unlink TCA Super from TCA Sub"]%0A%0A   generate TCAA2:Unlink_From_Global(Test) to firstTCAA%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 38%0A%0A#-----------------------------------------------------------------------------------%0A# Test 39 - Delete all TCA instance%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Delete TCA instances"]%0A%0A   generate TSA2:Delete_Instances (Test) to firstTSA%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 39%0A%0A#-----------------------------------------------------------------------------------%0A%0Atemp = instResult.TCATotal%0Atemp = temp + LocalCount%0AinstResult.TCATotal = temp%0A%0Amy_test.Current_Test_Number = Test%0A,,,,,,,
codeblock,,,,,,,,
pragma,tca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,3,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, TCA_Events%0A,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,private,CCA_Events,7,,,
codeblock,my_test = find-one Test_Data%0A%0ATest = my_test.Current_Test_Number%0A%0ALocalCount = 0%0A%0AinstResult = find-one Results where idRes = 1%0A%0AfirstCCAA = create CCA_A with idCA          = 1     &\%0A                              CARef         = 0     &\%0A                              CAPassed      = FALSE &\%0A                              CALinked      = FALSE &\%0A                              Current_State = 'Idle'%0A%0AfirstCCASuper = create CCA_Super with idCS          = 1     &\%0A                                      CSRef         = 0     &\%0A                                      CCAFlag       = FALSE &\%0A                                      GlobalFlag    = FALSE &\%0A                                      Current_State = 'Idle'%0A%0AfirstCCASubB = create CCA_SubB with idCSB         = 1 &\%0A                                    Current_State = 'Idle'%0A%0AfirstCCASubE = create CCA_SubE with idCSE         = 1     &\%0A                                    CSERef        = 0     &\%0A                                    CSELinked     = TRUE  &\%0A                                    CSEPassed     = FALSE &\%0A                                    Current_State = 'Idle'%0A%0AfirstCCASubH = create CCA_SubH with idCSH         = 1     &\%0A                                    Current_State = 'Idle'%0A%0AfirstGlobalSubI = create Global_SubI with idGSI         = 1     &\%0A                                          GlobalFlag    = FALSE &\%0A                                          Current_State = 'Idle'%0A%0AfirstCCAB = create CCA_B with idCB = 1 and Current_State = 'Idle'%0A%0Aif instResult.TCAFlag then%0A   firstGlobalSuper = find-one Global_Super where idGS  = 1%0A   firstGlobalSubC  = find-one Global_SubC  where idGSC = 1%0A%0Aelse%0A   firstGlobalSuper = create Global_Super with idGS           = 1     &\%0A                                                GSRef         = 0     &\%0A                                                CCAFlag       = FALSE &\%0A                                                TCAFlag       = FALSE &\%0A                                                GlobalFlag    = FALSE &\%0A                                                Current_State = 'Idle'%0A%0A   firstGlobalSubC = create Global_SubC with idGSC         = 1     &\ %0A                                             Current_State = 'Idle'%0Aendif%0A%0A#-----------------------------------------------------------------------------------%0A# Test 24 - Generate event to CCA_A object%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Gen event to CCA object"]%0A%0A   generate CCAA2:Fired (Test) to firstCCAA%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 24%0A%0A#-----------------------------------------------------------------------------------%0A# Test 25 - Link Global supertype to CCA subtype%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Link Global super to CCA sub"]%0A%0A   generate CCAA1:Link_SuperSub (Test) to firstCCAA%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 25%0A%0A#-----------------------------------------------------------------------------------%0A# Test 26 - Test polymorphic event delivery between Global super and CCA sub%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Gen event to Global super"]%0A%0A   generate GS1:Poly_Fired (Test) to firstGlobalSuper%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 26%0A%0A#-----------------------------------------------------------------------------------%0A# Test 27 - Unlink Global super type from CCA sub type%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Unlink Global Super CCA sub"]%0A%0A   generate CSB1:Unlink_SuperSub (Test) to firstCCASubB%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 27%0A%0A#-----------------------------------------------------------------------------------%0A# Test 28 - Link Global super to Global sub%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Link Global Super Global Sub"]%0A%0A   generate GSC4:Link_SuperSub (Test) to firstGlobalSubC%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 28%0A%0A#-----------------------------------------------------------------------------------%0A# Test 29 - Test polymorphic event delivery between Global super and Global sub%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Gen event to Global super"]%0A%0A   generate GS1:Poly_Fired (Test) to firstGlobalSuper%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 29%0A%0A#-----------------------------------------------------------------------------------%0A# Test 30 - Test polymorphic event delivery between Global super and Global sub%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Unlink Global Super Global Sub"]%0A%0A   generate GSC1:Unlink_SuperSub (Test) to firstGlobalSubC%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 30%0A%0A#-----------------------------------------------------------------------------------%0A# Test 31 - Gen event to CCA Sub E%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Gen event to CCA Sub E"]%0A%0A   generate CSE2:Start(Test) to firstCCASubE%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 31%0A%0A#-----------------------------------------------------------------------------------%0A# Test 32 - Link CCA Super type to CCA sub type%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Link CCA Super to CCA Sub"]%0A%0A   generate CSE1:Link_SuperSub(Test) to firstCCASubE%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 32%0A%0A#-----------------------------------------------------------------------------------%0A# Test 33 - Polymorphically deliver event to CCA sub via CCA super%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Gen poly event to CCA sub"]%0A%0A   generate CS1:C_Fired(Test) to firstCCASuper%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 33%0A%0A#-----------------------------------------------------------------------------------%0A# Test 34 - Unlink CCA Super from CCA Sub%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Unlink CCA Super from CCA Sub"]%0A%0A   generate CSH1:Unlink_SuperSub (Test) to firstCCASubH%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 34%0A%0A#-----------------------------------------------------------------------------------%0A# Test 35 - Link CCA Super to Global Sub%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Link CCA Super to Global Sub"]%0A%0A   generate CCAB1:Link_To_Global (Test) to firstCCAB%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 35%0A%0A#-----------------------------------------------------------------------------------%0A# Test 36 - Polymorphically deliver event to Global sub via CCA super%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Gen poly event to Global sub"]%0A%0A   generate CS1:C_Fired (Test) to firstCCASuper%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 36%0A%0A#-----------------------------------------------------------------------------------%0A# Test 37 - Unlink CCA Super from Global Sub%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Unlink CCA Super from Glob Sub"]%0A%0A   generate CCAB2:Unlink_From_Global (Test) to firstCCAB%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 37%0A%0A#-----------------------------------------------------------------------------------%0A# Test 38 - Delete all CCA instances%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Delete all CCA instances"]%0A%0A   generate CSB2:Delete_Instances (Test) to firstCCASubB%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 38%0A%0A#-----------------------------------------------------------------------------------%0A# Test 39 - Delete all Global instances%0A#-----------------------------------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "TCA CCA Tagging"%2C "Scenario"%2C "Delete all Global instances"]%0A%0A   generate GSC2:Delete_Instances (Test) to firstGlobalSubC%0A%0A   Test = Test + 1%0A%0A   LocalCount = LocalCount + 1%0A%0A# End Test 39%0A%0A#-----------------------------------------------------------------------------------%0A%0A%0Atemp = instResult.CCATotal%0Atemp = temp + LocalCount%0AinstResult.CCATotal = temp%0A%0Amy_test.Current_Test_Number = Test,,,,,,,
codeblock,,,,,,,,
pragma,cca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,7,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, CCA_Events%0A,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,TCA_Add_One,1,,,
parameter,Input_Val,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Return_Val,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Input_Val %0A%0Atemp = temp + 1%0A%0AReturn_Val = temp,,,,,,,
codeblock,,,,,,,,
pragma,tca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,CCA_Add_One,2,,,
parameter,Input_Val,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Return_Val,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Input_Val %0A%0Atemp = temp + 1%0A%0AReturn_Val = temp,,,,,,,
codeblock,,,,,,,,
pragma,cca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,Global_Add_One,3,,,
parameter,Input_Val,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Return_Val,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Input_Val %0A%0Atemp = temp + 1%0A%0AReturn_Val = temp,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
terminator,Report_Results,RPT,,,,,,
routine,CT_Tags,,public,Start_Test,1,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Requid,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Invoking_Domain,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Invoking_Object,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Purpose,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,Test_Passed,2,,,
parameter,Test_Object_Domain,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Value,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,Test_Failed,3,,,
parameter,Failed_Domain_Object,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Failed_Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Failed_Test_Value,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,Test_Unsupported,4,,,
parameter,Unsupported_Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,Test_Text,5,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Free_Text,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,Domain_Test_Start,6,,,
parameter,This_Domain_Name,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,Domain_Test_Finished,7,,,
parameter,This_Domain_Name,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,Specify_Requid,8,,,
parameter,Requid_Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,The_Requid_Itself,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
terminator,,,,,,,,
terminator,Navigate_TCA,Nav_TCA,,,,,,
routine,CT_Tags,,public,Navigate_TCA,1,,,
parameter,TCA_IH,in,,,,,,
typeref,instance of TCA_CP,,,,,,,
typeref,,,,,,,,
parameter,Return_Val,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,Create_And_Link_TCA,2,,,
parameter,TCA_IH,in,,,,,,
typeref,instance of TCA_CP,,,,,,,
typeref,,,,,,,,
parameter,Result,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,Unlink_TCA,3,,,
parameter,TCA_IH,in,,,,,,
typeref,instance of TCA_CP,,,,,,,
typeref,,,,,,,,
parameter,Return_Val,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
terminator,,,,,,,,
terminator,Navigate_Global,Nav_Glob,,,,,,
routine,CT_Tags,,public,Create_And_Link_Glob,1,,,
parameter,Glob_IH,in,,,,,,
typeref,instance of Global_CP,,,,,,,
typeref,,,,,,,,
parameter,Return_Val,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,Navigate_Glob,2,,,
parameter,Glob_IH,in,,,,,,
typeref,instance of Global_CP,,,,,,,
typeref,,,,,,,,
parameter,Return_Val,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,Unlink_Glob,3,,,
parameter,Glob_IH,in,,,,,,
typeref,instance of Global_CP,,,,,,,
typeref,,,,,,,,
parameter,Return_Val,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
terminator,,,,,,,,
terminator,Navigate_CCA,Nav_CCA,,,,,,
routine,CT_Tags,,public,Create_And_Link_CCA,1,,,
parameter,CCA_IH,in,,,,,,
typeref,instance of CCA_CP,,,,,,,
typeref,,,,,,,,
parameter,Return_Val,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,Navigate_CCA,2,,,
parameter,CCA_IH,in,,,,,,
typeref,instance of CCA_CP,,,,,,,
typeref,,,,,,,,
parameter,Return_Val,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,Unlink_CCA,3,,,
parameter,CCA_IH,in,,,,,,
typeref,instance of CCA_CP,,,,,,,
typeref,,,,,,,,
parameter,Return_Val,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
terminator,,,,,,,,
terminator,Add_One,AO,,,,,,
routine,CT_Tags,,public,TCA_Add,1,,,
parameter,Input_Int,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Output_Int,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,Global_Add,2,,,
parameter,Input_Int,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Output_Int,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,CT_Tags,,public,CCA_Add,3,,,
parameter,Input_int,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Output_Int,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
terminator,,,,,,,,
regularrel,R1,,,,,,,
participation,CT_Tags,CCA_B,has,unconditionally,one,CT_Tags,CCA_A,
participation,CT_Tags,CCA_A,has,unconditionally,one,CT_Tags,CCA_B,
participation,,,,,,,,
pragma,Class_B,,,,,,,
pragmaitem,"CCA_B",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
pragma,Class_A,,,,,,,
pragmaitem,"CCA_A",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
regularrel,,,,,,,,
regularrel,R2,,,,,,,
participation,CT_Tags,TCA_B,has,unconditionally,one,CT_Tags,TCA_A,
participation,CT_Tags,TCA_A,has,unconditionally,one,CT_Tags,TCA_B,
participation,,,,,,,,
pragma,Class_B,,,,,,,
pragmaitem,"TCA_B",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
pragma,Class_A,,,,,,,
pragmaitem,"TCA_A",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
regularrel,,,,,,,,
regularrel,R3,,,,,,,
participation,CT_Tags,CCA_C,has,unconditionally,one,CT_Tags,Global_A,
participation,CT_Tags,Global_A,has,unconditionally,one,CT_Tags,CCA_C,
participation,,,,,,,,
pragma,Class_B,,,,,,,
pragmaitem,"CCA_C",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
pragma,Class_A,,,,,,,
pragmaitem,"Global_A",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
regularrel,,,,,,,,
regularrel,R4,,,,,,,
participation,CT_Tags,Global_B,has,unconditionally,one,CT_Tags,TCA_C,
participation,CT_Tags,TCA_C,has,unconditionally,one,CT_Tags,Global_B,
participation,,,,,,,,
pragma,Class_B,,,,,,,
pragmaitem,"Global_B",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
pragma,Class_A,,,,,,,
pragmaitem,"TCA_C",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
regularrel,,,,,,,,
regularrel,R8,,,,,,,
participation,CT_Tags,TCA_D,has,unconditionally,one,CT_Tags,TCA_SubA,
participation,CT_Tags,TCA_SubA,has,unconditionally,one,CT_Tags,TCA_D,
participation,,,,,,,,
pragma,Class_B,,,,,,,
pragmaitem,"TCA_D",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
pragma,Class_A,,,,,,,
pragmaitem,"TCA_SubA",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
regularrel,,,,,,,,
regularrel,R9,,,,,,,
participation,CT_Tags,TCA_E,has,unconditionally,one,CT_Tags,CCA_SubB,
participation,CT_Tags,CCA_SubB,has,unconditionally,one,CT_Tags,TCA_E,
participation,,,,,,,,
pragma,Class_B,,,,,,,
pragmaitem,"TCA_E",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
pragma,Class_A,,,,,,,
pragmaitem,"CCA_SubB",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
regularrel,,,,,,,,
regularrel,R10,,,,,,,
participation,CT_Tags,TCA_F,has,unconditionally,one,CT_Tags,Global_SubC,
participation,CT_Tags,Global_SubC,has,unconditionally,one,CT_Tags,TCA_F,
participation,,,,,,,,
pragma,Class_B,,,,,,,
pragmaitem,"TCA_F",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
pragma,Class_A,,,,,,,
pragmaitem,"Global_SubC",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
regularrel,,,,,,,,
regularrel,R11,,,,,,,
participation,CT_Tags,TCA_E,has,unconditionally,one,CT_Tags,TCA_F,
participation,CT_Tags,TCA_F,has,unconditionally,one,CT_Tags,TCA_E,
participation,,,,,,,,
pragma,Class_B,,,,,,,
pragmaitem,"TCA_E",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
pragma,Class_A,,,,,,,
pragmaitem,"TCA_F",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
regularrel,,,,,,,,
regularrel,R12,,,,,,,
participation,CT_Tags,TCA_D,has,unconditionally,one,CT_Tags,TCA_E,
participation,CT_Tags,TCA_E,has,unconditionally,one,CT_Tags,TCA_D,
participation,,,,,,,,
pragma,Class_B,,,,,,,
pragmaitem,"TCA_D",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
pragma,Class_A,,,,,,,
pragmaitem,"TCA_E",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
regularrel,,,,,,,,
regularrel,R13,,,,,,,
participation,CT_Tags,Global_A,has,unconditionally,one,CT_Tags,Global_B,
participation,CT_Tags,Global_B,has,unconditionally,one,CT_Tags,Global_A,
participation,,,,,,,,
pragma,Class_B,,,,,,,
pragmaitem,"Global_A",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
pragma,Class_A,,,,,,,
pragmaitem,"Global_B",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
regularrel,,,,,,,,
subsuper,R5,,,,,,,
participation,,Global_Super,,,,,,
participation,,CCA_SubB,,,,,Global_Super,
participation,,TCA_SubA,,,,,Global_Super,
participation,,Global_SubC,,,,,Global_Super,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R6,,,,,,,
participation,,TCA_Super,,,,,,
participation,,CCA_SubE,,,,,TCA_Super,
participation,,TCA_SubD,,,,,TCA_Super,
participation,,Global_SubF,,,,,TCA_Super,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R7,,,,,,,
participation,,CCA_Super,,,,,,
participation,,CCA_SubH,,,,,CCA_Super,
participation,,Global_SubI,,,,,CCA_Super,
participation,,TCA_SubG,,,,,CCA_Super,
participation,,,,,,,,
subsuper,,,,,,,,
object,CCA_A,CCAA,2,,,,,
attribute,idCA,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,CARef,,,idCA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,CAPassed,,,CARef,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,CALinked,,,CAPassed,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idCB,,,CALinked,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R1,,has,CCA_B,idCB,,,
referential,,,,,,,,
attribute,,,,,,,,
operation,CT_Tags,CCA_A,public,Add_One,,,1,
parameter,Input_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Returning_No,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,%0A   temp = Input_No%0A   temp = temp + 1%0A%0A   Returning_No = temp,,,,,,,
codeblock,,,,,,,,
operation,,,,,,,,
state,,CCA_A,Idle,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,if this.CARef = 1 then%0A%0A   if !this.CAPassed then%0A      this.CAPassed = TRUE%0A      [] = RPT2:Test_Passed["Gen event to CCA object"%2C Test%2C 0]%0A   else%0A%0A      if this.CALinked then  %0A         [] = RPT2:Test_Passed["Global Super CCA Sub linked"%2C Test%2C 0]%0A      else%0A         [] = RPT2:Test_Passed["Global Super CCA Sub unlinked"%2C Test%2C -10]%0A      endif%0A%0A   endif%0A%0Aelse%0A   [] = RPT3:Test_Failed["Gen event to CCA object"%2C Test%2C this.CARef]%0Aendif%0A%0A,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,CCA_A,Link_Global_Super_To_CCA_Sub,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instGS = find-one Global_Super where idGS = 1%0A%0AinstCSB = find-one CCA_SubB where idCSB = 1%0A%0AinstRes = find-one Results where idRes = 1%0Atemp = instRes.ResRef%0A%0AinstGS.GSRef = temp%0A%0Aif instGS != UNDEFINED and instCSB != UNDEFINED then%0A   link instGS R5 instCSB%0A%0A   newCSB = instGS -> R5.CCA_SubB%0A%0A   if newCSB != UNDEFINED then%0A      this.CALinked = TRUE%0A   endif%0A%0Aendif%0A%0A%0Agenerate CCAA1:Link_SuperSub (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,CCA_A,Increment_Ref,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,temp = this.CARef%0Atemp = temp + 1%0Athis.CARef = temp%0A%0Agenerate CCAA2:Fired(Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Link_SuperSub,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Fired,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Link_SuperSub,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Link_SuperSub,Link_Global_Super_To_CCA_Sub,,,
transition,,,,,,,,
transition,Idle,,,Fired,Increment_Ref,,,
transition,,,,,,,,
transition,Link_Global_Super_To_CCA_Sub,,,Link_SuperSub,Idle,,,
transition,,,,,,,,
transition,Link_Global_Super_To_CCA_Sub,,,Fired,Ignore,,,
transition,,,,,,,,
transition,Increment_Ref,,,Link_SuperSub,Ignore,,,
transition,,,,,,,,
transition,Increment_Ref,,,Fired,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
pragma,cca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,CCA_B,CCAB,3,,,,,
attribute,idCB,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,CCA_B,Idle,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
state,,,,,,,,
state,,CCA_B,Link_To_Global,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instGSI = find-one Global_SubI where idGSI = 1%0AinstCS  = find-one CCA_Super where idCS = 1%0A%0Alink instCS R7 instGSI%0A%0AnewGSI = instCS -> R7.Global_SubI%0A%0Aif newGSI != UNDEFINED then%0A   [] = RPT2:Test_Passed["Link succesefull"%2C Test%2C 0]%0Aelse%0A   [] = RPT3:Test_Failed["Link unsuccesefull"%2C Test%2C -10]%0Aendif%0A%0Agenerate CCAB1:Link_To_Global(Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,CCA_B,Unlink_From_Global,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instCS = find-one CCA_Super where idCS = 1%0AinstGSI = instCS -> R7.Global_SubI%0A%0Aunlink instCS R7 instGSI%0A%0AnewGSI = instCS -> R7.Global_SubI%0A%0Aif newGSI = UNDEFINED then%0A   [] = RPT2:Test_Passed["Unlink succesefull"%2C Test%2C 0]%0Aelse%0A   [] = RPT3:Test_Failed["Unlink unsuccesefull"%2C Test%2C -10]%0Aendif%0A%0Agenerate CCAB2:Unlink_From_Global(Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Link_To_Global,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Unlink_From_Global,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Link_To_Global,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Unlink_From_Global,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Link_To_Global,Link_To_Global,,,
transition,,,,,,,,
transition,Idle,,,Unlink_From_Global,Unlink_From_Global,,,
transition,,,,,,,,
transition,Link_To_Global,,,Link_To_Global,Idle,,,
transition,,,,,,,,
transition,Link_To_Global,,,Unlink_From_Global,Ignore,,,
transition,,,,,,,,
transition,Unlink_From_Global,,,Link_To_Global,Idle,,,
transition,,,,,,,,
transition,Unlink_From_Global,,,Unlink_From_Global,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
pragma,cca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,CCA_C,CCAC,7,,,,,
attribute,idCC,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
pragma,cca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,CCA_CP,CCP,29,,,,,
attribute,idCCP,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
pragma,cca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,CCA_SubB,CSB,14,,,,,
attribute,idCSB,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idGS,preferred,,idCSB,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R5,,,,idGS,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,idTE,,,idGS,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R9,,has,TCA_E,idTE,,,
referential,,,,,,,,
attribute,,,,,,,,
state,,CCA_SubB,Idle,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
state,,,,,,,,
state,,CCA_SubB,Unlink_Global_Super_From_CCA_Sub,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instGS = this -> R5.Global_Super%0A%0Aif instGS != UNDEFINED then%0A%0A   unlink this R5 instGS%0A%0A   tmpInst = this -> R5.Global_Super%0A%0A   if tmpInst = UNDEFINED then%0A      [] = RPT2:Test_Passed["Unlink succesefull"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Unlink unsuccesefull"%2C Test%2C -10]%0A   endif%0A%0Aelse%0A   [] = RPT3:Test_Failed["Link undefined"%2C Test%2C -10]%0Aendif%0A%0Agenerate CSB3:Finished (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,CCA_SubB,Set_Flag,,4,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instGS = find-one Global_Super where idGS = 1%0AinstRes = find-one Results where idRes = 1 %0A%0AinstGS.CCAFlag = TRUE%0A%0Atemp = instGS.GSRef%0Atemp = temp + 1%0AinstGS.GSRef = temp%0AinstRes.ResRef = temp%0A%0Agenerate CSB3:Finished (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,CCA_SubB,Delete_Instances,terminal,5,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,   {SetCSB} = find-all CCA_SubB%0A   for instCSB in {SetCSB} do%0A      delete instCSB%0A   endfor%0A%0A   {SetCSE} = find-all CCA_SubE%0A   for instCSE in {SetCSE} do%0A      delete instCSE%0A   endfor%0A%0A   {SetCS} = find-all CCA_Super%0A   for instCS in {SetCS} do%0A      delete instCS%0A   endfor%0A%0A   {SetCSH} = find-all CCA_SubH%0A   for instCSH in {SetCSH} do%0A      delete instCSH%0A   endfor%0A%0A   {SetCSE} = find-all CCA_SubE%0A   for instCSE in {SetCSE} do%0A      delete instCSE%0A   endfor%0A%0A   {SetCA} = find-all CCA_A%0A   for instCA in {SetCA} do%0A      delete instCA%0A   endfor%0A%0A   {SetCB} = find-all CCA_B%0A   for instCB in {SetCB} do%0A      delete instCB%0A   endfor%0A%0A   {SetCC} = find-all CCA_C%0A   for instCC in {SetCC} do%0A      delete instCC%0A   endfor%0A%0A   {SetCSB} = find-all CCA_SubB%0A   {SetCSE} = find-all CCA_SubE%0A   {SetCS}  = find-all CCA_Super%0A   {SetCSH} = find-all CCA_SubH%0A   {SetCA}  = find-all CCA_A%0A   {SetCB}  = find-all CCA_B%0A   {SetCC}  = find-all CCA_C%0A%0A   if countof {SetCSB} = 0 then%0A%0A      if countof {SetCSE} = 0 then%0A%0A         if countof {SetCS} = 0 then%0A%0A            if countof {SetCSH} = 0 then%0A%0A               if countof {SetCA} = 0 then%0A%0A                  if countof {SetCB} = 0 then%0A%0A                     if countof {SetCC} = 0 then%0A                        [] = RPT2:Test_Passed["Delete all CCA instances"%2C Test%2C 0]%0A                     else%0A                        [] = RPT3:Test_Failed["Delete all CCA instances"%2C Test%2C -10]%0A                     endif%0A%0A                  else%0A                     [] = RPT3:Test_Failed["Delete all CCA instances"%2C Test%2C -20]%0A                  endif%0A%0A               else%0A                  [] = RPT3:Test_Failed["Delete all CCA instances"%2C Test%2C -30]%0A               endif%0A%0A            else%0A               [] = RPT3:Test_Failed["Delete all CCA instances"%2C Test%2C -40]%0A            endif%0A%0A         else%0A            [] = RPT3:Test_Failed["Delete all CCA instances"%2C Test%2C -50]%0A         endif%0A%0A      else%0A         [] = RPT3:Test_Failed["Delete all CCA instances"%2C Test%2C -60]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed["Delete all CCA instances"%2C Test%2C -10]%0A   endif%0A,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Unlink_SuperSub,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Delete_Instances,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finished,,3,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,Global_Super,Poly_Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,Global_Super,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Unlink_SuperSub,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Delete_Instances,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,Global_Super,Poly_Fired,Set_Flag,,,
transition,,,,,,,,
transition,Idle,,Global_Super,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Unlink_SuperSub,Unlink_Global_Super_From_CCA_Sub,,,
transition,,,,,,,,
transition,Idle,,,Delete_Instances,Delete_Instances,,,
transition,,,,,,,,
transition,Idle,,,Finished,Idle,,,
transition,,,,,,,,
transition,Unlink_Global_Super_From_CCA_Sub,,Global_Super,Poly_Fired,Ignore,,,
transition,,,,,,,,
transition,Unlink_Global_Super_From_CCA_Sub,,Global_Super,Finished,Ignore,,,
transition,,,,,,,,
transition,Unlink_Global_Super_From_CCA_Sub,,,Unlink_SuperSub,Ignore,,,
transition,,,,,,,,
transition,Unlink_Global_Super_From_CCA_Sub,,,Delete_Instances,Ignore,,,
transition,,,,,,,,
transition,Unlink_Global_Super_From_CCA_Sub,,,Finished,Idle,,,
transition,,,,,,,,
transition,Set_Flag,,Global_Super,Poly_Fired,Ignore,,,
transition,,,,,,,,
transition,Set_Flag,,Global_Super,Finished,Ignore,,,
transition,,,,,,,,
transition,Set_Flag,,,Unlink_SuperSub,Ignore,,,
transition,,,,,,,,
transition,Set_Flag,,,Delete_Instances,Ignore,,,
transition,,,,,,,,
transition,Set_Flag,,,Finished,Idle,,,
transition,,,,,,,,
transition,Delete_Instances,,Global_Super,Poly_Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Delete_Instances,,Global_Super,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Delete_Instances,,,Unlink_SuperSub,Cannot_Happen,,,
transition,,,,,,,,
transition,Delete_Instances,,,Delete_Instances,Cannot_Happen,,,
transition,,,,,,,,
transition,Delete_Instances,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transitiontable,,,,,,,,
pragma,cca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,CCA_SubE,CSE,18,,,,,
attribute,idCSE,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,CSERef,,,idCSE,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,CSELinked,,,CSERef,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,CSEPassed,,,CSELinked,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idTS,preferred,,CSEPassed,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R6,,,,idTS,,,
referential,,,,,,,,
attribute,,,,,,,,
state,,CCA_SubE,Idle,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,if this.CSERef = 1 then%0A%0A   if !this.CSEPassed then%0A      this.CSEPassed = TRUE%0A      [] = RPT2:Test_Passed["Gen event to CCA object"%2C Test%2C 0]%0A   else%0A%0A      if this.CSELinked then  %0A         [] = RPT2:Test_Passed["CCA Super CCA Sub linked"%2C Test%2C 0]%0A      else%0A         [] = RPT2:Test_Passed["CCA Super CCA Sub not linked"%2C Test%2C -10]%0A      endif%0A%0A   endif%0A%0Aelse%0A   [] = RPT3:Test_Failed["Gen event to CCA object"%2C Test%2C this.CSERef]%0Aendif%0A%0A,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,CCA_SubE,Link_CCA_Super_CCA_Sub,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instCS  = find-one CCA_Super where idCS  = 1%0AinstCSH = find-one CCA_SubH  where idCSH = 1%0A%0AnewCSH = instCS -> R7.CCA_SubH%0Aif newCSH = UNDEFINED then%0A   link instCS R7 instCSH%0A%0A   newCSH = instCS -> R7.CCA_SubH%0A%0A   if newCSH != UNDEFINED then%0A%0A      if newCSH.idCSH = 1 then%0A         this.CSELinked = TRUE%0A      endif%0A%0A   endif%0A%0Aendif%0A   generate CSE1:Link_SuperSub (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,CCA_SubE,Start,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,temp = this.CSERef%0Atemp = temp + 1%0Athis.CSERef = temp%0A%0Agenerate CSE2:Start(Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Link_SuperSub,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Start,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,TCA_Super,Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,TCA_Super,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Link_SuperSub,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Start,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,TCA_Super,Fired,Ignore,,,
transition,,,,,,,,
transition,Idle,,TCA_Super,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Link_SuperSub,Link_CCA_Super_CCA_Sub,,,
transition,,,,,,,,
transition,Idle,,,Start,Start,,,
transition,,,,,,,,
transition,Link_CCA_Super_CCA_Sub,,TCA_Super,Fired,Ignore,,,
transition,,,,,,,,
transition,Link_CCA_Super_CCA_Sub,,TCA_Super,Finished,Ignore,,,
transition,,,,,,,,
transition,Link_CCA_Super_CCA_Sub,,,Link_SuperSub,Idle,,,
transition,,,,,,,,
transition,Link_CCA_Super_CCA_Sub,,,Start,Start,,,
transition,,,,,,,,
transition,Start,,TCA_Super,Fired,Ignore,,,
transition,,,,,,,,
transition,Start,,TCA_Super,Finished,Ignore,,,
transition,,,,,,,,
transition,Start,,,Link_SuperSub,Link_CCA_Super_CCA_Sub,,,
transition,,,,,,,,
transition,Start,,,Start,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
pragma,cca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,CCA_SubH,CSH,22,,,,,
attribute,idCSH,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idCS,preferred,,idCSH,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R7,,,,idCS,,,
referential,,,,,,,,
attribute,,,,,,,,
state,,CCA_SubH,Idle,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
state,,,,,,,,
state,,CCA_SubH,Set_Flag,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instCS = this -> R7.CCA_Super%0A%0AinstCS.CCAFlag = TRUE%0A%0Atemp = instCS.CSRef%0Atemp = temp + 1%0AinstCS.CSRef = temp%0A%0Agenerate CSH2:Finished (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,CCA_SubH,Unlink_SuperSub,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instCS  = this -> R7.CCA_Super%0A%0Aunlink this R7 instCS%0A%0AtmpInst = this -> R7.CCA_Super%0A%0A   if tmpInst = UNDEFINED then%0A      [] = RPT2:Test_Passed["Unlink succesefull"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Unlink unsuccesefull"%2C Test%2C -10]%0A   endif%0A%0Agenerate CSH1:Unlink_SuperSub (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Unlink_SuperSub,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finished,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,CCA_Super,C_Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,CCA_Super,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Unlink_SuperSub,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,CCA_Super,C_Fired,Set_Flag,,,
transition,,,,,,,,
transition,Idle,,CCA_Super,Finished,Idle,,,
transition,,,,,,,,
transition,Idle,,,Unlink_SuperSub,Unlink_SuperSub,,,
transition,,,,,,,,
transition,Idle,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Set_Flag,,CCA_Super,C_Fired,Idle,,,
transition,,,,,,,,
transition,Set_Flag,,CCA_Super,Finished,Idle,,,
transition,,,,,,,,
transition,Set_Flag,,,Unlink_SuperSub,Unlink_SuperSub,,,
transition,,,,,,,,
transition,Set_Flag,,,Finished,Idle,,,
transition,,,,,,,,
transition,Unlink_SuperSub,,CCA_Super,C_Fired,Set_Flag,,,
transition,,,,,,,,
transition,Unlink_SuperSub,,CCA_Super,Finished,Idle,,,
transition,,,,,,,,
transition,Unlink_SuperSub,,,Unlink_SuperSub,Idle,,,
transition,,,,,,,,
transition,Unlink_SuperSub,,,Finished,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
pragma,cca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,CCA_Super,CS,20,,,,,
attribute,idCS,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,CSRef,,,idCS,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,CCAFlag,,,CSRef,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,GlobalFlag,,,CCAFlag,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,CCA_Super,Idle,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
state,,,,,,,,
state,,CCA_Super,Start,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,generate CS2:Finished(Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,CCA_Super,Check,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,if this.CSRef = 1 then%0A%0A   if this.CCAFlag and !this.GlobalFlag then%0A      this.CSRef = 2%0A      [] = RPT2:Test_Passed["CCA Poly Event"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["CCA Poly Event"%2C Test%2C -10]%0A   endif%0A%0Aelse%0A%0A   if this.CSRef = 2 then%0A      %0A      instGSI = this -> R7.Global_SubI%0A      if instGSI.GlobalFlag then%0A         [] = RPT2:Test_Passed["Global Poly Event"%2C Test%2C 0]%0A      else%0A         [] = RPT3:Test_Failed["Global Poly Event"%2C Test%2C -10]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed["Global Poly Event"%2C Test%2C -20]%0A   endif%0A%0Aendif%0A%0Agenerate CS2:Finished(Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,C_Fired,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finished,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,C_Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,C_Fired,Start,,,
transition,,,,,,,,
transition,Idle,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Start,,,C_Fired,Idle,,,
transition,,,,,,,,
transition,Start,,,Finished,Check,,,
transition,,,,,,,,
transition,Check,,,C_Fired,Idle,,,
transition,,,,,,,,
transition,Check,,,Finished,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
pragma,cca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,Global_A,GA,6,,,,,
attribute,idGA,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idCC,,,idGA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R3,,has,CCA_C,idCC,,,
referential,,,,,,,,
attribute,,,,,,,,
operation,CT_Tags,Global_A,public,Add_One,,,1,
parameter,Input_Value,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Output_Value,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,Output_Value = Input_Value + 1,,,,,,,
codeblock,,,,,,,,
operation,,,,,,,,
object,,,,,,,,
object,Global_B,GB,8,,,,,
attribute,idGB,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idGA,,,idGB,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R13,,has,Global_A,idGA,,,
referential,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Global_CP,GCP,30,,,,,
attribute,idGCP,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Global_SubC,GSC,15,,,,,
attribute,idGSC,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idGS,preferred,,idGSC,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R5,,,,idGS,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,idTF,,,idGS,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R10,,has,TCA_F,idTF,,,
referential,,,,,,,,
attribute,,,,,,,,
state,,Global_SubC,Idle,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
state,,,,,,,,
state,,Global_SubC,Unlink_Global_Super_from_Global_Sub,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instGS = this -> R5.Global_Super%0A%0AinstRes = find-one Results where idRes = 1%0A%0Atemp = instGS.GSRef%0A%0AinstRes.ResRef = temp%0A%0A%0Aunlink this R5 instGS%0A%0AtmpInst = this -> R5.Global_Super%0A%0A   if tmpInst = UNDEFINED then%0A      [] = RPT2:Test_Passed["Unlink succesefull"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Unlink unsuccesefull"%2C Test%2C -10]%0A   endif%0A%0Agenerate GSC3:Finished (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Global_SubC,Set_Flag,,4,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instGS = find-one Global_Super where idGS = 1%0A%0AinstGS.GlobalFlag = TRUE%0A%0Atemp = instGS.GSRef%0Atemp = temp + 1%0AinstGS.GSRef = temp%0A%0Agenerate GSC3:Finished (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Global_SubC,Delete_Instances,terminal,5,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,{SetGS} = find-all Global_Super%0Afor instGS in {SetGS} do%0A   delete instGS%0Aendfor%0A%0A{SetGSC} = find-all Global_SubC%0Afor instGSC in {SetGSC} do%0A   delete instGSC%0Aendfor%0A%0A{SetGSF} = find-all Global_SubF%0Afor instGSF in {SetGSF} do%0A   delete instGSF%0Aendfor%0A%0A{SetGSI} = find-all Global_SubI%0Afor instGSI in {SetGSI} do%0A   delete instGSI%0Aendfor%0A%0A{SetGA} = find-all Global_A%0Afor instGA in {SetGA} do%0A   delete instGA%0Aendfor%0A%0A{SetGB} = find-all Global_B%0Afor instGB in {SetGB} do%0A   delete instGB%0Aendfor%0A%0A{SetGS}  = find-all Global_Super%0A{SetGSC} = find-all Global_SubC%0A{SetGSF} = find-all Global_SubF%0A{SetGSI} = find-all Global_SubI%0A{SetGA}  = find-all Global_A%0A{SetGB}  = find-all Global_B%0A%0Aif countof {SetGS} = 0 then%0A%0A   if countof {SetGSC} = 0 then%0A%0A      if countof {SetGSF} = 0 then%0A%0A         if countof {SetGSI} = 0 then%0A%0A            if countof {SetGA} = 0 then%0A%0A               if countof {SetGB} = 0 then%0A                  [] = RPT2:Test_Passed["Global instances deleted"%2C Test%2C 0]%0A               else%0A                  [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -10]%0A               endif%0A%0A            else%0A               [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -20]%0A            endif%0A%0A         else%0A            [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -30]%0A         endif%0A%0A      else%0A         [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -40]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -50]%0A   endif%0A%0Aelse%0A   [] = RPT3:Test_Failed["Global instances not deleted"%2C Test%2C -60]%0Aendif%0A,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Global_SubC,Link_Global_Super_to_Global_Sub,,6,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instGS = find-one Global_Super where idGS = 1%0A%0Alink this R5 instGS%0A%0AnewGS = this -> R5.Global_Super%0A%0Aif newGS != UNDEFINED then%0A   [] = RPT2:Test_Passed["Link succesefull"%2C Test%2C 0]%0Aelse%0A   [] = RPT3:Test_Failed["Link unsuccesefull"%2C Test%2C -10]%0Aendif%0A%0Agenerate GSC3:Finished (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Unlink_SuperSub,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Delete_Instances,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finished,,3,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Link_SuperSub,,4,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,Global_Super,Poly_Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,Global_Super,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Unlink_SuperSub,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Delete_Instances,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Link_SuperSub,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,Global_Super,Poly_Fired,Set_Flag,,,
transition,,,,,,,,
transition,Idle,,Global_Super,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Unlink_SuperSub,Unlink_Global_Super_from_Global_Sub,,,
transition,,,,,,,,
transition,Idle,,,Delete_Instances,Delete_Instances,,,
transition,,,,,,,,
transition,Idle,,,Finished,Idle,,,
transition,,,,,,,,
transition,Idle,,,Link_SuperSub,Link_Global_Super_to_Global_Sub,,,
transition,,,,,,,,
transition,Unlink_Global_Super_from_Global_Sub,,Global_Super,Poly_Fired,Ignore,,,
transition,,,,,,,,
transition,Unlink_Global_Super_from_Global_Sub,,Global_Super,Finished,Ignore,,,
transition,,,,,,,,
transition,Unlink_Global_Super_from_Global_Sub,,,Unlink_SuperSub,Ignore,,,
transition,,,,,,,,
transition,Unlink_Global_Super_from_Global_Sub,,,Delete_Instances,Ignore,,,
transition,,,,,,,,
transition,Unlink_Global_Super_from_Global_Sub,,,Finished,Idle,,,
transition,,,,,,,,
transition,Unlink_Global_Super_from_Global_Sub,,,Link_SuperSub,Ignore,,,
transition,,,,,,,,
transition,Set_Flag,,Global_Super,Poly_Fired,Ignore,,,
transition,,,,,,,,
transition,Set_Flag,,Global_Super,Finished,Ignore,,,
transition,,,,,,,,
transition,Set_Flag,,,Unlink_SuperSub,Ignore,,,
transition,,,,,,,,
transition,Set_Flag,,,Delete_Instances,Ignore,,,
transition,,,,,,,,
transition,Set_Flag,,,Finished,Idle,,,
transition,,,,,,,,
transition,Set_Flag,,,Link_SuperSub,Ignore,,,
transition,,,,,,,,
transition,Delete_Instances,,Global_Super,Poly_Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Delete_Instances,,Global_Super,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Delete_Instances,,,Unlink_SuperSub,Cannot_Happen,,,
transition,,,,,,,,
transition,Delete_Instances,,,Delete_Instances,Cannot_Happen,,,
transition,,,,,,,,
transition,Delete_Instances,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Delete_Instances,,,Link_SuperSub,Cannot_Happen,,,
transition,,,,,,,,
transition,Link_Global_Super_to_Global_Sub,,Global_Super,Poly_Fired,Ignore,,,
transition,,,,,,,,
transition,Link_Global_Super_to_Global_Sub,,Global_Super,Finished,Ignore,,,
transition,,,,,,,,
transition,Link_Global_Super_to_Global_Sub,,,Unlink_SuperSub,Ignore,,,
transition,,,,,,,,
transition,Link_Global_Super_to_Global_Sub,,,Delete_Instances,Ignore,,,
transition,,,,,,,,
transition,Link_Global_Super_to_Global_Sub,,,Finished,Idle,,,
transition,,,,,,,,
transition,Link_Global_Super_to_Global_Sub,,,Link_SuperSub,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Global_SubF,GSF,19,,,,,
attribute,idGSF,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,GlobalFlag,,,idGSF,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idTS,preferred,,GlobalFlag,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R6,,,,idTS,,,
referential,,,,,,,,
attribute,,,,,,,,
state,,Global_SubF,Idle,,5,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,this.GlobalFlag = TRUE,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,TCA_Super,Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,TCA_Super,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,TCA_Super,Fired,Idle,,,
transition,,,,,,,,
transition,Idle,,TCA_Super,Finished,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Global_SubI,GSI,23,,,,,
attribute,idGSI,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,GlobalFlag,,,idGSI,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idCS,preferred,,GlobalFlag,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R7,,,,idCS,,,
referential,,,,,,,,
attribute,,,,,,,,
state,,Global_SubI,Idle,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,this.GlobalFlag = TRUE,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,CCA_Super,C_Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,CCA_Super,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,CCA_Super,C_Fired,Idle,,,
transition,,,,,,,,
transition,Idle,,CCA_Super,Finished,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Global_Super,GS,12,,,,,
attribute,idGS,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,GSRef,,,idGS,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,CCAFlag,,,GSRef,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,TCAFlag,,,CCAFlag,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,GlobalFlag,,,TCAFlag,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Global_Super,Idle,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instRes = find-one Results where idRes = 1%0A%0Aif this.GSRef = 1 then%0A%0A   if instRes.TCAFlag then%0A%0A      if this.TCAFlag then%0A         [] = RPT2:Test_Passed["TCA Poly Event"%2C Test%2C 0]%0A      else%0A         [] = RPT3:Test_Failed["TCA Poly Event"%2C Test%2C -10]%0A      endif%0A%0A   else%0A%0A      if instRes.CCAFlag then%0A%0A         if this.CCAFlag then%0A            [] = RPT2:Test_Passed["CCA Poly Event"%2C Test%2C 0]%0A         else%0A            [] = RPT3:Test_Failed["CCA Poly Event"%2C Test%2C -10]%0A         endif%0A%0A      else%0A         [] = RPT3:Test_Failed["Something terrible has happened"%2C Test%2C -10]%0A      endif%0A%0A   endif%0A%0Aelse%0A%0A   if this.GSRef = 2 then%0A%0A      if this.GlobalFlag then%0A        this.GlobalFlag = FALSE%0A        [] = RPT2:Test_Passed["Global Poly Event"%2C Test%2C 0]%0A      else%0A         [] = RPT3:Test_Failed["Global Poly Event"%2C Test%2C -10]%0A      endif%0A%0A   else%0A%0A      if this.GSRef = 3 then%0A%0A         if this.CCAFlag then%0A            [] = RPT2:Test_Passed["CCA Poly Event"%2C Test%2C 0]%0A         else%0A            [] = RPT3:Test_Failed["CCA Poly Event"%2C Test%2C -10]%0A         endif%0A%0A      else%0A%0A         if this.GSRef = 4 then%0A%0A            if this.CCAFlag then%0A               [] = RPT2:Test_Passed["Global Poly Event"%2C Test%2C 0]%0A            else%0A               [] = RPT3:Test_Failed["Global Poly Event"%2C Test%2C -10]%0A            endif%0A%0A         else%0A            [] = RPT3:Test_Failed["Something terrible has happened"%2C Test%2C -10]%0A         endif%0A%0A      endif%0A%0A   endif%0A%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Global_Super,Start,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,generate GS2:Finished (Test) to this%0A,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Poly_Fired,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finished,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Poly_Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Poly_Fired,Start,,,
transition,,,,,,,,
transition,Idle,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Start,,,Poly_Fired,Idle,,,
transition,,,,,,,,
transition,Start,,,Finished,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Report_Data,REPORT,11,,,,,
attribute,Reported_Domain_Number,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Results,RES,10,,,,,
attribute,CCATotal,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,TCATotal,,,CCATotal,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,CCAFlag,,,TCATotal,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,TCAFlag,,,CCAFlag,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idRes,preferred,,TCAFlag,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,ResRef,,,idRes,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,TCA_A,TCAA,4,,,,,
attribute,idTA,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idTB,,,idTA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R2,,has,TCA_B,idTB,,,
referential,,,,,,,,
attribute,,,,,,,,
operation,CT_Tags,TCA_A,public,Add_One,,,1,
parameter,Input_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Returning_No,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,   temp = Input_No%0A   temp = temp + 1%0A %0A   Returning_No = temp,,,,,,,
codeblock,,,,,,,,
operation,,,,,,,,
state,,TCA_A,Idle,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
state,,,,,,,,
state,,TCA_A,Link_To_Global,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instGSF = find-one Global_SubF where idGSF = 1%0AinstTS  = find-one TCA_Super where idTS = 1%0A%0Alink instTS R6 instGSF%0A%0AnewGSF = instTS -> R6.Global_SubF%0A%0Aif newGSF != UNDEFINED then%0A   [] = RPT2:Test_Passed["Link succesefull"%2C Test%2C 0]%0Aelse%0A   [] = RPT3:Test_Failed["Link unsuccesefull"%2C Test%2C -10]%0Aendif%0A%0Agenerate TCAA1:Link_To_Global(Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,TCA_A,Unlink_From_Global,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instTS = find-one TCA_Super where idTS = 1%0A%0AinstGSF = instTS -> R6.Global_SubF%0A%0Aunlink instTS R6 instGSF%0A%0AinstGSF = instTS -> R6.Global_SubF%0A%0Aif instGSF = UNDEFINED then%0A   [] = RPT2:Test_Passed["Unlink succesefull"%2C Test%2C 0]%0Aelse%0A   [] = RPT3:Test_Failed["Unlink unsuccesefull"%2C Test%2C -10]%0Aendif%0A%0Agenerate TCAA2:Unlink_From_Global(Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Link_To_Global,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Unlink_From_Global,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Link_To_Global,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Unlink_From_Global,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Link_To_Global,Link_To_Global,,,
transition,,,,,,,,
transition,Idle,,,Unlink_From_Global,Unlink_From_Global,,,
transition,,,,,,,,
transition,Link_To_Global,,,Link_To_Global,Idle,,,
transition,,,,,,,,
transition,Link_To_Global,,,Unlink_From_Global,Idle,,,
transition,,,,,,,,
transition,Unlink_From_Global,,,Link_To_Global,Idle,,,
transition,,,,,,,,
transition,Unlink_From_Global,,,Unlink_From_Global,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
pragma,tca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,TCA_B,TCAB,5,,,,,
attribute,idTB,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
pragma,tca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,TCA_C,TCAC,9,,,,,
attribute,idTC,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idGB,,,idTC,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R4,,has,Global_B,idGB,,,
referential,,,,,,,,
attribute,,,,,,,,
pragma,tca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,TCA_CP,TCP,28,,,,,
attribute,idTCP,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
pragma,tca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,TCA_D,ObjTD,24,,,,,
attribute,idTD,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,TDRef,,,idTD,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,TDPassed,,,TDRef,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,TDLinked,,,TDPassed,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,TCA_D,Idle,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,if this.TDRef = 1 then%0A%0A   if !this.TDPassed then%0A      this.TDPassed = TRUE%0A      [] = RPT2:Test_Passed["Gen event to TCA object"%2C Test%2C 0]%0A   else%0A%0A      if this.TDLinked then  %0A         [] = RPT2:Test_Passed["Global Super TCA Sub linked"%2C Test%2C 0]%0A      else%0A         [] = RPT2:Test_Passed["Global Super TCA Sub unlinked"%2C Test%2C -10]%0A      endif%0A%0A   endif%0A%0Aelse%0A   [] = RPT3:Test_Failed["Gen event to TCA object"%2C Test%2C this.TDRef]%0Aendif%0A%0A,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,TCA_D,Start,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,temp = this.TDRef%0Atemp = temp + 1%0Athis.TDRef = temp%0A%0Agenerate ObjTD1:Fired(Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,TCA_D,Link_Global_Super_to_TCA_Sub,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instGS = find-one Global_Super where idGS = 1%0A%0AinstTSA = find-one TCA_SubA where idTSA = 1%0A%0Alink instGS R5 instTSA%0A%0AnewGS = instTSA -> R5.Global_Super%0A%0Aif newGS != UNDEFINED then%0A%0A   if newGS.idGS = 1 then%0A      this.TDLinked = TRUE%0A   endif%0A%0Aendif%0A%0Agenerate ObjTD2:Link_SuperSub (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Fired,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Link_SuperSub,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Link_SuperSub,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Fired,Start,,,
transition,,,,,,,,
transition,Idle,,,Link_SuperSub,Link_Global_Super_to_TCA_Sub,,,
transition,,,,,,,,
transition,Start,,,Fired,Idle,,,
transition,,,,,,,,
transition,Start,,,Link_SuperSub,Ignore,,,
transition,,,,,,,,
transition,Link_Global_Super_to_TCA_Sub,,,Fired,Ignore,,,
transition,,,,,,,,
transition,Link_Global_Super_to_TCA_Sub,,,Link_SuperSub,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
pragma,tca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,TCA_E,ObjTE,25,,,,,
attribute,idTE,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,TERef,,,idTE,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,TELinked,,,TERef,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,TEPassed,,,TELinked,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idTD,,,TEPassed,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R12,,has,TCA_D,idTD,,,
referential,,,,,,,,
attribute,,,,,,,,
state,,TCA_E,Idle,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,if this.TERef = 1 then%0A%0A   if !this.TEPassed then%0A      this.TEPassed = TRUE%0A      [] = RPT2:Test_Passed["Gen event to TCA object"%2C Test%2C 0]%0A   else%0A%0A      if this.TELinked then  %0A         [] = RPT2:Test_Passed["TCA Super TCA Sub linked"%2C Test%2C 0]%0A      else%0A         [] = RPT2:Test_Passed["TCA Super TCA Sub unlinked"%2C Test%2C -10]%0A      endif%0A%0A   endif%0A%0Aelse%0A   [] = RPT3:Test_Failed["Gen event to TCA object"%2C Test%2C this.TERef]%0Aendif%0A%0A,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,TCA_E,Start,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,temp = this.TERef%0Atemp = temp + 1%0Athis.TERef = temp%0A%0Agenerate ObjTE3:Finished(Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,TCA_E,Link_SuperSub,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instTS  = find-one TCA_Super where idTS = 1%0AinstTSD = find-one TCA_SubD where idTSD = 1%0A%0AnewTSD = instTS -> R6.TCA_SubD%0Aif newTSD = UNDEFINED then%0A   link instTS R6 instTSD%0A%0A   newTSD = instTS -> R6.TCA_SubD%0A%0A   if newTSD != UNDEFINED then%0A%0A      if newTSD.idTSD = 1 then%0A         this.TELinked = TRUE%0A      endif%0A%0A   endif%0A%0Aendif%0A   generate ObjTE3:Finished (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Fired,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Link_SuperSub,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finished,,3,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Link_SuperSub,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Fired,Start,,,
transition,,,,,,,,
transition,Idle,,,Link_SuperSub,Link_SuperSub,,,
transition,,,,,,,,
transition,Idle,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Start,,,Fired,Start,,,
transition,,,,,,,,
transition,Start,,,Link_SuperSub,Ignore,,,
transition,,,,,,,,
transition,Start,,,Finished,Idle,,,
transition,,,,,,,,
transition,Link_SuperSub,,,Fired,Ignore,,,
transition,,,,,,,,
transition,Link_SuperSub,,,Link_SuperSub,Link_SuperSub,,,
transition,,,,,,,,
transition,Link_SuperSub,,,Finished,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
pragma,tca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,TCA_F,ObjTF,26,,,,,
attribute,idTF,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,TFRef,,,idTF,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idTE,,,TFRef,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R11,,has,TCA_E,idTE,,,
referential,,,,,,,,
attribute,,,,,,,,
state,,TCA_F,Idle,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,if this.TFRef = 1 then%0A   [] = RPT2:Test_Passed["TCA Event"%2C Test%2C 0]%0Aelse%0A   [] = RPT3:Test_Failed["TCA Event"%2C Test%2C this.TFRef]%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,TCA_F,Start,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,temp = this.TFRef%0Atemp = temp + 1%0Athis.TFRef = temp%0A%0Agenerate ObjTF1:Fired(Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Fired,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Fired,Start,,,
transition,,,,,,,,
transition,Start,,,Fired,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
pragma,tca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,TCA_SubA,TSA,13,,,,,
attribute,idTSA,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idGS,preferred,,idTSA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R5,,,,idGS,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,idTD,,,idGS,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R8,,has,TCA_D,idTD,,,
referential,,,,,,,,
attribute,,,,,,,,
state,,TCA_SubA,Idle,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
state,,,,,,,,
state,,TCA_SubA,Unlink_Global_From_TCA,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instGS  = this -> R5.Global_Super%0A%0Aunlink this R5 instGS%0A%0AtmpInst = this -> R5.Global_Super%0A%0A   if tmpInst = UNDEFINED then%0A      [] = RPT2:Test_Passed["Unlink succesefull"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Unlink unsuccesefull"%2C Test%2C -10]%0A   endif%0A%0Agenerate TSA3:Finished (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,TCA_SubA,Set_Flag,,4,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instGS = find-one Global_Super where idGS = 1%0A%0AinstGS.TCAFlag = TRUE%0A%0Atemp = instGS.GSRef%0Atemp = temp + 1%0AinstGS.GSRef = temp%0A%0Agenerate TSA3:Finished (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,TCA_SubA,Delete_Instances,terminal,5,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,{SetTS} = find-all TCA_Super%0Afor instTS in {SetTS} do%0A   delete instTS%0Aendfor%0A%0A{SetTSA} = find-all TCA_SubA%0Afor instTSA in {SetTSA} do%0A   delete instTSA%0Aendfor%0A%0A{SetTSD} = find-all TCA_SubD%0Afor instTSD in {SetTSD} do%0A   delete instTSD%0Aendfor%0A%0A{SetTD} = find-all TCA_D%0Afor instTD in {SetTD} do%0A   delete instTD%0Aendfor%0A%0A{SetTE} = find-all TCA_E%0Afor instTE in {SetTE} do%0A   delete instTE%0Aendfor%0A%0A{SetTF} = find-all TCA_F%0Afor instTF in {SetTF} do%0A   delete instTF%0Aendfor%0A%0A{SetTG} = find-all TCA_SubG%0Afor instTG in {SetTG} do%0A   delete instTG%0Aendfor%0A%0A{SetTA} = find-all TCA_A%0Afor instTA in {SetTA} do%0A   delete instTA%0Aendfor%0A%0A{SetTB} = find-all TCA_B%0Afor instTB in {SetTB} do%0A   delete instTB%0Aendfor%0A%0A{SetTC} = find-all TCA_C%0Afor instTC in {SetTC} do%0A   delete instTC%0Aendfor%0A%0A%0A{SetTS} = find-all TCA_Super%0A{SetTSA} = find-all TCA_SubA%0A{SetTSD} = find-all TCA_SubD%0A{SetTD} = find-all TCA_D%0A{SetTE} = find-all TCA_E%0A{SetTF} = find-all TCA_F%0A{SetTG} = find-all TCA_SubG%0A{SetTA} = find-all TCA_A%0A{SetTB} = find-all TCA_B%0A{SetTC} = find-all TCA_C%0A%0A   if countof {SetTS} = 0 then%0A%0A      if countof {SetTSA} = 0 then%0A%0A         if countof {SetTSD} = 0 then%0A%0A            if countof {SetTD} = 0 then%0A%0A               if countof {SetTE} = 0 then%0A%0A                  if countof {SetTF} = 0 then%0A%0A                     if countof {SetTG} = 0 then%0A   %0A                        if countof {SetTA} = 0 then%0A%0A                           if countof {SetTB} = 0 then%0A%0A                              if countof {SetTC} = 0 then%0A                                 [] = RPT2:Test_Passed["TCA Instances Delete"%2C Test%2C 0]%0A                              else%0A                                 [] = RPT3:Test_Failed["TCA Instances Delete"%2C Test%2C -10]%0A                              endif%0A%0A                           else%0A                              [] = RPT3:Test_Failed["TCA Instances Delete"%2C Test%2C -20]%0A                           endif%0A%0A                        else%0A                           [] = RPT3:Test_Failed["TCA Instances Delete"%2C Test%2C -30]%0A                        endif%0A%0A                     else%0A                        [] = RPT3:Test_Failed["TCA Instances Delete"%2C Test%2C -40]%0A                     endif%0A%0A                  else%0A                     [] = RPT3:Test_Failed["TCA Instances Delete"%2C Test%2C -50]%0A                  endif%0A%0A               else%0A                  [] = RPT3:Test_Failed["TCA Instances Delete"%2C Test%2C -60]%0A               endif%0A%0A            else%0A               [] = RPT3:Test_Failed["TCA Instances Delete"%2C Test%2C -70]%0A            endif%0A%0A         else%0A            [] = RPT3:Test_Failed["TCA Instances Delete"%2C Test%2C -80]%0A         endif%0A%0A      else%0A         [] = RPT3:Test_Failed["TCA Instances Delete"%2C Test%2C -90]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed["TCA Instances Delete"%2C Test%2C -90]%0A   endif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Unlink_SuperSub,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Delete_Instances,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finished,,3,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,Global_Super,Poly_Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,Global_Super,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Unlink_SuperSub,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Delete_Instances,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,Global_Super,Poly_Fired,Set_Flag,,,
transition,,,,,,,,
transition,Idle,,Global_Super,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Unlink_SuperSub,Unlink_Global_From_TCA,,,
transition,,,,,,,,
transition,Idle,,,Delete_Instances,Delete_Instances,,,
transition,,,,,,,,
transition,Idle,,,Finished,Idle,,,
transition,,,,,,,,
transition,Unlink_Global_From_TCA,,Global_Super,Poly_Fired,Ignore,,,
transition,,,,,,,,
transition,Unlink_Global_From_TCA,,Global_Super,Finished,Ignore,,,
transition,,,,,,,,
transition,Unlink_Global_From_TCA,,,Unlink_SuperSub,Ignore,,,
transition,,,,,,,,
transition,Unlink_Global_From_TCA,,,Delete_Instances,Ignore,,,
transition,,,,,,,,
transition,Unlink_Global_From_TCA,,,Finished,Idle,,,
transition,,,,,,,,
transition,Set_Flag,,Global_Super,Poly_Fired,Ignore,,,
transition,,,,,,,,
transition,Set_Flag,,Global_Super,Finished,Ignore,,,
transition,,,,,,,,
transition,Set_Flag,,,Unlink_SuperSub,Ignore,,,
transition,,,,,,,,
transition,Set_Flag,,,Delete_Instances,Ignore,,,
transition,,,,,,,,
transition,Set_Flag,,,Finished,Idle,,,
transition,,,,,,,,
transition,Delete_Instances,,Global_Super,Poly_Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Delete_Instances,,Global_Super,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Delete_Instances,,,Unlink_SuperSub,Cannot_Happen,,,
transition,,,,,,,,
transition,Delete_Instances,,,Delete_Instances,Cannot_Happen,,,
transition,,,,,,,,
transition,Delete_Instances,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transitiontable,,,,,,,,
pragma,tca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,TCA_SubD,TSD,17,,,,,
attribute,idTSD,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,TSDRef,,,idTSD,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idTS,preferred,,TSDRef,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R6,,,,idTS,,,
referential,,,,,,,,
attribute,,,,,,,,
state,,TCA_SubD,Idle,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
state,,,,,,,,
state,,TCA_SubD,Set_Flag,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instTS = this -> R6.TCA_Super%0AinstTS.TCAFlag  = TRUE%0A%0Atemp = instTS.TSRef%0Atemp = temp + 1%0AinstTS.TSRef = temp%0A%0Agenerate TSD1:Finished (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,TCA_SubD,Unlink,,4,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,instTS  = this -> R6.TCA_Super%0A%0Aunlink this R6 instTS%0A%0AtmpInst = this -> R6.TCA_Super%0A%0A   if tmpInst = UNDEFINED then%0A      [] = RPT2:Test_Passed["Unlink succesefull"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Unlink unsuccesefull"%2C Test%2C -10]%0A   endif%0A%0Agenerate TSD1:Finished (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Finished,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Unlink_SuperSub,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,TCA_Super,Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,TCA_Super,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Unlink_SuperSub,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,TCA_Super,Fired,Set_Flag,,,
transition,,,,,,,,
transition,Idle,,TCA_Super,Finished,Idle,,,
transition,,,,,,,,
transition,Idle,,,Finished,Idle,,,
transition,,,,,,,,
transition,Idle,,,Unlink_SuperSub,Unlink,,,
transition,,,,,,,,
transition,Set_Flag,,TCA_Super,Fired,Idle,,,
transition,,,,,,,,
transition,Set_Flag,,TCA_Super,Finished,Idle,,,
transition,,,,,,,,
transition,Set_Flag,,,Finished,Idle,,,
transition,,,,,,,,
transition,Set_Flag,,,Unlink_SuperSub,Unlink,,,
transition,,,,,,,,
transition,Unlink,,TCA_Super,Fired,Set_Flag,,,
transition,,,,,,,,
transition,Unlink,,TCA_Super,Finished,Idle,,,
transition,,,,,,,,
transition,Unlink,,,Finished,Idle,,,
transition,,,,,,,,
transition,Unlink,,,Unlink_SuperSub,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
pragma,tca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,TCA_SubG,TSG,21,,,,,
attribute,idTSG,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idCS,preferred,,idTSG,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R7,,,,idCS,,,
referential,,,,,,,,
attribute,,,,,,,,
pragma,tca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,TCA_Super,TS,16,,,,,
attribute,idTS,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,TCAFlag,,,idTS,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,TSRef,,,TCAFlag,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,TCA_Super,Idle,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
state,,,,,,,,
state,,TCA_Super,Start,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,generate TS2:Finished (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,TCA_Super,Check_Result,,4,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,if this.TSRef = 1 then%0A%0A   if this.TCAFlag then%0A      this.TSRef = 2%0A      [] = RPT2:Test_Passed["TCA Poly Event"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["TCA Poly Event"%2C Test%2C -10]%0A   endif%0A%0Aelse%0A%0A   instGSF = this -> R6.Global_SubF%0A   if instGSF.GlobalFlag then %0A      [] = RPT2:Test_Passed["TCA Poly Event"%2C Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["TCA Poly Event"%2C Test%2C -10]%0A   endif%0A%0Aendif%0A%0Agenerate TS2:Finished (Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Fired,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finished,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Fired,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Fired,Start,,,
transition,,,,,,,,
transition,Idle,,,Finished,Idle,,,
transition,,,,,,,,
transition,Start,,,Fired,Idle,,,
transition,,,,,,,,
transition,Start,,,Finished,Check_Result,,,
transition,,,,,,,,
transition,Check_Result,,,Fired,Idle,,,
transition,,,,,,,,
transition,Check_Result,,,Finished,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
pragma,tca,,,,,,,
pragmaitem,"",,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
object,,,,,,,,
object,Test_Data,TD,27,,,,,
attribute,idTD,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Current_Test_Number,,,idTD,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
pragma,version,,,,,,,
pragmaitem,4,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
domain,,,,,,,,
