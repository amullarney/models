domain,Events,Events,,,,,,
object,BornToDie,,,,,,,
object,,,,,,,,
object,Bottom_Level_A,,,,,,,
object,,,,,,,,
object,Bottom_Level_B,,,,,,,
object,,,,,,,,
object,Bottom_Level_C,,,,,,,
object,,,,,,,,
object,Bottom_Level_D,,,,,,,
object,,,,,,,,
object,Bottom_Level_E,,,,,,,
object,,,,,,,,
object,Bottom_Level_F,,,,,,,
object,,,,,,,,
object,Bottom_Level_G,,,,,,,
object,,,,,,,,
object,Bottom_Level_H,,,,,,,
object,,,,,,,,
object,Bottom_Level_I,,,,,,,
object,,,,,,,,
object,Bottom_Level_J,,,,,,,
object,,,,,,,,
object,Check_Current_States,,,,,,,
object,,,,,,,,
object,Check_Delete,,,,,,,
object,,,,,,,,
object,Check_Parameters,,,,,,,
object,,,,,,,,
object,Creation_Object,,,,,,,
object,,,,,,,,
object,EventToSelf,,,,,,,
object,,,,,,,,
object,Event_Data,,,,,,,
object,,,,,,,,
object,Huge_State_Machine,,,,,,,
object,,,,,,,,
object,Multiple_Creation_States,,,,,,,
object,,,,,,,,
object,Object_A,,,,,,,
object,,,,,,,,
object,Object_B,,,,,,,
object,,,,,,,,
object,Object_C,,,,,,,
object,,,,,,,,
object,Object_D,,,,,,,
object,,,,,,,,
object,Object_E,,,,,,,
object,,,,,,,,
object,Object_F,,,,,,,
object,,,,,,,,
object,Object_J,,,,,,,
object,,,,,,,,
object,Object_K,,,,,,,
object,,,,,,,,
object,Object_L,,,,,,,
object,,,,,,,,
object,Object_M,,,,,,,
object,,,,,,,,
object,Object_N,,,,,,,
object,,,,,,,,
object,Object_O,,,,,,,
object,,,,,,,,
object,Object_P,,,,,,,
object,,,,,,,,
object,Object_Q,,,,,,,
object,,,,,,,,
object,Object_R,,,,,,,
object,,,,,,,,
object,Object_S,,,,,,,
object,,,,,,,,
object,Object_T,,,,,,,
object,,,,,,,,
object,Object_U,,,,,,,
object,,,,,,,,
object,Object_Verify_Creation_Terminal,,,,,,,
object,,,,,,,,
object,Object_Verify_Polymorphic,,,,,,,
object,,,,,,,,
object,Object_X,,,,,,,
object,,,,,,,,
object,Object_Z,,,,,,,
object,,,,,,,,
object,Priority_A,,,,,,,
object,,,,,,,,
object,Priority_B,,,,,,,
object,,,,,,,,
object,Reflexive,,,,,,,
object,,,,,,,,
object,Report_Data,,,,,,,
object,,,,,,,,
object,State_Check,,,,,,,
object,,,,,,,,
object,SubA,,,,,,,
object,,,,,,,,
object,SubB,,,,,,,
object,,,,,,,,
object,SubC,,,,,,,
object,,,,,,,,
object,SubD,,,,,,,
object,,,,,,,,
object,SubE,,,,,,,
object,,,,,,,,
object,SubF,,,,,,,
object,,,,,,,,
object,Sub_Level_1_A,,,,,,,
object,,,,,,,,
object,Sub_Level_1_B,,,,,,,
object,,,,,,,,
object,Sub_Level_2_A,,,,,,,
object,,,,,,,,
object,Sub_Level_2_B,,,,,,,
object,,,,,,,,
object,Sub_Level_2_C,,,,,,,
object,,,,,,,,
object,Sub_Level_2_D,,,,,,,
object,,,,,,,,
object,Sub_Level_3_A,,,,,,,
object,,,,,,,,
object,Sub_Level_3_B,,,,,,,
object,,,,,,,,
object,Sub_Level_3_C,,,,,,,
object,,,,,,,,
object,Sub_Level_3_D,,,,,,,
object,,,,,,,,
object,SuperA,,,,,,,
object,,,,,,,,
object,Terminal_Object,,,,,,,
object,,,,,,,,
object,Test_Data,,,,,,,
object,,,,,,,,
object,Test_Effects,,,,,,,
object,,,,,,,,
object,Test_Persistence,,,,,,,
object,,,,,,,,
object,Top_Level,,,,,,,
object,,,,,,,,
type,Specific_Classes_JTT,private,,,,,,
enumeration,Specific_Classes_JTT,,,,,,,
enumerator,Undef_Element,,,,,,,
enumerator,,,,,,,,
enumeration,,,,,,,,
description, List of possible Specific Counterparts to Generic Class%0A,,,,,,,
type,,,,,,,,
routine,Events,,private,Events_Scenario,1,,,
codeblock,   my_test = find-one Test_Data%0A%0A   if my_test = UNDEFINED then%0A      # Start in safe mode%0A      The_Test_Number = 100%0A   else%0A      The_Test_Number = my_test.Current_Test_Number%0A   endif%0A%0A   # Increment this count over every test in this scenario%0A   Test_Counter = 0%0A%0A#-------------------------------------------------------------------------%0A# Test 1%0A#-------------------------------------------------------------------------%0A%0A   Temp = 1%0A%0A   # Create an instance of each object%0A   SuperTypeD = create Object_D with ReferenceD            = Temp   &\%0A                                     ResultA               = 0      &\%0A                                     no_of_received_events = 0      &\%0A                                     latest_test           = 0      &\%0A                                     Current_State         = 'Idle'%0A%0A   Index_For_Subtype = The_Test_Number + 1%0A%0A   SubTypeE = create Object_E with ReferenceE     = Temp              &\%0A                                   ResultA        = 0                 &\%0A                                   Report_Test_No = Index_For_Subtype &\%0A                                   Current_State  = 'Idle'%0A%0A   # Form the relationship%0A   link SuperTypeD R5 SubTypeE%0A%0A   generate objD2:StartA (Temp%2C The_Test_Number) to SuperTypeD%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 1%0A%0A#-------------------------------------------------------------------------%0A# Test 2 - Generate to sub type only. Prove that event is NOT delivered %0A#          upwards to the supertype.%0A#-------------------------------------------------------------------------%0A%0A   Temp = 2%0A%0A   # 2 test reports from last test%2C super & sub%0A   The_Test_Number = The_Test_Number + 2%0A%0A   # Create an instance of each object%0A   Super2D = create Object_D with ReferenceD            = Temp   &\%0A                                  ResultA               = 0      &\%0A                                  no_of_received_events = 1      &\%0A                                  latest_test           = 0      &\%0A                                  Current_State         = 'Idle'%0A%0A   Sub2E = create Object_E with ReferenceE     = Temp            &\%0A                                ResultA        = 0               &\%0A                                Report_Test_No = The_Test_Number &\%0A                                Current_State  = 'Idle'%0A%0A   link Super2D R5 Sub2E%0A%0A   generate objE6:StartB (Temp%2C The_Test_Number) to Sub2E%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 2%0A%0A#-------------------------------------------------------------------------%0A# Test 3 - Generate to super type only. Prove that event is NOT delivered %0A#          downwards to the subtype as the relationship is not formalised.%0A#          This test is incorrect. Every supertype must have a subtype %0A#          linked.%0A#          Decision taken 15 Dec 1999 by John Mann%2C Ashley Field & David %0A#          Beatty.%0A#%0A#          NB. ASL actually allows a solitary supertype. %0A#          This seems to be against Schlaer-Mellor. KC are clueless.%0A#-------------------------------------------------------------------------%0A%0A   Temp = 3%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   # Create an instance of each object%0A   SuperTypeD = create Object_D with ReferenceD            = Temp &\%0A                                     ResultA               = 0    &\%0A                                     no_of_received_events = 0    &\%0A                                     latest_test           = 0    &\%0A                                     Current_State = 'Idle'%0A%0A   Index_For_Subtype = The_Test_Number + 1%0A%0A   SubTypeE = create Object_E with ReferenceE     = Temp              &\%0A                                   ResultA        = 0                 &\%0A                                   Report_Test_No = Index_For_Subtype &\%0A                                   Current_State  = 'Idle'%0A%0A   link SuperTypeD R5 SubTypeE%0A%0A   generate objD2:StartA (Temp%2C The_Test_Number) to SuperTypeD%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 3%0A%0A#-------------------------------------------------------------------------%0A# Test 4 - Generate to super type only. Prove that event is NOT delivered %0A#          downwards to the subtype as sub type may not receive it.%0A#-------------------------------------------------------------------------%0A%0A   Temp = 4%0A%0A   # Two events handled last time%0A   The_Test_Number = The_Test_Number + 2%0A%0A   # Create an instance of each object%0A   SuperTypeD = create Object_D with ReferenceD            = Temp   &\%0A                                     ResultA               = 0      &\%0A                                     no_of_received_events = 1      &\%0A                                     latest_test           = 0      &\%0A                                     Current_State         = 'Idle'%0A%0A   SubTypeE = create Object_E with ReferenceE     = Temp            &\%0A                                   ResultA        = 0               &\%0A                                   Report_Test_No = The_Test_Number &\%0A                                   Current_State  = 'Idle'%0A%0A   link SuperTypeD R5 SubTypeE%0A%0A   generate objD3:StartC (Temp%2C The_Test_Number) to SuperTypeD%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 4%0A%0A#-------------------------------------------------------------------------%0A# Test 5 - Generate to super and objF (other) subtype%0A#-------------------------------------------------------------------------%0A%0A   Temp = 5%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   # Create an instance of each object%0A   SuperTypeD = create Object_D with ReferenceD            = Temp   &\%0A                                     ResultA               = 0      &\%0A                                     no_of_received_events = 0      &\%0A                                     latest_test           = 0      &\%0A                                     Current_State         = 'Idle'%0A%0A   Index_For_Subtype = The_Test_Number + 1%0A%0A   SubTypeF = create Object_F with ReferenceF     = Temp              &\%0A                                   ResultA        = 0                 &\%0A                                   Report_Test_No = Index_For_Subtype &\%0A                                   Current_State  = 'Idle'%0A%0A   # Form the relationship%0A   link SuperTypeD R5 SubTypeF%0A%0A   generate objD2:StartA (Temp%2C The_Test_Number) to SuperTypeD%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 5%0A%0A#-------------------------------------------------------------------------%0A# Test 6 - Generate to sub type only. Prove that event is NOT delivered%0A#          upwards to the supertype.%0A#-------------------------------------------------------------------------%0A%0A   Temp = 6%0A%0A   The_Test_Number = The_Test_Number + 2%0A%0A   # Create an instance of each object%0A   Super2D = create Object_D with ReferenceD            = Temp   &\%0A                                  ResultA               = 0      &\%0A                                  no_of_received_events = 1      &\%0A                                  latest_test           = 0      &\%0A                                  Current_State         = 'Idle'%0A%0A   Sub2F = create Object_F with ReferenceF     = Temp            &\%0A                                ResultA        = 0               &\%0A                                Report_Test_No = The_Test_Number &\%0A                                Current_State  = 'Idle'%0A%0A   link Super2D R5 Sub2F%0A%0A   generate objF2:StartB (Temp%2C The_Test_Number) to Sub2F%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 6%0A%0A#-------------------------------------------------------------------------%0A# Test 7 - Generate to super type only. Prove that event is NOT delivered %0A#          downwards to the subtype as the relationship is not formalised.%0A#%0A#          This test is incorrect. Every supertype must have a subtype %0A#          linked. Decision taken 15 Dec 1999 by John Mann%2C Ashley Field %0A#          & David Beatty.%0A#%0A# NB. ASL actually allows a solitary supertype. %0A# This seems to be against Shlaer-Mellor. KC are clueless.%0A#-------------------------------------------------------------------------%0A%0A   Temp = 7%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   # Create an instance of each object%0A   SuperTypeD = create Object_D with ReferenceD            = Temp   &\%0A                                     ResultA               = 0      &\%0A                                     no_of_received_events = 0      &\%0A                                     latest_test           = 0      &\%0A                                     Current_State         = 'Idle'%0A%0A   Index_For_Subtype = The_Test_Number + 1%0A%0A   SubTypeF = create Object_F with ReferenceF     = Temp              &\%0A                                   ResultA        = 0                 &\%0A                                   Report_Test_No = Index_For_Subtype &\%0A                                   Current_State  = 'Idle'%0A%0A   # Formalise the relationship. %0A   link SuperTypeD R5 SubTypeF%0A%0A   generate objD2:StartA (Temp%2C The_Test_Number) to SuperTypeD%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 7%0A%0A#-------------------------------------------------------------------------%0A# Test 8 - Generate to super type only. Prove that event is NOT delivered%0A#          downwards to the subtype as sub type may not receive it.%0A#-------------------------------------------------------------------------%0A %0A   Temp = 8%0A%0A   The_Test_Number = The_Test_Number + 2%0A%0A   # Create an instance of each object%0A   SuperTypeD = create Object_D with ReferenceD            = Temp &\%0A                                     ResultA               = 0    &\%0A                                     no_of_received_events = 1    &\%0A                                     latest_test           = 0    &\%0A                                     Current_State         = 'Idle'%0A%0A   SubTypeF = create Object_F with ReferenceF     = Temp            &\%0A                                   ResultA        = 0               &\%0A                                   Report_Test_No = The_Test_Number &\%0A                                   Current_State  = 'Idle'%0A%0A   link SuperTypeD R5 SubTypeF%0A%0A   generate objD3:StartC (Temp%2C The_Test_Number) to SuperTypeD%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 8%0A%0A#-------------------------------------------------------------------------%0A# Test 9 - Actually it's TEST 14%0A#%0A#          This shall prove that an event generated to a supertype %0A#          containing a state machine is dealt with in that supertype%2C and %0A#          the non-state machine containing subtype does not do anything %0A#          with the event.%0A#-------------------------------------------------------------------------%0A%0A   Temp = 9%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   # Create an instance of each object%0A   SuperTypeA = create Object_A with ReferenceA    = Temp   &\%0A                                     ResultA       = 0      &\%0A                                     latest_test   = 0      &\%0A                                     Current_State = 'Idle'%0A%0A   # DB Referential attribute removed. 12/7/01 %0A   SubTypeB = create Object_B with ResultB = 0%0A%0A   # Formalise relationship%0A   link SuperTypeA R1 SubTypeB%0A%0A   # Start the test%0A   generate objA1:StartA(Temp%2C The_Test_Number) to SuperTypeA%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 9%0A%0A#-------------------------------------------------------------------------%0A# Test 10 - Active SUPER and passive SUB is UNSUPPORTED%0A#%0A#           Object_A test from external 9 test number 5.%0A#%0A#           This shall prove that an event generated to a supertype %0A#           containing a state machine is dealt with in that supertype%2C %0A#           and the non-state machine containing subtype does not do %0A#           anything with the event.%0A#-------------------------------------------------------------------------%0A%0A   Temp = 10%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   # Create an instance of each object%0A   SuperTypeA = create Object_A with ReferenceA    = Temp   &\%0A                                     ResultA       = 0      &\%0A                                     latest_test   = 0      &\%0A                                     Current_State = 'Idle'%0A%0A   # DB Referential attribute removed. 12/7/01 %0A   SubTypeC= create Object_C with ResultC = 0%0A%0A   # Formalise relationship%0A   link SuperTypeA R1 SubTypeC%0A%0A   # Start the test%0A   generate objA1:StartA(Temp%2C The_Test_Number) to SuperTypeA%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 10%0A%0A#-------------------------------------------------------------------------%0A# Test 11 - This test shall prove that an event generated to a supertype %0A#           that has a state machine consisting only of the 'Non-Existant'%0A#           state polymorphically delivers the event down to the subtype %0A#           to be dealt with.%0A#-------------------------------------------------------------------------%0A%0A   Temp = 11%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   SuperTypeT = create Object_T with Reference_T = Temp &\%0A                                     Result_T    = 0%0A%0A%0A   SubTypeU = create Object_U with Result_U      = 0               &\%0A                                   latest_test   = The_Test_Number &\%0A                                   Reference_T   = Temp            &\%0A                                   Current_State = 'Idle'%0A%0A   link SuperTypeT R8 SubTypeU%0A%0A   generate objT1:StartT(The_Test_Number) to SuperTypeT%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 11%0A%0A#-------------------------------------------------------------------------%0A# Test 12 - Prove that an event generated to the subtype as dealt with %0A#           exactly the same as if it were generated to the supertype that %0A#           contains a state machine with only the 'Non-Existant' state.%0A#-------------------------------------------------------------------------%0A%0A   Temp = 12%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   SuperTypeT = create Object_T with Reference_T = Temp &\%0A                                     Result_T    = 0%0A%0A%0A   SubTypeU = create Object_U with Result_U      = 0               &\%0A                                   Reference_T   = Temp            &\%0A                                   latest_test   = The_Test_Number &\%0A                                   Current_State = 'Idle'%0A%0A   link SuperTypeT R8 SubTypeU%0A%0A   generate objU1:StartU(The_Test_Number) to SubTypeU%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 12%0A%0A#-------------------------------------------------------------------------%0A# Test 13 - Prove that events are polymorphically delivered from super to %0A#           sub to sub types.%0A#-------------------------------------------------------------------------%0A%0A   # Chained event delivery is currently unsupported by WACA at version 2.0.1%0A%0A#   The_Test_Number = The_Test_Number + 1%0A%0A   # Create an instance of each object%0A   SuperTypeJ = create Object_J with ReferenceJ    = The_Test_Number &\%0A                                     ResultJ       = 0               &\%0A                                     action_count  = 2               &\%0A                                     latest_test   = The_Test_Number &\%0A                                     Current_State = 'Idle'%0A%0A   Temp = The_Test_Number + 1%0A   SubSuperTypeK = create Object_K with ReferenceK    = Temp &\%0A                                        ResultK       = 0    &\%0A                                        Current_State = 'Idle'%0A%0A   #SubSubTypeL = create Object_L with ReferenceJ    = Temp &\%0A   #                                   ReferenceL    = Temp &\%0A   #                                   ResultL       = 0    &\  %0A   #                                   Current_State = 'Idle'%0A%0A  %0A   # Formalise relationship%0A   link SuperTypeJ R7 SubSuperTypeK%0A%0A   # Chained super / sub / sub relationships are unsupported%0A   # link subsupertypeK R8 subsubtypeL%0A%0A   #Start the test%0A   #generate objJ1:StartA(The_Test_Number) to supertypeJ%0A%0A   # The finish event is generated here%2C in place of the relevent state in objJ%0A   # as events that are polymorphically delivered  must complete before the %0A   # super type can call itself (ie. generate finished to this)%0A   # Although ISIM actually allows this%2C it is incorrect.%0A%0A   #generate objJ2:Finished(The_Test_Number) to supertypeJ%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 13%0A%0A#-------------------------------------------------------------------------%0A# Test 14 - Reflexive Navigations%2C REFLECT%0A#-------------------------------------------------------------------------%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   Test = 1 %0A   Temp = 0%0A%0A   # Create an instance of each object%0A   Reflect141 = create Reflexive with ReferenceREFLECT = 0      &\%0A                                      ResultA          = 0      &\%0A                                      Current_State    = 'Idle'%0A%0A   # Start the test%0A   generate REFLECT3:StartA(Test%2C Temp%2C The_Test_Number) to Reflect141%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 14%0A%0A#-------------------------------------------------------------------------%0A# Test 14b - Reflexive Navigations%2C REFLECT%0A#-------------------------------------------------------------------------%0A%0A#   The_Test_Number = The_Test_Number + 1%0A%0A#   Test = 2 %0A#   Temp = 0%0A%0A   # Create an instance of each object%0A#   newReflect = create Reflexive with ReferenceREFLECT = 0      &\%0A#                                      ResultA          = 0      &\%0A#                                      Current_State    = 'Idle'%0A%0A   # Start the test%0A#   generate REFLECT3:StartA(Test%2C Temp%2C The_Test_Number) to newReflect%0A%0A#   Test_Counter = Test_Counter + 1%0A%0A# End Test 14%0A%0A#-------------------------------------------------------------------------%0A# Test 15 - Reflexive Navigations%2C REFLECT%0A#-------------------------------------------------------------------------%0A%0A#   The_Test_Number = The_Test_Number + 1%0A%0A#   Test = 3 %0A#   Temp = 0%0A%0A   # Create further instances of the same object for sending events too.%0A#   Reflect151 = create Reflexive with ReferenceREFLECT = 1      &\%0A#                                      ResultA          = 0      &\%0A#                                      Current_State    = 'Idle'%0A%0A#   Reflect152 = create Reflexive with ReferenceREFLECT = 2      &\%0A#                                      ResultA          = 0      &\%0A#                                      Current_State    = 'Idle'%0A%0A#   Reflect153 = create Reflexive with ReferenceREFLECT = 3      &\%0A#                                      ResultA          = 0      &\%0A#                                      Current_State    = 'Idle'%0A%0A   # Create an instance of each object%0A#   Reflect154 = create Reflexive with ReferenceREFLECT = 4      &\%0A#                                      ResultA          = 0      &\%0A#                                      Current_State    = 'Idle'%0A%0A   # Start the test%0A#   generate REFLECT3:StartA(Test%2C Temp%2C The_Test_Number) to Reflect151%0A%0A#   Test_Counter = Test_Counter + 1%0A%0A# End Test 15%0A%0A#-------------------------------------------------------------------------%0A# Test 16 - objCREATE%0A#-------------------------------------------------------------------------%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   Test = 1%0A   Temp = 1%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "Null Requid"%2C "Events"%2C "Scenario"%2C "Creation event"]%0A%0A   # Send a creation event - Unsupported by SW architecture%0A   # generate objCREATE1:StartA(temp)%0A%0A   [] = RPT4:Test_Unsupported[The_Test_Number]%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 16%0A%0A#-------------------------------------------------------------------------%0A# Test 17 - This test shall verify that the object created in the previous %0A#           test actually exists.%0A#%0A#           Since Creation events are unsupported by the architecture%2C %0A#           this test is not required.%0A#-------------------------------------------------------------------------%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   Temp = 1%0A%0A   # newVERIFY = create Object_Verify_Creation_Terminal with ReferenceCETL = Temp   &\%0A   #                                                         ResultA       = 0      &\%0A   #                                                         Current_State = 'Idle'%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "Null Requid"%2C "Events"%2C "Scenario"%2C "Verify object creation"]%0A%0A   # generate objVERCETL2:Verify(Temp) to newVERIFY%0A%0A   [] = RPT4:Test_Unsupported[The_Test_Number]%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 17%0A%0A#-------------------------------------------------------------------------%0A# Test 18 - Create an object for deletion%2C then allow it to delete itself.%0A#-------------------------------------------------------------------------%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   Temp = 1%0A%0A   {tob} = find-all Terminal_Object%0A%0A   noto = countof{tob}%0A%0A   if noto = 0 then%0A%0A      # Create an instance of each object%0A      NewTerm = create Terminal_Object with ReferenceTERM = Temp   &\%0A                                            ResultA       = 0      &\%0A                                            Current_State = 'Idle'%0A%0A      # Start the test%0A      generate objTERMINAL1:StartA(Temp%2C The_Test_Number) to NewTerm%0A%0A   endif%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 18%0A%0A#-------------------------------------------------------------------------%0A# Test 19 - Verify that the deletion actually took place.%0A#-------------------------------------------------------------------------%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   Temp = 2%0A%0A   newVERIFY = create Object_Verify_Creation_Terminal with ReferenceCETL = 1      &\%0A                                                           ResultA       = 0      &\%0A                                                           Current_State = 'Idle'%0A%0A   generate objVERCETL2:Verify(Temp%2C The_Test_Number) to newVERIFY%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 19%0A%0A#-------------------------------------------------------------------------%0A# Test 20%0A#-------------------------------------------------------------------------%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   Temp = 2%0A%0A   # Create an instance of each object%0A   NewTerm = create Terminal_Object with ReferenceTERM =  Temp  &\%0A                                         ResultA       = 0      &\%0A                                         Current_State = 'Idle'%0A%0A   # Start the test%0A   generate objTERMINAL1:StartA(Temp%2C The_Test_Number) to NewTerm%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 20%0A%0A#-------------------------------------------------------------------------%0A# Test 21%0A#-------------------------------------------------------------------------%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   Temp = 3%0A%0A   newVERIFY = create Object_Verify_Creation_Terminal with ReferenceCETL = 2      &\%0A                                                           ResultA       = 0      &\%0A                                                           Current_State = 'Idle'%0A%0A   generate objVERCETL2:Verify(Temp%2C The_Test_Number) to newVERIFY%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 21%0A%0A#-------------------------------------------------------------------------%0A# Test 22%0A#-------------------------------------------------------------------------%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   Temp = 1%0A%0A   newEDATA = create Event_Data with ReferenceEDATA = Temp   &\%0A                                     ResultA        = 0      &\%0A                                     Current_State  = 'Idle'%0A%0A   generate objEDATA3:EventA(1%2C2%2C3%2C4%2C5%2C Temp%2C The_Test_Number) to newEDATA%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 22%0A%0A#-------------------------------------------------------------------------%0A# Test 23%0A#-------------------------------------------------------------------------%0A%0A   The_Test_Number = The_Test_Number + 1%0A   generate objEDATA4:EventB(1%2C2%2C3%2C4%2C5%2C Temp%2C The_Test_Number) to newEDATA%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 23%0A%0A#-------------------------------------------------------------------------%0A# Test 24%0A#-------------------------------------------------------------------------%0A%0A   The_Test_Number = The_Test_Number + 1%0A   generate objEDATA5:EventC(1%2C2%2C3%2C4%2C5%2C Temp%2C The_Test_Number) to newEDATA%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 24%0A%0A#-------------------------------------------------------------------------%0A# Test 25%0A#-------------------------------------------------------------------------%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   Test = 2%0A   Temp = 2%0A%0A   newEDATA = create Event_Data with ReferenceEDATA = Temp   &\%0A                                     ResultA        = 0      &\%0A                                     Current_State  = 'Idle'%0A%0A%0A   generate objEDATA7:EventD(1%2C2%2C Temp%2C The_Test_Number) to newEDATA%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 25%0A%0A#-------------------------------------------------------------------------%0A# Test 26 - Prove that delivery of polymorphic events are possible to %0A#           multiple subtypes.%0A#%0A#           While we are at it%2C prove that subtype migration is handled.%0A#%0A#           The Value_To_Add from each subtype will be added to the super %0A#           type%0A#-------------------------------------------------------------------------%0A %0A   The_Test_Number = The_Test_Number + 1%0A %0A   SuperA1 = create SuperA with idA           = The_Test_Number &\%0A                                ResultA       = 0               &\%0A                                Reference_ID  = 1               &\%0A                                Current_State = 'Idle'%0A%0A   SubA1 = create SubA with Value_To_Add  = 10     &\%0A                            Current_State = 'Idle'%0A%0A   SubB1 = create SubB with Value_To_Add  = 5      &\%0A                            Current_State = 'Idle'%0A%0A   SubC1 = create SubC with Value_To_Add  = 6      &\%0A                            Current_State = 'Idle'%0A%0A   subD1 = create SubD with Value_To_Add  = 20     &\%0A                            Current_State = 'Idle'%0A%0A   subE1 = create SubE with Value_To_Add  = 30     &\%0A                            Current_State = 'Idle'%0A%0A   subF1 = create SubF with Value_To_Add  = 40     &\%0A                            Current_State = 'Idle'%0A%0A%0A   link SuperA1 R13 SubB1%0A   link SuperA1 R14 SubC1%0A%0A   # Link in a normal subtype%2C there will be no monkey business %0A   # with subtype migration for this one.%0A   link SuperA1 R6 subE1%0A %0A   # Initiate the test%0A   generate SprA5:Creation_Event(The_Test_Number) to SuperA1%0A%0A   generate SprA2:Verify_Test(The_Test_Number) to SuperA1%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 26%0A%0A#-------------------------------------------------------------------------%0A# Test 27 - Prove that delivery of polymorphic events are possible to %0A#           multiple subtypes.%0A#%0A#           While we are at it%2C prove that subtype migration is handled.%0A#-------------------------------------------------------------------------%0A %0A   The_Test_Number = The_Test_Number + 1%0A%0A   SuperA2 = create SuperA with idA            = The_Test_Number &\%0A                                 ResultA       = 0               &\%0A                                 Reference_ID  = 2               &\%0A                                 Current_State = 'Idle'%0A%0A   SubA2 = create SubA with Value_To_Add = 5       &\%0A                            Current_State = 'Idle'%0A%0A   SubB2 = create SubB with Value_To_Add  = 0      &\%0A                            Current_State = 'Idle'%0A%0A   SubC2 = create SubC with Value_To_Add  = 6      &\%0A                            Current_State = 'Idle'%0A%0A   subD2 = create SubD with Value_To_Add  = 0      &\%0A                            Current_State = 'Idle'%0A%0A   subE2 = create SubE with Value_To_Add  = 0      &\%0A                            Current_State = 'Idle'%0A%0A   subF2 = create SubF with Value_To_Add  = 0      &\%0A                            Current_State = 'Idle'%0A%0A   # Link to one side of each subfamily. These will be unlinked and then%0A   # linked to the other side by subtype migration later on.   %0A   link SuperA2 R13 SubB2%0A   link SuperA2 R14 SubC2%0A %0A   # link in the other side of the subtype.%0A   link SuperA2 R6 subF2%0A%0A   # Initiate the test%0A   generate SprA5:Creation_Event(The_Test_Number) to SuperA2%0A%0A   generate SprA2:Verify_Test(The_Test_Number) to SuperA2%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 27%0A%0A#-------------------------------------------------------------------------%0A# Test 28 - Prove that subtype delivery is possible with instances where %0A#           there are more than just two possible subtypes to choose from%0A#-------------------------------------------------------------------------%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   Temp = 1%0A%0A   a_P1 = create Object_P with Reference_P               = 19              &\%0A                               Result_P                  = 0               &\%0A                               number_of_received_events = 0               &\%0A                               latest_test               = The_Test_Number &\%0A                               Value_To_Add              = 10              &\%0A                               Current_State             = 'Idle'%0A %0A   a_Q = create Object_Q with Value_To_Add  = 1               &\%0A                              latest_test   = The_Test_Number &\%0A                              Result_Q      = 0               &\%0A                              Current_State = 'Idle'%0A%0A   link a_P1 R4 a_Q%0A%0A   generate objP1:StartP(The_Test_Number) to a_P1%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 28%0A%0A#-------------------------------------------------------------------------%0A# Test 29%0A#-------------------------------------------------------------------------%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   Temp = 2%0A%0A   a_P2 = create Object_P with Reference_P               = 20              &\%0A                               Result_P                  = 0               &\%0A                               number_of_received_events = 0               &\%0A                               latest_test               = The_Test_Number &\%0A                               Value_To_Add              = 10              &\%0A                               Current_State             = 'Idle'%0A%0A%0A   a_R = create Object_R with Value_To_Add   = 2               &\%0A                              latest_test    = The_Test_Number &\%0A                               Result_R      = 0               &\%0A                               Current_State = 'Idle'%0A%0A   link a_P2 R4 a_R%0A%0A   generate objP1:StartP(The_Test_Number) to a_P2%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 29%0A%0A#-------------------------------------------------------------------------%0A# Test 30%0A#-------------------------------------------------------------------------%0A %0A   The_Test_Number = The_Test_Number + 1%0A%0A   Temp = 3%0A%0A   a_P3 = create Object_P with Reference_P               = 21              &\%0A                               Result_P                  = 0               &\%0A                               number_of_received_events = 0               &\%0A                               latest_test               = The_Test_Number &\%0A                               Value_To_Add              = 10              &\%0A                               Current_State             = 'Idle'%0A%0A   a_S = create Object_S with Value_To_Add  = 3               &\%0A                              latest_test   = The_Test_Number &\%0A                              Result_S      = 0               &\%0A                              Current_State = 'Idle'%0A %0A   link a_P3 R4 a_S%0A%0A   generate objP1:StartP(The_Test_Number) to a_P3%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 30%0A%0A#-------------------------------------------------------------------------%0A# Test 31%0A#-------------------------------------------------------------------------%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   # Increment this value for each new test%0A   Test = 1%0A%0A   Identity = 100 + Test%0A%0A   NewMCSA = create Multiple_Creation_States with idMCS         = Identity          &\%0A                                                  ResultA       = 0                 &\%0A                                                  Current_State = 'Creation_stateA'%0A%0A   generate objMCS3:Creation_Complete (Test) to NewMCSA%0A%0A%0A   Identity = 200 + Test%0A   NewMCSB = create Multiple_Creation_States with idMCS         = Identity          &\%0A                                                  ResultA       = 0                 &\%0A                                                  Current_State = 'Creation_stateB'%0A%0A   generate objMCS3:Creation_Complete (Test) to NewMCSB%0A%0A   # Create a new instance to verify the tests%0A   newMCS = create Multiple_Creation_States with idMCS          = Test   &\%0A                                                  ResultA       = 0      &\%0A                                                  Current_State = 'Idle'%0A%0A   # Initiate the test%0A   generate objMCS4:Perform_Verification(Test%2C The_Test_Number) to newMCS%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 31%0A%0A#-------------------------------------------------------------------------%0A# Test 32%0A#-------------------------------------------------------------------------%0A%0A   # Increment this value for each new test%0A   Test = 1%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   # Create an instance to perform the test against%0A   newETS = create EventToSelf with idETS         = Test   &\%0A                                    NewResult     = 0      &\%0A                                    OldResult     = 0      &\%0A                                    Current_State = 'Idle'%0A%0A   # Initiate the test%0A   generate ETS3:StartA(Test) to newETS%0A%0A   generate ETS5:VerifyEventToSelf(Test%2C The_Test_Number) to newETS%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 32%0A%0A#-------------------------------------------------------------------------%0A# Test 33%0A#-------------------------------------------------------------------------%0A%0A   # Increment this value for each new test%0A   Test = 1%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   # Create an instance%0A   #   Identity = 100 + Test%0A   #   newBTD = create BornToDie with idBTD = Identity & ResultA = 0%0A%0A   # Generate this instance%0A   #   generate BTD4:CreateInstance(test) to newBTD%0A%0A   [] = BTD1:Into_Creation[Test%2C The_Test_Number]%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 33%0A%0A#-------------------------------------------------------------------------%0A# Test 34%0A#-------------------------------------------------------------------------%0A%0A   # Increment this value for each new test%0A   The_Test_Number = The_Test_Number + 1%0A%0A   Test = 1%0A%0A   # Create an instance to perform the test against%0A   newBTD = create BornToDie with idBTD         = Test   &\%0A                                  ResultA       = 0      &\%0A                                  Current_State = 'Idle'%0A%0A   # Initiate the test%0A   generate BTD3:VerifyBornToDie(Test%2C The_Test_Number) to newBTD%0A%0A   Test_Counter = Test_Counter + 1%0A%0A# End Test 34%0A%0A#-------------------------------------------------------------------------%0A# Test 35 - Although this is the last test in the scenario it should be %0A#           one of the first to be executed due to the rule that one ASL%0A#           block shall run to completion before another starts%0A#-------------------------------------------------------------------------%0A%0A  The_Test_Number = The_Test_Number + 1%0A%0A  [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0401"%2C "Events"%2C "Scenario"%2C "Creation event"]%0A%0A  if Test_Counter != 33 then%0A     [] = RPT3:Test_Failed["Events"%2C  The_Test_Number%2C Test_Counter]%0A  else%0A     [] = RPT2:Test_Passed["Events"%2C  The_Test_Number%2C Test_Counter]%0A  endif%0A%0A# End Test 35%0A%0A#-------------------------------------------------------------------------%0A# Increment this value for each new test%0A#-------------------------------------------------------------------------%0A%0A   if my_test != UNDEFINED then%0A      The_Test_Number = The_Test_Number + 1%0A      my_test.Current_Test_Number = The_Test_Number%0A   endif%0A%0A%0A,,,,,,,
codeblock,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,1,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, Events Scenario%0A,,,,,,,
routine,,,,,,,,
routine,Events,,private,Start_Events_Tests,2,,,
codeblock,my_test = create Test_Data with Current_Test_Number = 1%0A%0A[] = Events1::Create_Report_Data[]%0A,,,,,,,
codeblock,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,2,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, Start Events Tests%0A,,,,,,,
routine,,,,,,,,
routine,Events,,private,Polymorphism,3,,,
codeblock,%0Amy_test = find-one Test_Data%0A%0Aif my_test = UNDEFINED then%0A   The_Test_Number = 200%0Aelse%0A   The_Test_Number = my_test.Current_Test_Number%0Aendif%0A%0A%0A#---------------------------------------------------------------------------%0A%0AD_TL   = create Top_Level      with TL_id          = 1 & Result = 0 & Current_State = 'Check'%0AD_SL1B = create Sub_Level_1_B  with SL1B_id        = 1%0AD_SL2D = create Sub_Level_2_D  with SL2D_id        = 1%0AD_SL3D = create Sub_Level_3_D  with SL3D_id        = 1%0AD_BLJ  = create Bottom_Level_J with BLJ_id         = 1 %0A%0A# Now link them%0A%0Alink D_TL   R9  D_SL1B%0Alink D_SL1B R11 D_SL2D%0Alink D_SL2D R17 D_SL3D%0Alink D_SL3D R16 D_BLJ%0A%0A%0A#---------------------------------------------------------------------------%0A# Before we try anything complicated%2C let's just prove that Navigation is possible%0A# top to bottom of this creation.%0A#---------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "Null Requid"%2C "Events"%2C "Multi level super sub"%2C "Navigate bottom to top"]%0A%0A   View_Of_Top_From_Bottom = D_BLJ -> R16.Sub_Level_3_D -> R17.Sub_Level_2_D -> R11.Sub_Level_1_B -> R9.Top_Level%0A%0A   if View_Of_Top_From_Bottom.TL_id = D_TL.TL_id then%0A      [] = RPT2:Test_Passed["View of top"%2C The_Test_Number%2CView_Of_Top_From_Bottom.TL_id ]%0A   else%0A      [] = RPT3:Test_Failed["View of top"%2C The_Test_Number%2C View_Of_Top_From_Bottom.TL_id]%0A   endif%0A%0A#---------------------------------------------------------------------------%0A# Test 39 - Bottom to top%0A#---------------------------------------------------------------------------%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "Null Requid"%2C "Events"%2C "Multi level super sub"%2C "Navigate top to bottom"]%0A%0A   View_Of_Bottom_From_Top = D_TL -> R9.Sub_Level_1_B -> R11.Sub_Level_2_D -> R17.Sub_Level_3_D -> R16.Bottom_Level_J%0A%0A   if View_Of_Bottom_From_Top.BLJ_id = D_BLJ.BLJ_id then%0A      [] = RPT2:Test_Passed["View of bottom"%2C The_Test_Number%2C View_Of_Bottom_From_Top.BLJ_id]%0A   else%0A      [] = RPT3:Test_Failed["View of bottom"%2C The_Test_Number%2C View_Of_Bottom_From_Top.BLJ_id]%0A   endif%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A#---------------------------------------------------------------------------%0A# Test 40 - Polymorphically deleviver events from the top level to sub level%0A#           1%2C sub level 2 and the bottom level%2C missing out sub level 3%0A#           N.B. Currently polymorphic event delivery to sub types is%0A#           restricted to just one sub level. Attempting to deliver events %0A#           to levels below the first sub type will cause the generated code%0A#           to report errors.%0A#---------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0404"%2C "Events"%2C "Multi level super sub"%2C "Polymorphic Event Delivery"]%0A   [] = RPT4:Test_Unsupported [The_Test_Number]%0A%0A   [] = RPT5:Test_Text[The_Test_Number%2C "Only for level"]%0A%0A#   generate TL1:Go() to D_TL%0A#   generate TL2:Finish(The_Test_Number) to D_TL%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A#---------------------------------------------------------------------------%0A%0Amy_test.Current_Test_Number = The_Test_Number,,,,,,,
codeblock,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,3,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, Polymorphism%0A,,,,,,,
routine,,,,,,,,
routine,Events,,private,Basic_Events,4,,,
codeblock,   my_test = find-one Test_Data%0A%0A   if my_test = UNDEFINED then%0A      # Start in safe mode%0A      The_Test_Number = 100%0A   else%0A      The_Test_Number = my_test.Current_Test_Number%0A   endif%0A%0A   [Host] = WAW1:What_Env[]%0A%0A#-------------------------------------------------------------------------%0A# Test 1 - Test that for an active class a Current State attribute exists%0A#          by reading it and also by writing to it and so changing the %0A#          Current State%0A#------------------------------------------------------------------------- %0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0201"%2C "Events"%2C "Scenario"%2C "Check Current State"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0103"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0104"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0202"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0205"]%0A%0A   firstSC = create State_Check with The_ID          = 0               &\%0A                                     The_Test_No     = The_Test_Number &\%0A                                     Whats_The_State = "Idle"          &\%0A                                     Current_State   = 'Idle' %0A%0A   if firstSC.Current_State = 'Idle' then%0A      [] = RPT2:Test_Passed["Events"%2C The_Test_Number%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Events"%2C The_Test_Number%2C -10]%0A   endif%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 1%0A%0A#-------------------------------------------------------------------------%0A# Test 2 - Check that the Current_State attribute can be written to%0A#          This test also proves that an active object supports the notion%0A#          of states by navigating from the 'Start' state to the %0A#          'Check_State' state and then on to the 'Idle' state%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0204"%2C "Events"%2C "Scenario"%2C "Check the states"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0501"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0402"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0205"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0209"]%0A%0A   generate SC1:Check_The_State (The_Test_Number) to firstSC%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 2%0A%0A#-------------------------------------------------------------------------%0A# Test 3 - This test creates a new instance of State_Check and then%0A#          updates the Current_State.%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0202"%2C "Events"%2C "Scenario"%2C "Write to the current state"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0204"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0402"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0205"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0209"]%0A%0A   secondSC = create State_Check with The_ID          = 0               &\%0A                                      The_Test_No     = The_Test_Number &\%0A                                      Whats_The_State = " "             &\%0A                                      Current_State   = 'Idle'%0A%0A   secondSC.Current_State = 'Idle'%0A%0A   generate SC1:Check_The_State (The_Test_Number) to secondSC%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 3%0A%0A#-------------------------------------------------------------------------%0A# Test 4 - Test Creation States%0A#          N.B. Creation States are not currently supported%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0203"%2C "Events"%2C "Scenario"%2C "Check Creation State"]%0A   [] = RPT5:Test_Text[The_Test_Number%2C "Creation States are not supported"]%0A   [] = RPT4:Test_Unsupported[The_Test_Number]%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 4%0A%0A#-------------------------------------------------------------------------%0A# Test 5 - Test that ASL in Creation States works correctly%0A#           N.B. Creation States are not currently supported%0A#-------------------------------------------------------------------------%0A%0A  [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0506"%2C "Events"%2C "Scenario"%2C "Check ASL in creation state"]%0A  [] = RPT5:Test_Text[The_Test_Number%2C "Creation States are not supported"]%0A  [] = RPT4:Test_Unsupported[The_Test_Number]%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 5%0A%0A#-------------------------------------------------------------------------%0A# Test 6 - Test that events may be generated successfully from scenarios%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0301"%2C "Events"%2C "Scenario"%2C "Event from Scenario"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1103-0000-01-0711"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0402"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0209"]%0A%0A   firstX = create Object_X with ResultX         = 0               &\%0A                                 The_Test_No     = The_Test_Number &\%0A                                 Integer_Att     = 0               &\%0A                                 Real_Att        = 0.0             &\%0A                                 Text_Att        = " "             &\%0A                                 Boolean_Att     = FALSE           &\%0A                                 Current_State   = 'Idle'%0A%0A   generate objX1:Check_ASL(The_Test_Number%2C "Scenario") to firstX%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# end Test 6%0A%0A#-------------------------------------------------------------------------%0A# Test 7 - This test calls a domain sync servince which in turn generates%0A#          an event to test that events may be generated from services%0A#-------------------------------------------------------------------------%0A%0A   [] = Events3::Generate_From_Service[The_Test_Number%2C firstX]%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 7%0A%0A#-------------------------------------------------------------------------%0A# Test 8 - This test generates an event which in turn generates an event %0A#          from within the state machine to test that states may be %0A#          generated from within state machines%0A#-------------------------------------------------------------------------%0A  %0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0301"%2C "Events"%2C "Scenario"%2C "Event from State"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1103-0000-01-0711"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0402"]%0A%0A   generate objX3:From_State (The_Test_Number) to firstX%0A%0A  The_Test_Number = The_Test_Number + 1%0A%0A# End Test 8%0A%0A#-------------------------------------------------------------------------%0A# Test 9 - This test calls a bridge function which then generates an event%0A#          to test that events may be generated from bridge functions%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0301"%2C "Events"%2C "Scenario"%2C "Event from bridge"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1103-0000-01-0711"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0402"]%0A%0A   [] = GFB1:Generate_Event[The_Test_Number%2C firstX]%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 9%0A%0A#-------------------------------------------------------------------------%0A# Test 10 - Test that attributes from the target instance can be read from%0A#           within its own state action%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0503"%2C "Events"%2C "Scenario"%2C "Read attribute from target"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0402"]%0A%0A   fourthX = create Object_X with ResultX         = 0               &\%0A                                  The_Test_No     = The_Test_Number &\%0A                                  Integer_Att     = 100             &\%0A                                  Real_Att        = 99.9            &\%0A                                  Text_Att        = "Test_Data"     &\%0A                                  Boolean_Att     = TRUE            &\%0A                                  Current_State   = 'Idle'%0A%0A   generate objX4:Check_Attributes (The_Test_Number%2C "Read_Target_Instance") to fourthX%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 10%0A%0A#-------------------------------------------------------------------------%0A# Test 11 - Test that attributes from the target instance can be written%0A#           to from within its own state action%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0503"%2C "Events"%2C "Scenario"%2C "Update attributes from target"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0402"]%0A%0A   fifthX = create Object_X with ResultX         = 0               &\%0A                                 The_Test_No     = The_Test_Number &\%0A                                 Integer_Att     = 100             &\%0A                                 Real_Att        = 99.9            &\%0A                                 Text_Att        = "Test_Data"     &\%0A                                 Boolean_Att     = FALSE           &\%0A                                 Current_State   = 'Idle'%0A%0A   generate objX4:Check_Attributes (The_Test_Number%2C "Write_Target_Instance") to fifthX%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 11%0A%0A#-------------------------------------------------------------------------%0A# Test 12 - Test that attributes of a different instance to the current%0A#           state action can be read from%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0504"%2C "Events"%2C "Scenario"%2C "Read attribute from another instance"]%0A%0A   newX = create Object_X with ResultX         = 999             &\%0A                               The_Test_No     = The_Test_Number &\%0A                               Integer_Att     = 1111            &\%0A                               Real_Att        = 11.1            &\%0A                               Text_Att        = "Dummy_Data"    &\%0A                               Boolean_Att     = FALSE           &\%0A                               Current_State   = 'Idle'%0A%0A   generate objX4:Check_Attributes (The_Test_Number%2C "Read_Other_Instance") to fourthX%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 12%0A%0A%0A#-------------------------------------------------------------------------%0A# Test 13 - Test that attributes of a different instance to the current%0A#           state action can be written to%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0504"%2C "Events"%2C "Scenario"%2C "Update attribute from another instance"]%0A%0A   fifthX = create Object_X with ResultX         = 0               &\%0A                                 The_Test_No     = The_Test_Number &\%0A                                 Integer_Att     = 100             &\%0A                                 Real_Att        = 99.9            &\%0A                                 Text_Att        = "Test_Data"     &\%0A                                 Boolean_Att     = FALSE           &\%0A                                 Current_State   = 'Idle'%0A%0A   generate objX4:Check_Attributes (The_Test_Number%2C "Write_Other_Instance") to fourthX%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 13%0A%0A#-------------------------------------------------------------------------%0A# Test 14 - Test that instances from different objects can be read from%0A#           within the state machine%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0505"%2C "Events"%2C "Scenario"%2C "Read attribute from another object"]%0A%0A   firstZ = create Object_Z with The_Test_No = The_Test_Number &\%0A                                 Int_Att     = 1000            &\%0A                                 Real_Att    = 1000.0          &\%0A                                 Text_Att    = "Test_Data"%0A%0A   generate objX4:Check_Attributes (The_Test_Number%2C "Read_Other_Object") to fourthX%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 14%0A%0A#-------------------------------------------------------------------------%0A# Test 15 - Test that attributes from instances from other objects can be %0A#           written to from within the target state machine%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0505"%2C "Events"%2C "Scenario"%2C "Update attribute from another object"]%0A%0A   secondZ = create Object_Z with The_Test_No = The_Test_Number &\%0A                                  Int_Att     = 0   &\%0A                                  Real_Att    = 0.0 &\%0A                                  Text_Att    = " "%0A%0A   generate objX4:Check_Attributes (The_Test_Number%2C "Write_Other_Object") to fourthX%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 15%0A%0A%0A#-------------------------------------------------------------------------%0A# Test 16 - Check that ASL in a state machine is supported%0A#-------------------------------------------------------------------------%0A%0A  [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0507"%2C "Events"%2C "Scenario"%2C "Check ASL in instance state"]%0A%0A  generate objX5:Check_ASL_In_State(The_Test_Number%2C 100) to fourthX%0A%0A  The_Test_Number = The_Test_Number + 1%0A%0A# End Test 16%0A%0A#-------------------------------------------------------------------------%0A# Test 18 - Test that the architecture does not restrict the number%0A#          of parameters that an event can carry%0A#          1241-0000-01-0408%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0408"%2C "Events"%2C "objX"%2C "Lots of Params"]%0A%0A   [] = RPT5:Test_Text[The_Test_Number%2C "More params than ever required"]%0A%0A   Val_A = 1%0A   Val_B = 2%0A   Val_C = 4%0A   Val_D = 8%0A   Val_E = 16%0A   Val_F = 32%0A   Val_G = 64%0A   Val_H = 128%0A   Val_I = 256%0A   Val_J = 512%0A   Val_K = 1024%0A   Val_L = 2048%0A   Val_M = 4096%0A   Val_N = 8192%0A   Val_O = 16384%0A   Val_P = 32768%0A   Val_Q = 65536%0A   Val_R = 131072%0A   Val_S = 262144%0A   Val_T = 524288%0A   Val_U = 1048576%0A   Val_V = 2097152%0A   Val_W = 4194304%0A   Val_X = 8388608%0A   Val_Y = 16777216%0A   Val_Z = 33554432%0A%0A   secondX = create Object_X with ResultX         = 0               &\%0A                                 The_Test_No     = The_Test_Number &\%0A                                 Integer_Att     = 0               &\%0A                                 Real_Att        = 0.0             &\%0A                                 Text_Att        = " "             &\%0A                                 Boolean_Att     = FALSE           &\%0A                                 Current_State   = 'Idle'%0A%0A   # Initiate the test%0A   generate objX6:Check_Lots_Of_Params(The_Test_Number%2C Val_A%2C Val_B%2C Val_C%2C Val_D%2C Val_E%2C Val_F%2C Val_G%2C Val_H%2C Val_I%2C Val_J%2C Val_K%2C Val_L%2C Val_M%2C \%0A                                               Val_N%2C Val_O%2C Val_P%2C Val_Q%2C Val_R%2C Val_S%2C Val_T%2C Val_U%2C Val_V%2C Val_W%2C Val_X%2C Val_Y%2C Val_Z) to secondX%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 18 %0A%0A#-------------------------------------------------------------------------%0A# Test 19%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0214"%2C "Events"%2C "Scenario"%2C "Lots of states"]%0A   [] = RPT5:Test_Text[The_Test_Number%2C "More states than ever required"]%0A%0A   inst_Huge_State = create Huge_State_Machine with Current_State = 'Idle'%0A%0A   generate HSM1:Increment(The_Test_Number%2C 0) to inst_Huge_State%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 19%0A%0A#-------------------------------------------------------------------------%0A# Test 20%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0502"%2C "Events"%2C "Scenario"%2C "Parameter Check"]%0A%0A   instCP = create Check_Parameters with CP_ID          = 0               &\%0A                                         Number_Of_Test = The_Test_Number &\%0A                                         Current_State  = 'Idle'%0A%0A   The_Start_Value = 0%0A%0A   generate CP1:Start(The_Start_Value) to instCP%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 20%0A%0A#-------------------------------------------------------------------------%0A# Test 21 - Test that the architecture does not restrict the number of%0A#           events that can be queued%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0305"%2C "Events"%2C "Scenario"%2C "Many events on queue"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0407"]%0A%0A   [] = RPT5:Test_Text [The_Test_Number%2C "More queued events than ever required"]%0A%0A   instZ = create Object_Z with The_Test_No    = The_Test_Number &\%0A                                Int_Att        = 0               &\%0A                                Real_Att       = 0.0             &\%0A                                Text_Att       = " "             &\%0A                                Current_State  = 'Idle'%0A%0A   Count = 0%0A%0A   loop%0A      generate objZ1:Start() to instZ%0A      Count = Count + 1%0A      breakif Count = 1000%0A   endloop%0A%0A   generate objZ3:Check_Total() to instZ%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 21%0A%0A#-------------------------------------------------------------------------%0A# Test 23 - Ensure that generated events with an Ignore effect are %0A#           dealt with correctly%0A#-------------------------------------------------------------------------%0A%0A   instTE1 = create Test_Effects with ID            = 0 &\%0A                                      Result        = 0  &\%0A                                      Current_State = 'Idle'%0A%0A   generate TE1:Gen_Ignore(The_Test_Number) to instTE1%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 23%0A%0A#-------------------------------------------------------------------------%0A# Test 24%0A#-------------------------------------------------------------------------%0A%0A   instTE2 = create Test_Effects with ID            = 1 &\%0A                                      Result        = 0 &\%0A                                      Current_State = 'Idle'%0A%0A   instCCS = create Check_Current_States with Current_State = 'Check'%0A%0A   generate TE2:Check_Ignore_State(The_Test_Number) to instTE2%0A%0A   generate CCS1:Start(The_Test_Number%2C "Ignore") to instCCS%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 24%0A%0A#-------------------------------------------------------------------------%0A# Test 25%0A#-------------------------------------------------------------------------%0A%0A   instTE3 = create Test_Effects with ID            = 2 &\%0A                                      Result        = 0 &\%0A                                      Current_State = 'Idle'%0A%0A   if Host = "ISIM" then%0A      generate TE6:Gen_To_Unsupported(The_Test_Number%2C "1241-0000-01-0212"%2C "Cannot Happen") to instTE3%0A   else%0A      generate TE4:Gen_Cannot_Happen(The_Test_Number) to instTE3%0A   endif%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 25%0A%0A#-------------------------------------------------------------------------%0A# Test 26%0A#-------------------------------------------------------------------------%0A%0A   instTE4 = create Test_Effects with ID            = 3 &\%0A                                      Result        = 0 &\%0A                                      Current_State = 'Idle'%0A%0A   if Host = "ISIM" then%0A      generate TE6:Gen_To_Unsupported(The_Test_Number%2C "1241-0000-01-0213"%2C "Cannot Happen") to instTE4%0A   else%0A      generate TE5:Check_CH_State(The_Test_Number) to instTE4%0A%0A      generate CCS1:Start(The_Test_Number%2C "Cannot Happen") to instCCS%0A   endif%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 26%0A%0A#-------------------------------------------------------------------------%0A# Test 27%0A#-------------------------------------------------------------------------%0A%0A   instTE5 = create Test_Effects with ID            = 4 &\%0A                                      Result        = 0 &\%0A                                      Current_State = 'Idle'%0A%0A   if Host = "ISIM" then%0A      generate TE6:Gen_To_Unsupported(The_Test_Number%2C "1241-0000-01-0213"%2C "Undefined") to instTE4%0A   else%0A      generate TE7:Gen_To_Undefined(The_Test_Number) to instTE5%0A   endif%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test 27%0A%0A#-------------------------------------------------------------------------%0A# Test %0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0409"%2C "Events"%2C "Scenario"%2C "Event from State"]%0A%0A   instCD1 = create Check_Delete with idCD          = 1     &\%0A                                      CDTotal       = 0     &\%0A                                      Current_State = 'Idle'%0A%0A   instCD2 = create Check_Delete with idCD          = 2     &\%0A                                      CDTotal       = 0     &\%0A                                      Current_State = 'Idle'%0A%0A   delete instCD2%0A%0A   if Host = "ISIM" then%0A      [] = RPT4:Test_Unsupported[The_Test_Number]%0A   else%0A      generate objCD1:Check(The_Test_Number%2C TRUE) to instCD2%0A      generate objCD1:Check(The_Test_Number%2C FALSE) to instCD1%0A   endif%0A %0A   The_Test_Number = The_Test_Number + 1%0A%0A# End Test%0A%0A#-------------------------------------------------------------------------%0A# Test %0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0403"%2C "Events"%2C "Scenario"%2C "Check Persistence"]%0A   [] = RPT8:Specify_Requid[The_Test_Number%2C "1241-0000-01-0303"]%0A%0A   InstTP = create Test_Persistence with TPID          = 10 &\%0A                                         Current_State = 'Idle'%0A%0A   StartA_Value = 10%0A%0A   generate objTP1:Start_A(The_Test_Number%2C StartA_Value) to InstTP%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0303"%2C "Events"%2C "Scenario"%2C "Real as event data"]%0A   generate objTP4:Pass_Real(The_Test_Number%2C 99.9) to InstTP%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0303"%2C "Events"%2C "Scenario"%2C "Test as event data"]%0A   generate objTP6:Pass_Text(The_Test_Number%2C "Text Passed") to InstTP%0A%0A   The_Test_Number = The_Test_Number + 1%0A%0A#-------------------------------------------------------------------------%0A   if my_test != UNDEFINED then%0A      my_test.Current_Test_Number = The_Test_Number%0A   endif,,,,,,,
codeblock,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,4,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, Basic_Events%0A,,,,,,,
routine,,,,,,,,
routine,Events,,private,End_Events_Tests,5,,,
codeblock,   my_test = find-one Test_Data%0A   The_Test_Number = my_test.Current_Test_Number%0A%0A   [] = Events2::Delete_Report_Data[]%0A%0A   my_test = find-one Test_Data%0A%0A   if my_test != UNDEFINED then%0A      delete my_test%0A   endif,,,,,,,
codeblock,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,5,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, End Events Tests%0A,,,,,,,
routine,,,,,,,,
routine,Events,,private,Event_Priorities,6,,,
codeblock,   my_test = find-one Test_Data%0A%0A   if my_test = UNDEFINED then%0A      # Start in safe mode%0A      The_Test_Number = 100%0A   else%0A      The_Test_Number = my_test.Current_Test_Number%0A   endif%0A%0A#-------------------------------------------------------------------------%0A# Test 1 - Test that the priority of events is executed correctly%0A#          N.B. This test MUST be the LAST to be executed%0A#-------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[The_Test_Number%2C "1241-0000-01-0406"%2C "Events"%2C "Scenario"%2C "Priority of events"]%0A%0A   InstPA = create Priority_A with A_ID          = 1     &\%0A                                   RefA          = 0     &\%0A                                   Event_Count   = 0     &\%0A                                   Done_It       = FALSE &\%0A                                   Poly_A        = FALSE &\%0A                                   Poly_B        = FALSE &\%0A                                   Current_State = 'Idle'%0A%0A   InstPB = create Priority_B with B_ID          = 1     &\%0A                                   Current_State = 'Idle'%0A%0A   link InstPA R20 InstPB%0A%0A   generate PriA1:ST_Start(The_Test_Number%2C 3) to InstPA%0A%0A# End Test 1%0A%0A#-------------------------------------------------------------------------%0A%0A   if my_test != UNDEFINED then%0A      my_test.Current_Test_Number = The_Test_Number%0A   endif,,,,,,,
codeblock,,,,,,,,
pragma,scenario,,,,,,,
pragmaitem,6,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, Event Priorities%0A,,,,,,,
routine,,,,,,,,
routine,Events,,public,Create_Report_Data,1,,,
codeblock,# Find out of there already is one of these.%0A# It is not inconceivable that a report object still exists from a previous run.%0A# Report objects are not deleted at the end of a run%2C as certain events may%0A# still be en-queued.%0A%0Aold_report = find-one Report_Data%0A%0Aif old_report != UNDEFINED then%0A   delete old_report%0Aendif%0A%0AMy_Report = create unique Report_Data with Reported_Domain_Number = 0%0A%0A[] = RPT6:Domain_Test_Start["Events"]%0A,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,Events,,public,Delete_Report_Data,2,,,
codeblock,[] = RPT7:Domain_Test_Finished["Events"]%0A%0A# Do not delete the Report_Data object%2C as there may be still events in%0A# the queue.,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,Events,,public,Generate_From_Service,3,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,The_IH,in,,,,,,
typeref,instance of Object_X,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,[] = RPT1:Start_Test[Test_No%2C "1241-0000-01-0301"%2C "Events"%2C "Bridge"%2C "Event from Bridge Function"]%0A[] = RPT8:Specify_Requid[Test_No%2C "1103-0000-01-0711"]%0A%0Agenerate objX1:Check_ASL(Test_No%2C "Sync Service") to The_IH,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,Events,,public,Verify_Priority,4,,,
parameter,Ref_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Event_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,if Event_No = 6 then%0A%0A   if Ref_No = 60 then%0A      [] = RPT2:Test_Passed["Event Priority"%2C Test_No%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Event Priority"%2C Test_No%2C Ref_No]%0A   endif%0A%0A   my_test = find-one Test_Data%0A   The_Test_Number = my_test.Current_Test_Number%0A%0A   [] = Events2::Delete_Report_Data[]%0A%0A   my_test = find-one Test_Data%0A%0A   if my_test != UNDEFINED then%0A      delete my_test%0A   endif%0A%0Aendif,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,Events,,public,Dump_Text,5,,,
parameter,The_Text,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,   $INLINE%0A      fprintf(stderr%2C"%25s\n"%2C The_Text);%0A   $ENDINLINE%0A%0A   #$ADA_INLINE%0A   # with Test_Suite_Text_IO;%0A   # %0A   #  Test_Suite_Text_IO.Dump_String(The_Text);%0A   #%0A   #$END_ADAINLINE,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,Events,,public,Add_One,6,,,
parameter,Input_Value,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Output_Value,out,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Input_Value%0Atemp = temp + 1%0A%0AOutput_Value = temp,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
terminator,Report,RPT,,,,,,
routine,Events,,public,Start_Test,1,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Requid,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Invoking_Domain,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Invoking_Object,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Purpose,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,Events,,public,Test_Passed,2,,,
parameter,Test_Object_Domain,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Value,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,Events,,public,Test_Failed,3,,,
parameter,Failed_Domain_Object,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Failed_Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Failed_Test_Value,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,Events,,public,Test_Unsupported,4,,,
parameter,Unsupported_Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,Events,,public,Test_Text,5,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Free_Text,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,Events,,public,Domain_Test_Start,6,,,
parameter,This_Domain_Name,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,Events,,public,Domain_Test_Finished,7,,,
parameter,This_Domain_Name,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,Events,,public,Specify_Requid,8,,,
parameter,Requid_Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,The_Requid_Itself,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
routine,Events,,public,Perform_Req_Anal,9,,,
routine,,,,,,,,
terminator,,,,,,,,
terminator,Generate_From_Bridge,GFB,,,,,,
routine,Events,,public,Generate_Event,1,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,The_IH,in,,,,,,
typeref,instance of Object_X,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
terminator,,,,,,,,
terminator,Where_Are_We,WAW,,,,,,
routine,Events,,public,What_Env,1,,,
parameter,Local_Env_Text,out,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
routine,,,,,,,,
terminator,,,,,,,,
subsuper,R1,,,,,,,
participation,,Object_A,,,,,,
participation,,Object_B,,,,,Object_A,
participation,,Object_C,,,,,Object_A,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R2,,,,,,,
participation,,Object_M,,,,,,
participation,,Object_N,,,,,Object_M,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R5,,,,,,,
participation,,Object_D,,,,,,
participation,,Object_E,,,,,Object_D,
participation,,Object_F,,,,,Object_D,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R3,,,,,,,
participation,,Object_N,,,,,,
participation,,Object_O,,,,,Object_N,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R7,,,,,,,
participation,,Object_J,,,,,,
participation,,Object_K,,,,,Object_J,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R4,,,,,,,
participation,,Object_P,,,,,,
participation,,Object_Q,,,,,Object_P,
participation,,Object_R,,,,,Object_P,
participation,,Object_S,,,,,Object_P,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R8,,,,,,,
participation,,Object_T,,,,,,
participation,,Object_U,,,,,Object_T,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R13,,,,,,,
participation,,SuperA,,,,,,
participation,,SubB,,,,,SuperA,
participation,,SubA,,,,,SuperA,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R14,,,,,,,
participation,,SuperA,,,,,,
participation,,SubC,,,,,SuperA,
participation,,SubD,,,,,SuperA,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R6,,,,,,,
participation,,SuperA,,,,,,
participation,,SubE,,,,,SuperA,
participation,,SubF,,,,,SuperA,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R9,,,,,,,
participation,,Top_Level,,,,,,
participation,,Sub_Level_1_A,,,,,Top_Level,
participation,,Sub_Level_1_B,,,,,Top_Level,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R10,,,,,,,
participation,,Sub_Level_1_A,,,,,,
participation,,Sub_Level_2_A,,,,,Sub_Level_1_A,
participation,,Sub_Level_2_B,,,,,Sub_Level_1_A,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R11,,,,,,,
participation,,Sub_Level_1_B,,,,,,
participation,,Sub_Level_2_C,,,,,Sub_Level_1_B,
participation,,Sub_Level_2_D,,,,,Sub_Level_1_B,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R12,,,,,,,
participation,,Sub_Level_2_A,,,,,,
participation,,Sub_Level_3_A,,,,,Sub_Level_2_A,
participation,,Sub_Level_3_B,,,,,Sub_Level_2_A,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R17,,,,,,,
participation,,Sub_Level_2_D,,,,,,
participation,,Sub_Level_3_D,,,,,Sub_Level_2_D,
participation,,Sub_Level_3_C,,,,,Sub_Level_2_D,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R15,,,,,,,
participation,,Sub_Level_3_A,,,,,,
participation,,Bottom_Level_A,,,,,Sub_Level_3_A,
participation,,Bottom_Level_B,,,,,Sub_Level_3_A,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R18,,,,,,,
participation,,Sub_Level_3_A,,,,,,
participation,,Bottom_Level_F,,,,,Sub_Level_3_A,
participation,,Bottom_Level_E,,,,,Sub_Level_3_A,
participation,,Bottom_Level_D,,,,,Sub_Level_3_A,
participation,,Bottom_Level_C,,,,,Sub_Level_3_A,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R19,,,,,,,
participation,,Sub_Level_3_A,,,,,,
participation,,Bottom_Level_G,,,,,Sub_Level_3_A,
participation,,Bottom_Level_H,,,,,Sub_Level_3_A,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R16,,,,,,,
participation,,Sub_Level_3_D,,,,,,
participation,,Bottom_Level_I,,,,,Sub_Level_3_D,
participation,,Bottom_Level_J,,,,,Sub_Level_3_D,
participation,,,,,,,,
subsuper,,,,,,,,
subsuper,R20,,,,,,,
participation,,Priority_A,,,,,,
participation,,Priority_B,,,,,Priority_A,
participation,,,,,,,,
subsuper,,,,,,,,
object,BornToDie,BTD,38,,,,,
attribute,idBTD,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, Preferred identifier.%0A,,,,,,,
attribute,,,,,,,,
attribute,ResultA,,,idBTD,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, This attribute is manipulated to indicate that the required operation was successful.%0A,,,,,,,
attribute,,,,,,,,
operation,Events,BornToDie,public,Into_Creation,,,1,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,%0A%0A#Create an instance%0AIdentity = 100 + Test%0AnewBTD = create BornToDie with idBTD = Identity & \%0A                               ResultA = 0 & \%0A                               Current_State = 'Creation_state'%0A%0A#Generate this instance%0Agenerate BTD5:DeleteInstance(Test%2C Test_Number) to newBTD%0A%0A#------------------------------------------------------------------------#%0A,,,,,,,
codeblock,,,,,,,,
description, Cause transition into creation state%2C for subsequent deletion%0A,,,,,,,
operation,,,,,,,,
state,,BornToDie,Creation_state,,1,,,
codeblock,#------------------------------------------------------------------------#%0A%0A#null%0A%0A#------------------------------------------------------------------------#,,,,,,,
codeblock,,,,,,,,
description, This state verifies the following:%0A %0A %0A [1] The creation of an instance.%0A,,,,,,,
state,,,,,,,,
state,,BornToDie,Termination_state,terminal,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#------------------------------------------------------------------------#%0A%0A#Deletion state%0A%0A#------------------------------------------------------------------------#%0A%0A[] = RPT1:Start_Test[Test_Number%2C "Null Requid"%2C "Events"%2C "Deletion State"%2C "born to die deletion"]%0A%0A%0A[] = RPT2:Test_Passed["BornToDie"%2C Test_Number%2C 0]%0A%0A#Delete self%0Adelete this%0A%0A#------------------------------------------------------------------------#,,,,,,,
codeblock,,,,,,,,
description, This state verifies the following:%0A %0A 	[1]	The deletion of self.%0A,,,,,,,
state,,,,,,,,
state,,BornToDie,Idle,,3,,,
codeblock,###### There is no ASL for this state ######,,,,,,,
codeblock,,,,,,,,
description, Idle state.%0A No action taken.%0A,,,,,,,
state,,,,,,,,
state,,BornToDie,Verify_Tests,,4,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#------------------------------------------------------------------------#%0A%0A#Verify born-to-die lifecycle%0A%0A#------------------------------------------------------------------------#%0A%0A#Initialise the fault flag%0Afaultflag = FALSE%0A%0A#------------------------------------------------------------------------#%0A%0A[] = RPT1:Start_Test[Test_Number%2C "Null Requid"%2C "Events"%2C "BornToDie"%2C "verify born to die instance"]%0A%0A#Test 1%0A%0Aif Test = 1 then%0A%0A   #Find instancea if they exist%0A   Identity = 100 + Test%0A   {some_instances} = find BornToDie where idBTD >= 100%0A   %0A   #Check that non instances exists%0A   if countof {some_instances} != 0 then%0A      faultflag = TRUE%0A   endif%0A%0Aendif%0A%0A#End Test 1%0A%0A#------------------------------------------------------------------------#%0A%0A#Tests complete%0Aif faultflag = FALSE then%0A%0A   #Indicate that the test was successful and complete%0A   temp = this.ResultA + 10%0A   this.ResultA = temp%0A%0A   [] = RPT2:Test_Passed["objBTD"%2C Test_Number%2C temp]%0A%0A   generate BTD2:Finished() to this%0A%0Aelse%0A%0A   #Indicate that the test failed%0A   [] = RPT3:Test_Failed["objBTD"%2C Test_Number%2C -1]%0A%0A   has_failed = TRUE%0A%0A   generate BTD1:Fault() to this%0A%0Aendif%0A%0A#------------------------------------------------------------------------#%0A,,,,,,,
codeblock,,,,,,,,
description, This state verifies the following:%0A %0A [1] That an instance no longer exists if it had%0A     a born-to-die life cycle.%0A,,,,,,,
state,,,,,,,,
state,,BornToDie,Fail,,5,,,
codeblock,###### There is no ASL for this state ######,,,,,,,
codeblock,,,,,,,,
description, An instance current state is changed to fail%0A if the test failed.%0A,,,,,,,
state,,,,,,,,
event,Fault,,1,,,,,
event,,,,,,,,
event,Finished,,2,,,,,
event,,,,,,,,
event,VerifyBornToDie,,3,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,DeleteInstance,,5,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,VerifyBornToDie,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,DeleteInstance,Cannot_Happen,,,
transition,,,,,,,,
transition,Creation_state,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Creation_state,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Creation_state,,,VerifyBornToDie,Cannot_Happen,,,
transition,,,,,,,,
transition,Creation_state,,,DeleteInstance,Termination_state,,,
transition,,,,,,,,
transition,Termination_state,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Termination_state,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Termination_state,,,VerifyBornToDie,Cannot_Happen,,,
transition,,,,,,,,
transition,Termination_state,,,DeleteInstance,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,VerifyBornToDie,Verify_Tests,,,
transition,,,,,,,,
transition,Idle,,,DeleteInstance,Cannot_Happen,,,
transition,,,,,,,,
transition,Verify_Tests,,,Fault,Fail,,,
transition,,,,,,,,
transition,Verify_Tests,,,Finished,Idle,,,
transition,,,,,,,,
transition,Verify_Tests,,,VerifyBornToDie,Cannot_Happen,,,
transition,,,,,,,,
transition,Verify_Tests,,,DeleteInstance,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,VerifyBornToDie,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,DeleteInstance,Cannot_Happen,,,
transition,,,,,,,,
transitiontable,,,,,,,,
description, This object verifies Born-To-Die life cycle of an instance.%0A,,,,,,,
object,,,,,,,,
object,Bottom_Level_A,BLA,48,,,,,
attribute,BLA_id,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Bottom_Level_B,BLB,49,,,,,
attribute,BLB_id,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Bottom_Level_C,BLC,58,,,,,
attribute,BLC_Identifier,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,BLC_Identifier,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
event,Go_Bottom,,1,,,,,
event,,,,,,,,
object,,,,,,,,
object,Bottom_Level_D,BLD,57,,,,,
attribute,BLD_Identifier,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,BLD_Identifier,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
event,Go_Bottom,,1,,,,,
event,,,,,,,,
object,,,,,,,,
object,Bottom_Level_E,BLE,56,,,,,
attribute,BLE_Identifier,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,BLE_Identifier,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
event,Go_Bottom,,1,,,,,
event,,,,,,,,
object,,,,,,,,
object,Bottom_Level_F,BLF,53,,,,,
attribute,BLF_Identifier,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,BLF_Identifier,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
event,Go_Bottom,,1,,,,,
event,,,,,,,,
object,,,,,,,,
object,Bottom_Level_G,BLG,54,,,,,
attribute,BLG_Identifier,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,BLG_Identifier,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
event,Go_Bottom,,1,,,,,
event,,,,,,,,
object,,,,,,,,
object,Bottom_Level_H,BLH,55,,,,,
attribute,BLH_Identifier,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,BLH_Identifier,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
event,Go_Bottom,,1,,,,,
event,,,,,,,,
object,,,,,,,,
object,Bottom_Level_I,BLI,50,,,,,
attribute,BLI_id,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Bottom_Level_J,BLJ,51,,,,,
attribute,BLJ_id,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
event,Go_Bottom,,1,,,,,
event,,,,,,,,
object,,,,,,,,
object,Check_Current_States,CCS,70,,,,,
state,,Check_Current_States,Check,,2,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Which_Test,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,if Which_Test = "Ignore" then%0A%0A   instTE = find-one Test_Effects where ID = 1%0A%0A   if instTE.Current_State = 'Check_Ignore_State' then%0A      [] = RPT2:Test_Passed["Correct State"%2C Test_No%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Wrong State"%2C Test_No%2C -10]%0A   endif%0A%0Aendif%0A%0Aif Which_Test = "Cannot Happen" then%0A%0A   instTE = find-one Test_Effects where ID = 3%0A%0A   if instTE.Current_State = 'Check_Cannot_Happen_State' then%0A      [] = RPT2:Test_Passed["Correct State"%2C Test_No%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Wrong State"%2C Test_No%2C -10]%0A   endif%0A%0Aendif%0A,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Start,,1,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Which_Test,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Start,Cannot_Happen,,,
transition,,,,,,,,
transition,Check,,,Start,Check,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Check_Delete,objCD,66,,,,,
attribute,CDTotal,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,idCD,,,CDTotal,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Check_Delete,Idle,,1,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Deleted,in,,,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,if not Deleted then%0A%0A   if this.CDTotal = 10 then%0A      [] = RPT2:Test_Passed["Event for deleted instance"%2C Test_No%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Event for deleted instance"%2C Test_No%2C -10]%0A   endif%0A%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Check_Delete,Check,,2,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Deleted,in,,,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,newCD = find-one Check_Delete where idCD = 1%0A%0Atemp = newCD.CDTotal%0Atemp = temp + 10%0AnewCD.CDTotal = temp%0A%0Agenerate objCD2:Finished(Test_No%2C Deleted) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Check,,1,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Deleted,in,,,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finished,,2,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Deleted,in,,,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Check,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Check,Check,,,
transition,,,,,,,,
transition,Idle,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Check,,,Check,Ignore,,,
transition,,,,,,,,
transition,Check,,,Finished,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Check_Parameters,CP,63,,,,,
attribute,CP_ID,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Number_Of_Test,,,CP_ID,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Check_Parameters,Idle,,1,,,
parameter,Start_Val,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Got_To_End,in,,,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,if Got_To_End then%0A%0A   if Start_Val = 10 then%0A      [] = RPT2:Test_Passed["Paramaters"%2C this.Number_Of_Test%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Paramaters"%2C this.Number_Of_Test%2C Start_Val]%0A   endif%0A%0Aelse %0A   [] = RPT3:Test_Failed["Paramaters"%2C this.Number_Of_Test%2C Start_Val]%0Aendif%0A,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Check_Parameters,StartA,,2,,,
parameter,Start_Val,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,if Start_Val < 10 then%0A   temp = Start_Val%0A   temp = Start_Val + 1%0A   generate CP1:Start(temp) to this%0Aelse%0A   Its_Done = TRUE%0A   generate CP2:Finish(Start_Val%2C Its_Done) to this%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Start,,1,,,,,
parameter,Start_Val,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finish,,2,,,,,
parameter,Start_Val,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Got_To_End,in,,,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Start,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finish,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Start,StartA,,,
transition,,,,,,,,
transition,Idle,,,Finish,Ignore,,,
transition,,,,,,,,
transition,StartA,,,Start,StartA,,,
transition,,,,,,,,
transition,StartA,,,Finish,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Creation_Object,objCREATE,26,,,,,
attribute,ReferenceCREATE,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, Referential attribute.%0A,,,,,,,
attribute,,,,,,,,
state,,Creation_Object,Creation_State,creation,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# Creation state%0A#-----------------------------------------------------------%0A%0A#-----------------------------------------------------------%0A# Test 1 - Create an instance of an object.%0A#-----------------------------------------------------------%0A%0A   if Test = 1 then%0A      [] = RPT1:Start_Test[Test_Number%2C "Null Requid"%2C "Events"%2C "Creation State"%2C "Creation state test"]%0A%0A      newCREATE = create Creation_Object with ReferenceCREATE = 1%0A%0A      if newCREATE != UNDEFINED then%0A         [] = RPT2:Test_Passed["Creation State"%2C Test_Number%2C 0]%0A      else%0A         [] = RPT3:Test_Failed["Creation State"%2C Test_Number%2C -1]%0A      endif%0A%0A   endif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,StartA,creation,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,StartA,Creation_State,,,
transition,,,,,,,,
transition,Creation_State,,,StartA,Cannot_Happen,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,EventToSelf,ETS,37,,,,,
attribute,idETS,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, Preferred identifier.%0A,,,,,,,
attribute,,,,,,,,
attribute,NewResult,,,idETS,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, This attribute is manipulated to indicate that the required operation was successful.%0A,,,,,,,
attribute,,,,,,,,
attribute,OldResult,,,NewResult,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, This attribute is manipulated to indicate that the required operation was successful.%0A,,,,,,,
attribute,,,,,,,,
state,,EventToSelf,Idle,,1,,,
codeblock,###### There is no ASL for this state ######,,,,,,,
codeblock,,,,,,,,
description, Idle state.%0A No action taken.%0A,,,,,,,
state,,,,,,,,
state,,EventToSelf,State_One,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-------------------------------------------------------------------#%0A%0A#Generate event to self%0A%0A#-------------------------------------------------------------------#%0A%0A#Test 1%0A%0Aif Test = 1 then%0A%0A   #Generate event to self%0A   generate ETS4:EventToOwnInstance(Test) to this%0A%0Aendif%0A%0A#-------------------------------------------------------------------#,,,,,,,
codeblock,,,,,,,,
description, This state verifies the following:%0A %0A 	%0A [1] That an event is placed onto the top of the%0A     event queue and acted upon before any other%0A     events to the same instance.%0A,,,,,,,
state,,,,,,,,
state,,EventToSelf,State_Two,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#------------------------------------------------------------------------#%0A%0A#Updated attribute 'ResultA' to indicate an event was received%0A%0A#------------------------------------------------------------------------#%0A%0A#Test 1%0A%0Aif Test = 1 then%0A%0A   #Save the current value of attribute 'NewResult'%0A   temp = this.NewResult%0A   this.OldResult = temp%0A%0A   #Update attribute 'NewResult'%0A   newtemp = temp + 10 %0A   this.NewResult = newtemp%0A%0A   #Test complete%0A   generate ETS2:Finished() to this%0A%0Aendif%0A%0A#------------------------------------------------------------------------#,,,,,,,
codeblock,,,,,,,,
description, This state verifies the following:%0A %0A [1] That an event to self is acted upon whilst%0A     other events to the same instance are in the%0A     event queue.%0A,,,,,,,
state,,,,,,,,
state,,EventToSelf,Verify_event_to_self,,4,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#-------------------------------------------------------------------#%0A%0A#Verify tests%0A%0A#-------------------------------------------------------------------#%0A%0A#Initialise the fault flag%0Afaultflag = FALSE%0A%0A[] = RPT1:Start_Test[Test_Number%2C "Null Requid"%2C "Events"%2C "objETS"%2C "Events to self"]%0A%0A#-------------------------------------------------------------------#%0A%0A#Test 1%0A%0Aif Test = 1 then%0A%0A   #Check that the verifying event was handled after%0A   #generating events to self%0A   result = this.NewResult - this.OldResult%0A   if result != 10 then%0A      faultflag = TRUE%0A   endif%0A%0Aendif%0A%0A#End Test 1%0A%0A#-------------------------------------------------------------------#%0A%0A#Tests complete%0Aif faultflag = FALSE then%0A%0A   #Indicate that the test was successful and complete%0A   temp = this.NewResult + 10%0A   this.OldResult = temp%0A   this.NewResult = temp%0A%0A   [] = RPT2:Test_Passed["objETS"%2C Test_Number%2C temp]%0A   generate ETS2:Finished() to this%0A%0Aelse%0A%0A   #Indicate that the test failed%0A   [] = RPT3:Test_Failed["objETS"%2C Test_Number%2C temp]%0A   has_failed = TRUE%0A   generate ETS1:Fault() to this%0A%0Aendif%0A%0A#-------------------------------------------------------------------#%0A,,,,,,,
codeblock,,,,,,,,
description, This state verifies the following:%0A %0A [1] That an event to self was acted upon before%0A     any other events where handled.%0A,,,,,,,
state,,,,,,,,
state,,EventToSelf,Fail,,5,,,
codeblock,###### There is no ASL for this state ######,,,,,,,
codeblock,,,,,,,,
description, An instance current state is changed to fail%0A if the test failed.%0A,,,,,,,
state,,,,,,,,
event,Fault,,1,,,,,
event,,,,,,,,
event,Finished,,2,,,,,
event,,,,,,,,
event,StartA,,3,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,EventToOwnInstance,,4,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,VerifyEventToSelf,,5,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,EventToOwnInstance,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,VerifyEventToSelf,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,StartA,State_One,,,
transition,,,,,,,,
transition,Idle,,,EventToOwnInstance,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,VerifyEventToSelf,Verify_event_to_self,,,
transition,,,,,,,,
transition,State_One,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,State_One,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,State_One,,,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,State_One,,,EventToOwnInstance,State_Two,,,
transition,,,,,,,,
transition,State_One,,,VerifyEventToSelf,Cannot_Happen,,,
transition,,,,,,,,
transition,State_Two,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,State_Two,,,Finished,Idle,,,
transition,,,,,,,,
transition,State_Two,,,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,State_Two,,,EventToOwnInstance,Cannot_Happen,,,
transition,,,,,,,,
transition,State_Two,,,VerifyEventToSelf,Cannot_Happen,,,
transition,,,,,,,,
transition,Verify_event_to_self,,,Fault,Fail,,,
transition,,,,,,,,
transition,Verify_event_to_self,,,Finished,Idle,,,
transition,,,,,,,,
transition,Verify_event_to_self,,,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Verify_event_to_self,,,EventToOwnInstance,Cannot_Happen,,,
transition,,,,,,,,
transition,Verify_event_to_self,,,VerifyEventToSelf,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,EventToOwnInstance,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,VerifyEventToSelf,Cannot_Happen,,,
transition,,,,,,,,
transitiontable,,,,,,,,
description, This object verifies sending an event to one's self whilst others are in the event queue is acted upon first.%0A,,,,,,,
object,,,,,,,,
object,Event_Data,objEDATA,29,,,,,
attribute,ReferenceEDATA,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, Referential attribute.%0A,,,,,,,
attribute,,,,,,,,
attribute,ResultA,,,ReferenceEDATA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, This attribute is manipulated to indicate that the required operation was successful.%0A,,,,,,,
attribute,,,,,,,,
state,,Event_Data,Idle,,1,,,
codeblock,###### There is no ASL for this state ######,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Event_Data,Verification_State_One,,2,,,
parameter,A,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,B,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,C,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,E,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,F,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#------------------------------------------------------------------------%0A# Verify the ability of a compiler to handle event data%0A#------------------------------------------------------------------------%0A%0A#------------------------------------------------------------------------%0A# Test 1 - Reception of multiple events%0A#%0A#          N.B.%0A#          This test has had to be changed due to a quirk with in the KC %0A#          tool KC cannot cope with a parameter having the same name as %0A#          that of a key letter of a domain or project. Becuase of this %0A#          when a new project was created with a key letter of D the %0A#          parameter D would no longer be accepted. However on removeing %0A#          the project%2C remenence of the project still remain and so D %0A#          would still not be accepted.%0A#          For this reason D has been renamed to E and E is now F. %0A#          Unfortunatly this means that until the project with the key %0A#          letter of D is fully removed frozen versions of the WACA will %0A#          no longer work.%0A#------------------------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[Test_Number%2C "Null Requid"%2C "Events"%2C "Event Data"%2C "State 1 reception"]%0A%0A   has_failed = FALSE%0A%0A   if Test = 1 then%0A%0A      if (A != 1)|(B != 2)|(C != 3)|(E != 4)|(F != 5) then%0A         generate objEDATA1:Fault() to this%0A         [] = RPT3:Test_Failed ["Event verification state 1"%2C Test_Number%2C -1]%0A         has_failed = TRUE%0A      else%0A         temp = this.ResultA + 10%0A         this.ResultA = temp%0A         [] = RPT2:Test_Passed["Event verification state 1"%2C Test_Number%2C temp]%0A      endif%0A%0A   endif%0A%0A   if !has_failed then%0A      generate objEDATA2:Finished() to this%0A   endif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Event_Data,Fail,,3,,,
codeblock,###### There is no ASL for this state ######,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Event_Data,Verification_State_TWO,,4,,,
parameter,A,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,B,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,%0A[] = RPT1:Start_Test[Test_Number%2C "Null Requid"%2C "Events"%2C "Events Data"%2C "State 2 reception"]%0A%0A# Test 2%0Aif Test = 2 then%0Ahas_failed = FALSE%0A%0A   if (A != 1)|(B != 2) then%0A      generate objEDATA1:Fault() to this%0A      [] = RPT3:Test_Failed["Event verification state 2"%2C Test_Number%2C -1]%0A      has_failed = TRUE%0A%0A   else%0A%0A      temp = this.ResultA + 10%0A      this.ResultA = temp%0A%0A   endif%0A%0A   # Check that the attribute 'ResultA' was manipulated correctly%0A   if this.ResultA != 10 then%0A%0A      generate objEDATA1:Fault() to this%0A      [] = RPT3:Test_Failed["Event verification state 2"%2C Test_Number%2C -2]%0A      has_failed = TRUE%0A%0A   else%0A%0A      temp = this.ResultA + 10%0A      this.ResultA = temp%0A%0A   endif%0A%0Aendif%0A%0Aif !has_failed then%0A%0A  [] = RPT2:Test_Passed["Event verification state 2"%2C Test_Number%2C temp]%0A  generate objEDATA2:Finished() to this%0A%0Aendif%0A,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Fault,,1,,,,,
event,,,,,,,,
event,Finished,,2,,,,,
event,,,,,,,,
event,EventA,,3,,,,,
parameter,A,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,B,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,C,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,E,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,F,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,EventB,,4,,,,,
parameter,A,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,B,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,C,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,E,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,F,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,EventC,,5,,,,,
parameter,A,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,B,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,C,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,E,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,F,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,EventD,,7,,,,,
parameter,A,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,B,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,EventA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,EventB,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,EventC,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,EventD,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Fault,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,,EventA,Verification_State_One,,,
transition,,,,,,,,
transition,Idle,,,EventB,Verification_State_One,,,
transition,,,,,,,,
transition,Idle,,,EventC,Verification_State_One,,,
transition,,,,,,,,
transition,Idle,,,EventD,Verification_State_TWO,,,
transition,,,,,,,,
transition,Verification_State_One,,,Fault,Fail,,,
transition,,,,,,,,
transition,Verification_State_One,,,Finished,Idle,,,
transition,,,,,,,,
transition,Verification_State_One,,,EventA,Ignore,,,
transition,,,,,,,,
transition,Verification_State_One,,,EventB,Ignore,,,
transition,,,,,,,,
transition,Verification_State_One,,,EventC,Ignore,,,
transition,,,,,,,,
transition,Verification_State_One,,,EventD,Ignore,,,
transition,,,,,,,,
transition,Fail,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,EventA,Ignore,,,
transition,,,,,,,,
transition,Fail,,,EventB,Ignore,,,
transition,,,,,,,,
transition,Fail,,,EventC,Ignore,,,
transition,,,,,,,,
transition,Fail,,,EventD,Ignore,,,
transition,,,,,,,,
transition,Verification_State_TWO,,,Fault,Fail,,,
transition,,,,,,,,
transition,Verification_State_TWO,,,Finished,Idle,,,
transition,,,,,,,,
transition,Verification_State_TWO,,,EventA,Ignore,,,
transition,,,,,,,,
transition,Verification_State_TWO,,,EventB,Ignore,,,
transition,,,,,,,,
transition,Verification_State_TWO,,,EventC,Ignore,,,
transition,,,,,,,,
transition,Verification_State_TWO,,,EventD,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
description, This object verifies the sending of strange event data and a compilers ability to recognise that the event data contained within multiple events is the same (i.e. has a corresponding name and data type).%0A,,,,,,,
object,,,,,,,,
object,Huge_State_Machine,HSM,62,,,,,
state,,Huge_State_Machine,Idle,,1,,,
state,,,,,,,,
state,,Huge_State_Machine,State_A,,2,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_B,,3,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_C,,4,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_D,,5,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_E,,6,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_F,,7,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_G,,8,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_H,,9,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_I,,10,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_J,,11,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_K,,12,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_L,,13,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_M,,14,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_N,,15,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_O,,16,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_P,,17,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_Q,,18,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_R,,19,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,StateS,,20,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_T,,21,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_U,,22,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_V,,23,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_W,,24,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_X,,25,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_Y,,26,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = Count%0Atemp = temp + 1%0A%0Agenerate HSM1:Increment(Test_No%2C temp) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Huge_State_Machine,State_Z,,27,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,if Count = 25 then%0A   [] = RPT2:Test_Passed["Events"%2C Test_No%2C 0]%0Aelse%0A   [] = RPT3:Test_Failed["Events"%2C Test_No%2C Count]%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Increment,,1,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Count,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Increment,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Increment,State_A,,,
transition,,,,,,,,
transition,State_A,,,Increment,State_B,,,
transition,,,,,,,,
transition,State_B,,,Increment,State_C,,,
transition,,,,,,,,
transition,State_C,,,Increment,State_D,,,
transition,,,,,,,,
transition,State_D,,,Increment,State_E,,,
transition,,,,,,,,
transition,State_E,,,Increment,State_F,,,
transition,,,,,,,,
transition,State_F,,,Increment,State_G,,,
transition,,,,,,,,
transition,State_G,,,Increment,State_H,,,
transition,,,,,,,,
transition,State_H,,,Increment,State_I,,,
transition,,,,,,,,
transition,State_I,,,Increment,State_J,,,
transition,,,,,,,,
transition,State_J,,,Increment,State_K,,,
transition,,,,,,,,
transition,State_K,,,Increment,State_L,,,
transition,,,,,,,,
transition,State_L,,,Increment,State_M,,,
transition,,,,,,,,
transition,State_M,,,Increment,State_N,,,
transition,,,,,,,,
transition,State_N,,,Increment,State_O,,,
transition,,,,,,,,
transition,State_O,,,Increment,State_P,,,
transition,,,,,,,,
transition,State_P,,,Increment,State_Q,,,
transition,,,,,,,,
transition,State_Q,,,Increment,State_R,,,
transition,,,,,,,,
transition,State_R,,,Increment,StateS,,,
transition,,,,,,,,
transition,StateS,,,Increment,State_T,,,
transition,,,,,,,,
transition,State_T,,,Increment,State_U,,,
transition,,,,,,,,
transition,State_U,,,Increment,State_V,,,
transition,,,,,,,,
transition,State_V,,,Increment,State_W,,,
transition,,,,,,,,
transition,State_W,,,Increment,State_X,,,
transition,,,,,,,,
transition,State_X,,,Increment,State_Y,,,
transition,,,,,,,,
transition,State_Y,,,Increment,State_Z,,,
transition,,,,,,,,
transition,State_Z,,,Increment,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Multiple_Creation_States,objMCS,36,,,,,
attribute,idMCS,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, Preferred identifier.%0A,,,,,,,
attribute,,,,,,,,
attribute,ResultA,,,idMCS,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, This attribute is manipulated to indicate that the required operation was successful.%0A,,,,,,,
attribute,,,,,,,,
state,,Multiple_Creation_States,Creation_stateA,,1,,,
codeblock,#Creation is achieved using a synchronous creation service.,,,,,,,
codeblock,,,,,,,,
description, This state verifies the following:%0A %0A [1] That it is possible to create an instance%0A     of an object.%0A,,,,,,,
state,,,,,,,,
state,,Multiple_Creation_States,Creation_stateB,,2,,,
codeblock,#Creation is achieved using a synchronous creation service,,,,,,,
codeblock,,,,,,,,
description, This state verifies the following:%0A %0A [1] That it is possible to create an instance%0A     of an object.%0A,,,,,,,
state,,,,,,,,
state,,Multiple_Creation_States,Idle,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,###### There is no ASL for this state ######,,,,,,,
codeblock,,,,,,,,
description, Idle state.%0A No action taken.%0A,,,,,,,
state,,,,,,,,
state,,Multiple_Creation_States,Verify_Tests,,4,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#-------------------------------------------------------------------#%0A%0A#Verify Tests%0A%0A[] = RPT1:Start_Test[Test_Number%2C "Null Requid"%2C "Events"%2C "objMCS"%2C "Multiple creation states"]%0A%0A#-------------------------------------------------------------------#%0A%0A#Initialise the fault flag%0Afaultflag = FALSE%0A%0A#-------------------------------------------------------------------#%0A%0A#Test 1%0A%0Aif Test = 1 then%0Ahas_failed = FALSE%0A%0A   #Find the newly created instances%0A   IdentityA = 100 + Test%0A   IdentityB = 200 + Test%0A   {some_instances} = find Multiple_Creation_States \%0A                    where idMCS = IdentityA | idMCS = IdentityB%0A%0A   #Check the result of the find.%0A   if countof {some_instances} != 2 then%0A      faultflag = TRUE%0A      temp = -1%0A   else%0A%0A      #Check the contents of the set%0A      countA = 0%0A      countB = 0%0A      for each_instanceMCS in {some_instances} do%0A         if each_instanceMCS.idMCS = IdentityA then%0A            countA = countA + 1%0A         else%0A            if each_instanceMCS.idMCS = IdentityB then%0A               countB = countB + 1%0A            else%0A               faultflag = TRUE%0A               temp = -2%0A            endif%0A         endif%0A      endfor%0A%0A      #Check counters%0A      if countA != 1 | countB != 1 then%0A         faultflag = TRUE%0A         temp = -3%0A      endif%0A%0A   endif%0A%0Aendif%0A%0A#End Test 1%0A%0A#-------------------------------------------------------------------#%0A%0A#Tests complete%0Aif faultflag = FALSE then%0A%0A   #Indicate that the test was succesful and complete%0A   temp = this.ResultA + 10%0A   this.ResultA = temp%0A   [] = RPT2:Test_Passed["objMCS"%2C Test_Number%2C temp]%0A   generate objMCS6:Finished(Test) to this%0A%0Aelse%0A%0A   #Indicate that the test failed%0A   [] = RPT3:Test_Failed["objMCS"%2C Test_Number%2C temp]%0A   has_failed = TRUE%0A   generate objMCS5:Fault() to this%0A%0Aendif%0A%0A#-------------------------------------------------------------------#%0A,,,,,,,
codeblock,,,,,,,,
description, This state verifies the following:%0A %0A [1] That instances in both creation states where%0A     created correctly.%0A,,,,,,,
state,,,,,,,,
state,,Multiple_Creation_States,Fail,,5,,,
codeblock,###### There is no ASL for this state ######,,,,,,,
codeblock,,,,,,,,
description, An instance current state is changed to fail%0A if the test failed.%0A,,,,,,,
state,,,,,,,,
event,CreateA,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,CreateB,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Creation_Complete,,3,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Perform_Verification,,4,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Fault,,5,,,,,
event,,,,,,,,
event,Finished,,6,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,CreateA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,CreateB,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Creation_Complete,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Perform_Verification,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Creation_stateA,,,CreateA,Ignore,,,
transition,,,,,,,,
transition,Creation_stateA,,,CreateB,Ignore,,,
transition,,,,,,,,
transition,Creation_stateA,,,Creation_Complete,Idle,,,
transition,,,,,,,,
transition,Creation_stateA,,,Perform_Verification,Cannot_Happen,,,
transition,,,,,,,,
transition,Creation_stateA,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Creation_stateA,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Creation_stateB,,,CreateA,Ignore,,,
transition,,,,,,,,
transition,Creation_stateB,,,CreateB,Ignore,,,
transition,,,,,,,,
transition,Creation_stateB,,,Creation_Complete,Idle,,,
transition,,,,,,,,
transition,Creation_stateB,,,Perform_Verification,Cannot_Happen,,,
transition,,,,,,,,
transition,Creation_stateB,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Creation_stateB,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,CreateA,Ignore,,,
transition,,,,,,,,
transition,Idle,,,CreateB,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Creation_Complete,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Perform_Verification,Verify_Tests,,,
transition,,,,,,,,
transition,Idle,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Verify_Tests,,,CreateA,Ignore,,,
transition,,,,,,,,
transition,Verify_Tests,,,CreateB,Ignore,,,
transition,,,,,,,,
transition,Verify_Tests,,,Creation_Complete,Cannot_Happen,,,
transition,,,,,,,,
transition,Verify_Tests,,,Perform_Verification,Cannot_Happen,,,
transition,,,,,,,,
transition,Verify_Tests,,,Fault,Fail,,,
transition,,,,,,,,
transition,Verify_Tests,,,Finished,Idle,,,
transition,,,,,,,,
transition,Fail,,,CreateA,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,CreateB,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Creation_Complete,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Perform_Verification,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transitiontable,,,,,,,,
description, This object verifies that an object may have more than one creation state.%0A,,,,,,,
object,,,,,,,,
object,Object_A,objA,3,,,,,
attribute,ReferenceA,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,ResultA,,,ReferenceA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,latest_test,,,ResultA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Object_A,Idle,,1,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# in this state check that all the events have been processed %0A# and then verify the result%0A#-----------------------------------------------------------     %0A%0Aif this.ResultA != 0 then%0A   [] = objVERPOL1:verify_polymorphic[ "Object A"%2C this.ReferenceA%2C Test_Number]%0A#   [] = objVERPOL1:verify_polymorphic[ "Object A"%2C this.latest_test%2C Test_Number]%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Object_A,Supertype_Object,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# SUPERTYPE%0A#-----------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[Test_Number%2C "1241-0000-01-0304"%2C "Events"%2C "Object_A"%2C "State machine in supertype only"]%0A%0A   this.latest_test = Test_Number%0A   temp = this.ResultA + 50%0A   this.ResultA = temp%0A%0A   generate objA2:Finished(Test_Number) to this%0A%0A#-----------------------------------------------------------%0A,,,,,,,
codeblock,,,,,,,,
description, State machine only in supertype object. %0A Update result if called correctly.%0A,,,,,,,
state,,,,,,,,
event,StartA,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finished,,2,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,StartA,Supertype_Object,,,
transition,,,,,,,,
transition,Idle,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Supertype_Object,,,StartA,Ignore,,,
transition,,,,,,,,
transition,Supertype_Object,,,Finished,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Object_B,objB,4,,,,,
attribute,ReferenceA,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R1,,,,ReferenceA,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,ResultB,,,ReferenceA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Object_C,objC,5,,,,,
attribute,ReferenceA,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R1,,,,ReferenceA,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,ResultC,,,ReferenceA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Object_D,objD,10,,,,,
attribute,ReferenceD,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, Referential attribute.%0A,,,,,,,
attribute,,,,,,,,
attribute,ResultA,,,ReferenceD,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, This attribute is manipulated to indicated that the required operation was successful.%0A,,,,,,,
attribute,,,,,,,,
attribute,no_of_received_events,,,ResultA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, captures the number of events received by this super/subtype family%0A,,,,,,,
attribute,,,,,,,,
attribute,latest_test,,,no_of_received_events,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Object_D,Idle,,1,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-------------------------------------------------------------------------%0A# In this state check that all the events have been processed and then %0A# verify the result%0A#-------------------------------------------------------------------------%0A%0Aif this.no_of_received_events = 2 then%0A	%0A   [] = objVERPOL1:verify_polymorphic[ "Object D"%2C this.ReferenceD%2C Test_Number ]%0A%0A   temp = this.no_of_received_events + 1%0A%0A   this.no_of_received_events = temp%0A%0Aendif,,,,,,,
codeblock,,,,,,,,
description, Idle state.%0A,,,,,,,
state,,,,,,,,
state,,Object_D,Supertype_Object,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#-------------------------------------------------------------------------%0A# SUPERTYPE%0A#-------------------------------------------------------------------------%0A%0A# Remember the latest test%0Athis.latest_test = Test%0Atemp = this.no_of_received_events + 1%0Athis.no_of_received_events = temp%0A%0A[] = RPT1:Start_Test[Test_Number%2C "1241-0000-01-0304"%2C "Events"%2C "objD"%2C "Supertype to subtype test"]%0A[] = RPT5:Test_Text[Test_Number%2C "Obj D State"]%0A#-------------------------------------------------------------------------%0A# Test 1 - Event passed onto the subtype object%0A#-------------------------------------------------------------------------%0A%0A   if Test = 1 then%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 9999%0A      this.ResultA = temp%0A   endif%0A%0A#-------------------------------------------------------------------------%0A# Test 2 - The value of attribute 'ResultA' is only changed if an error%0A#          occurred.%0A#-------------------------------------------------------------------------%0A%0A   if Test = 2 then%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 20%0A      this.ResultA = temp%0A   endif%0A%0A#-------------------------------------------------------------------------%0A# Test 3 - Event received in supertype object%2C but not passed onto subtype%0A#          since the relationship has not been formalised.%0A#-------------------------------------------------------------------------%0A%0A   if Test = 3 then%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 30%0A      this.ResultA = temp%0A   endif%0A%0A#-------------------------------------------------------------------------%0A# Test 4 - Event received in supertype object%2C but not passed onto subtype %0A#          object%2C since the subtype object may not receive the event.%0A#-------------------------------------------------------------------------%0A%0A   if Test = 4 then%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 40%0A      this.ResultA = temp%0A   endif%0A%0A#-------------------------------------------------------------------------%0A# Test 5 - Event passed onto the subtype object%0A#-------------------------------------------------------------------------%0A%0A   if Test = 5 then%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 10%0A      this.ResultA = temp%0A   endif%0A%0A#-------------------------------------------------------------------------%0A# Test 6 - The value of attribute 'ResultA' is only changed if an error%0A#          occurred.%0A#-------------------------------------------------------------------------%0A%0A   if Test = 6 then%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 20%0A      this.ResultA = temp%0A   endif%0A%0A#-------------------------------------------------------------------------%0A# Test 7 - Event received in supertype object.%0A#-------------------------------------------------------------------------%0A%0A   if Test = 7 then%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 30%0A      this.ResultA = temp%0A   endif%0A%0A#-------------------------------------------------------------------------%0A# Test 8 - Event received in supertype object%2C but not passed onto subtype %0A#          object%2C since the subtype object may not receive the event.%0A#-------------------------------------------------------------------------%0A%0A   if Test = 8 then%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 40%0A      this.ResultA = temp%0A   endif%0A%0A#-------------------------------------------------------------------------%0A   generate objD1:ST_Finished(Test_Number) to this%0A#-------------------------------------------------------------------------,,,,,,,
codeblock,,,,,,,,
description, This state receives the external event that%2C also sent to the subtype object.%0A,,,,,,,
state,,,,,,,,
event,ST_Finished,,1,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,StartA,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,StartC,,3,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Fault,,4,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,ST_Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,StartC,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,ST_Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,StartA,Supertype_Object,,,
transition,,,,,,,,
transition,Idle,,,StartC,Supertype_Object,,,
transition,,,,,,,,
transition,Idle,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Supertype_Object,,,ST_Finished,Idle,,,
transition,,,,,,,,
transition,Supertype_Object,,,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Supertype_Object,,,StartC,Cannot_Happen,,,
transition,,,,,,,,
transition,Supertype_Object,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transitiontable,,,,,,,,
description, Supertype object.%0A,,,,,,,
object,,,,,,,,
object,Object_E,objE,11,,,,,
attribute,ReferenceE,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, Referential attribute.%0A,,,,,,,
attribute,,,,,,,,
attribute,ResultA,,,ReferenceE,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, This attribute is manipulated to indicate that the required operation was successful.%0A,,,,,,,
attribute,,,,,,,,
attribute,ReferenceD,preferred,,ResultA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R5,,,,ReferenceD,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,Report_Test_No,,,ReferenceD,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Object_E,Idle,,1,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,# in this state check that all the events have been processed and then verify %0A# the result%0Amy_super = this -> R5.Object_D%0A%0Aif my_super.no_of_received_events = 2 then%0A   [] = objVERPOL1:verify_polymorphic[ "Object E"%2C this.ReferenceE%2C Test_Number ]%0A#   [] = objVERPOL1:verify_polymorphic[ "Object E"%2C my_super.latest_test%2C Test_Number ]%0A%0A   temp = my_super.no_of_received_events + 1%0A%0A   my_super.no_of_received_events = temp%0A%0Aendif,,,,,,,
codeblock,,,,,,,,
description, Idle state.%0A,,,,,,,
state,,,,,,,,
state,,Object_E,Subtype_object,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#-------------------------------------------------------------------------%0A# SUBTYPE%0A#-------------------------------------------------------------------------%0A%0A# Remember the latest test%0Amy_super = this -> R5.Object_D%0Amy_super.latest_test = Test%0Atemp = my_super.no_of_received_events + 1%0Amy_super.no_of_received_events = temp%0A%0A[] = RPT1:Start_Test[this.Report_Test_No%2C "1241-0000-01-0304"%2C "Events"%2C "objE"%2C "subtype"]%0A[] = RPT5:Test_Text [this.Report_Test_No%2C "Obj E State"]%0A%0A#-------------------------------------------------------------------------%0A# Test 1 - Event received from supertype object%0A#-------------------------------------------------------------------------%0A%0A   if Test = 1 then%0A      [] = RPT8:Specify_Requid[this.Report_Test_No%2C "1241-0000-01-0404"]%0A      [] = RPT8:Specify_Requid[this.Report_Test_No%2C "1241-0000-01-0405"]%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 999%0A      this.ResultA = temp%0A   endif%0A%0A#-------------------------------------------------------------------------%0A# Test 2 - Event not passed onto supertype object%0A#-------------------------------------------------------------------------%0A%0A   if Test = 2 then%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 20%0A      this.ResultA = temp%0A   endif%0A%0A#-------------------------------------------------------------------------%0A# Test 3 - The value of attribute 'ResultA' is changed %0A#-------------------------------------------------------------------------%0A%0A   if Test = 3 then%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 30%0A      this.ResultA = temp%0A   endif%0A%0A#-------------------------------------------------------------------------%0A# Test 4 - The value of attribute 'ResultA' is only changed if an error has%0A#          occurred.%0A#-------------------------------------------------------------------------%0A%0A   if Test = 4 then%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 40%0A      this.ResultA = temp%0A   endif%0A%0A#-------------------------------------------------------------------------%0A%0Agenerate objE1:Finished(Test_Number) to this,,,,,,,
codeblock,,,,,,,,
description, This state receives the external event that is also sent to the supertype%0A object.%0A,,,,,,,
state,,,,,,,,
event,Finished,,1,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,StartB,,6,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,Object_D,ST_Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,Object_D,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,Object_D,StartC,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,Object_D,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,StartB,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,Object_D,ST_Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,Object_D,StartA,Subtype_object,,,
transition,,,,,,,,
transition,Idle,,Object_D,StartC,Ignore,,,
transition,,,,,,,,
transition,Idle,,Object_D,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,StartB,Subtype_object,,,
transition,,,,,,,,
transition,Subtype_object,,Object_D,ST_Finished,Ignore,,,
transition,,,,,,,,
transition,Subtype_object,,Object_D,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Subtype_object,,Object_D,StartC,Ignore,,,
transition,,,,,,,,
transition,Subtype_object,,Object_D,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Subtype_object,,,Finished,Idle,,,
transition,,,,,,,,
transition,Subtype_object,,,StartB,Cannot_Happen,,,
transition,,,,,,,,
transitiontable,,,,,,,,
description, Subtype object.%0A,,,,,,,
object,,,,,,,,
object,Object_F,objF,6,,,,,
attribute,ReferenceD,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R5,,,,ReferenceD,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,ReferenceF,,,ReferenceD,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,ResultA,,,ReferenceF,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Report_Test_No,,,ResultA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Object_F,Idle,,1,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# In this state check that all the events have been processed %0A# and then verify the result%0A#-----------------------------------------------------------%0A%0Amy_super = this -> R5.Object_D%0A%0Aif my_super.no_of_received_events = 2 then%0A   [] = objVERPOL1:verify_polymorphic[ "Object F"%2C my_super.latest_test%2C Test_Number]%0A   temp = my_super.no_of_received_events + 1%0A   my_super.no_of_received_events = temp%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Object_F,Subtype_object,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# SUBTYPE%0A#-----------------------------------------------------------%0A%0A# Remember the latest test%0Amy_super = this -> R5.Object_D%0Amy_super.latest_test = Test%0Atemp = my_super.no_of_received_events + 1%0Amy_super.no_of_received_events = temp%0A%0A#-----------------------------------------------------------%0A# Test 5 - Event received from supertype object%0A#-----------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[this.Report_Test_No%2C "Null Requid"%2C "Events"%2C "objF"%2C "subtype"]%0A   %0A   if Test = 5 then%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 10%0A      this.ResultA = temp%0A   endif%0A%0A#-----------------------------------------------------------%0A# Test 6 - Event not passed onto supertype object%0A#-----------------------------------------------------------%0A%0A   if Test = 6 then%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 20%0A      this.ResultA = temp%0A   endif%0A%0A#-----------------------------------------------------------%0A# Test 7 - The value of attribute 'ResultA' is changed %0A#-----------------------------------------------------------%0A%0A   if Test = 7 then%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 30%0A      this.ResultA = temp%0A   endif%0A%0A#-----------------------------------------------------------%0A# Test 8 - The value of attribute 'ResultA' is only changed %0A#          if an error has occurred.%0A#-----------------------------------------------------------%0A%0A   if Test = 8 then%0A      # Change the value of attribute 'ResultA'%0A      temp = this.ResultA + 40%0A      this.ResultA = temp%0A   endif%0A%0A#-----------------------------------------------------------%0A%0Agenerate objF1:Finished(Test_Number) to this,,,,,,,
codeblock,,,,,,,,
description, %0A Proves that an event received by the supertype is polymorphically%0A delivered to the second subtype.%0A,,,,,,,
state,,,,,,,,
event,Finished,,1,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,StartB,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,Object_D,ST_Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,Object_D,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,Object_D,StartC,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,Object_D,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,StartB,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,Object_D,ST_Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,Object_D,StartA,Subtype_object,,,
transition,,,,,,,,
transition,Idle,,Object_D,StartC,Ignore,,,
transition,,,,,,,,
transition,Idle,,Object_D,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,StartB,Subtype_object,,,
transition,,,,,,,,
transition,Subtype_object,,Object_D,ST_Finished,Ignore,,,
transition,,,,,,,,
transition,Subtype_object,,Object_D,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Subtype_object,,Object_D,StartC,Ignore,,,
transition,,,,,,,,
transition,Subtype_object,,Object_D,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Subtype_object,,,Finished,Idle,,,
transition,,,,,,,,
transition,Subtype_object,,,StartB,Cannot_Happen,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Object_J,objJ,17,,,,,
attribute,ReferenceJ,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, Referential attribute%0A,,,,,,,
attribute,,,,,,,,
attribute,ResultJ,,,ReferenceJ,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, This attribute is manipulated to indicate that the required operation was successful.%0A,,,,,,,
attribute,,,,,,,,
attribute,action_count,,,ResultJ,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,latest_test,,,action_count,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Object_J,Idle,,3,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# Nn this state check that all the events have been processed %0A# and then verify the result%0A#-----------------------------------------------------------%0A%0Aif this.action_count = 0 then%0A%0A   [] = objVERPOL1:verify_polymorphic[ "Object J"%2C this.latest_test%2C this.latest_test ]%0A%0Aendif,,,,,,,
codeblock,,,,,,,,
description, Idle state.%0A,,,,,,,
state,,,,,,,,
state,,Object_J,Supertype_state,,4,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# SUPERTYPE%0A#-----------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[this.ReferenceJ%2C "Null Requid"%2C "Events"%2C "ObjJ"%2C "Supertype J"]%0A%0A   temp = this.action_count - 1%0A%0A   this.action_count = temp%0A%0A   temp = this.ResultJ + 70%0A   this.ResultJ = temp%0A%0A#-----------------------------------------------------------%0A%0Agenerate objJ2:ST_Finished(Test_Number) to this,,,,,,,
codeblock,,,,,,,,
description, This state receives an external event that is passed onto its related%0A subtype object.%0A,,,,,,,
state,,,,,,,,
event,StartA,,1,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,ST_Finished,,2,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,ST_Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,StartA,Supertype_state,,,
transition,,,,,,,,
transition,Idle,,,ST_Finished,Ignore,,,
transition,,,,,,,,
transition,Supertype_state,,,StartA,Ignore,,,
transition,,,,,,,,
transition,Supertype_state,,,ST_Finished,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
description, Supertype object.%0A,,,,,,,
object,,,,,,,,
object,Object_K,objK,18,,,,,
attribute,ResultK,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, This attribute is manipulated to indicate that the required operation was successful.%0A,,,,,,,
attribute,,,,,,,,
attribute,ReferenceK,,,ResultK,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,ReferenceJ,preferred,,ReferenceK,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R7,,,,ReferenceJ,,,
referential,,,,,,,,
attribute,,,,,,,,
state,,Object_K,Idle,,1,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# In this state check that all the events have been processed %0A# and then verify the result%0A#-----------------------------------------------------------%0A%0Amy_super = this -> R7.Object_J%0A%0Aif my_super.action_count <= 0 then%0A   [] = objVERPOL1:verify_polymorphic[ "Object K"%2C this.ReferenceK%2C this.ReferenceK]%0Aendif,,,,,,,
codeblock,,,,,,,,
description, Idle state.%0A,,,,,,,
state,,,,,,,,
state,,Object_K,Sub_Super_state,,2,,,
codeblock,#-----------------------------------------------------------%0A# SUB/SUPERTYPE%0A#-----------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[this.ReferenceK%2C "1241-0000-01-0405"%2C "Events"%2C "ObjK"%2C "Subtype K"]%0A%0A   my_super = this -> R7.Object_J%0A   temp = my_super.action_count - 1%0A   my_super.action_count = temp%0A%0A   temp = this.ResultK + 70%0A   this.ResultK = temp%0A%0A#-----------------------------------------------------------%0A# Test not currently run - line deleted to prevent undefined Test_Number%0A# generate objK1:Finished(Test_Number) to this,,,,,,,
codeblock,,,,,,,,
description, This state receives an event from its related supertype object%2C and also%0A passes the event onto its related subtype object.%0A,,,,,,,
state,,,,,,,,
event,Finished,,1,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,Object_J,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,Object_J,ST_Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,Object_J,StartA,Ignore,,,
transition,,,,,,,,
transition,Idle,,Object_J,ST_Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Sub_Super_state,,Object_J,StartA,Ignore,,,
transition,,,,,,,,
transition,Sub_Super_state,,Object_J,ST_Finished,Ignore,,,
transition,,,,,,,,
transition,Sub_Super_state,,,Finished,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
description, Subtype and supertype object.%0A,,,,,,,
object,,,,,,,,
object,Object_L,objL,2,,,,,
attribute,ReferenceL,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, Description for ObjL%2C ReferenceL%0A,,,,,,,
attribute,,,,,,,,
attribute,ResultL,,,ReferenceL,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, Description for ObjL%2C ResultL%0A,,,,,,,
attribute,,,,,,,,
state,,Object_L,Idle,,2,,,
description, Description for ObjL%2C State 2 Idle%0A,,,,,,,
state,,,,,,,,
state,,Object_L,Sub_sub_state,,3,,,
description, Description for ObjL%2C State 3 Sub_sub_state%0A,,,,,,,
state,,,,,,,,
event,Finished,,1,,,,,
description, Description for ObjL%2C Signal objL1%0A,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Sub_sub_state,,,Finished,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
description, Description for Class Object L%0A,,,,,,,
object,,,,,,,,
object,Object_M,objM,9,,,,,
attribute,Reference_M,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Result_M,,,Reference_M,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Object_N,objN,12,,,,,
attribute,Reference_N,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Reference_M,preferred,,Reference_N,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R2,,,,Reference_M,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,Result_N,,,Reference_M,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
operation,Events,Object_N,public,GO_Creation_Service,,,1,
parameter,Specific_Type,in,,,,,,
typeref,Specific_Classes_JTT,,,,,,,
typeref,,,,,,,,
parameter,Created_Generic_Object,out,,,,,,
typeref,instance of Object_N,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
description, This Service is automatically created for a Generic Class. It is invoked to create the counterpart Generic Class when a Specific Class is created. Only the action ASL is editable.%0A,,,,,,,
operation,,,,,,,,
operation,Events,Object_N,public,GO_Deletion_Service,instance,,2,
description, This Service is automatically created for a Generic Class. It is invoked to delete the counterpart Generic Class when a Specific Class is deleted. Only the action ASL is editable.%0A,,,,,,,
operation,,,,,,,,
object,,,,,,,,
object,Object_O,objO,16,,,,,
attribute,Reference_O,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Reference_M,preferred,,Reference_O,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R3,,,,Reference_M,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,Result_O,,,Reference_M,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Object_P,objP,19,,,,,
attribute,Reference_P,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Result_P,,,Reference_P,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,number_of_received_events,,,Result_P,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,latest_test,,,number_of_received_events,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,latest_test,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Object_P,Idle,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# In this state check that all the events have been processed %0A# and then verify the result%0A#-----------------------------------------------------------%0A%0Aif this.number_of_received_events = 2 then%0A	%0A   [] = objVERPOL1:verify_polymorphic[ "Object P"%2C this.Reference_P%2C this.latest_test]%0A%0A   temp = this.number_of_received_events + 1%0A%0A   this.number_of_received_events = temp%0A%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Object_P,Supertype_State,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# SUPERTYPE%0A#-----------------------------------------------------------%0A%0A# Remember the latest test%0Athis.latest_test = Test%0Atemp = this.number_of_received_events + 1%0Athis.number_of_received_events = temp%0A%0A#-----------------------------------------------------------%0A# Event passed onto the subtype object%0A#-----------------------------------------------------------%0A%0A   [] = RPT1:Start_Test[Test%2C "Null Requid"%2C "Events"%2C "objP"%2C "Supertype to subtype test"]%0A%0A   # Change the value of attribute 'ResultP'%0A   temp = this.Result_P + this.Value_To_Add%0A   this.Result_P = temp%0A%0A#-----------------------------------------------------------%0A%0Agenerate objP2:Finished(Test) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,StartP,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finished,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,StartP,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,StartP,Supertype_State,,,
transition,,,,,,,,
transition,Idle,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Supertype_State,,,StartP,Ignore,,,
transition,,,,,,,,
transition,Supertype_State,,,Finished,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Object_Q,objQ,20,,,,,
attribute,Reference_P,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R4,,,,Reference_P,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,Reference_P,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,latest_test,,,Value_To_Add,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Result_Q,,,latest_test,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Object_Q,Idle,,1,,,
codeblock,#-----------------------------------------------------------%0A# in this state check that all the events have been processed %0A# and then verify the result%0A#-----------------------------------------------------------%0A%0Amy_super = this -> R4.Object_P%0A%0Aif my_super.number_of_received_events = 2 then%0A	%0A   [] = objVERPOL1:verify_polymorphic[ "Object Q"%2C my_super.Reference_P%2C this.latest_test ]%0A%0A   temp = my_super.number_of_received_events + 1%0A%0A   my_super.number_of_received_events = temp%0A%0Aendif,,,,,,,
codeblock,,,,,,,,
description, %0A # This state shall prove that an event is passed from the %0A # supertype to the subtype even when there is no state %0A # model in the supertype.%0A,,,,,,,
state,,,,,,,,
state,,Object_Q,Subtype_State,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# SUBTYPE%0A#-----------------------------------------------------------%0A%0A# Remember the latest test%0A%0Amy_super = this -> R4.Object_P%0Amy_super.latest_test = Test%0A%0Atemp = my_super.number_of_received_events + 1%0Amy_super.number_of_received_events = temp%0A%0A#-----------------------------------------------------------%0A# Test 1 - Event received from supertype object%0A#-----------------------------------------------------------%0A%0A# [] = RPT1:Start_Test[Test%2C "1241-0000-01-0405"%2C "Events"%2C "objQ"%2C "subtype"]%0A%0A# Change the value of attribute 'ResultQ'%0Atemp = this.Result_Q + this.Value_To_Add%0Athis.Result_Q = temp%0A%0Atemp = my_super.Result_P + this.Value_To_Add%0A%0Amy_super.Result_P = temp%0A%0A#-----------------------------------------------------------%0A%0Agenerate objQ1:FinishedQ() to this,,,,,,,
codeblock,,,,,,,,
description, %0A # This state shall add the value specified to the ResultQ %0A # attribute. %0A %0A # This state shall also add the value specified to the %0A # supertype attribute Result_P.%0A %0A # This shall only happen if the supertype has delivered the%0A # event to this subtype.%0A,,,,,,,
state,,,,,,,,
event,FinishedQ,,1,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,Object_P,StartP,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,Object_P,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,FinishedQ,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,Object_P,StartP,Subtype_State,,,
transition,,,,,,,,
transition,Idle,,Object_P,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,,FinishedQ,Ignore,,,
transition,,,,,,,,
transition,Subtype_State,,Object_P,StartP,Cannot_Happen,,,
transition,,,,,,,,
transition,Subtype_State,,Object_P,Finished,Ignore,,,
transition,,,,,,,,
transition,Subtype_State,,,FinishedQ,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Object_R,objR,21,,,,,
attribute,Reference_P,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R4,,,,Reference_P,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,Reference_P,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,latest_test,,,Value_To_Add,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Result_R,,,latest_test,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Object_R,Idle,,1,,,
codeblock,#-----------------------------------------------------------%0A# in this state check that all the events have been processed %0A# and then verify the result%0A#-----------------------------------------------------------%0A%0Amy_super = this -> R4.Object_P%0A%0Aif my_super.number_of_received_events = 2 then%0A	%0A   [] = objVERPOL1:verify_polymorphic[ "Object R"%2C my_super.Reference_P%2C this.latest_test ]%0A%0A   temp = my_super.number_of_received_events + 1%0A%0A   my_super.number_of_received_events = temp%0A%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Object_R,Subtype_State,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# SUBTYPE%0A#-----------------------------------------------------------%0A%0A# Remember the latest test%0A%0Amy_super = this -> R4.Object_P%0Amy_super.latest_test = Test%0A%0Atemp = my_super.number_of_received_events + 1%0Amy_super.number_of_received_events = temp%0A#-----------------------------------------------------------%0A# Test 1 - Event received from supertype object%0A#-----------------------------------------------------------%0A%0A# [] = RPT1:Start_Test[Test%2C "1241-0000-01-0405"%2C "Events"%2C "objR"%2C "subtype"]%0A%0A#Change the value of attribute 'ResultR'%0Atemp = this.Result_R + this.Value_To_Add%0Athis.Result_R = temp%0A%0Atemp = my_super.Result_P + this.Value_To_Add%0A%0Amy_super.Result_P = temp%0A%0A#-----------------------------------------------------------%0A%0Agenerate objR1:FinishedR() to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,FinishedR,,1,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,Object_P,StartP,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,Object_P,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,FinishedR,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,Object_P,StartP,Subtype_State,,,
transition,,,,,,,,
transition,Idle,,Object_P,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,,FinishedR,Ignore,,,
transition,,,,,,,,
transition,Subtype_State,,Object_P,StartP,Ignore,,,
transition,,,,,,,,
transition,Subtype_State,,Object_P,Finished,Ignore,,,
transition,,,,,,,,
transition,Subtype_State,,,FinishedR,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Object_S,objS,22,,,,,
attribute,Reference_P,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R4,,,,Reference_P,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,Reference_P,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,latest_test,,,Value_To_Add,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Result_S,,,latest_test,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Object_S,Idle,,1,,,
codeblock,#-----------------------------------------------------------%0A# in this state check that all the events have been processed %0A# and then verify the result%0A#-----------------------------------------------------------%0A%0Amy_super = this -> R4.Object_P%0A%0Aif my_super.number_of_received_events = 2 then%0A	%0A   [] = objVERPOL1:verify_polymorphic[ "Object S"%2C my_super.Reference_P%2C this.latest_test ]%0A%0A   temp = my_super.number_of_received_events + 1%0A%0A   my_super.number_of_received_events = temp%0A%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Object_S,Subtype_State,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# SUBTYPE%0A#-----------------------------------------------------------%0A%0A#remember the latest test%0A%0Amy_super = this -> R4.Object_P%0Amy_super.latest_test = Test%0A%0Atemp = my_super.number_of_received_events + 1%0Amy_super.number_of_received_events = temp%0A#-----------------------------------------------------------%0A# Test 1 - Event received from supertype object%0A#-----------------------------------------------------------%0A%0A# [] = RPT1:Start_Test[Test%2C "1241-0000-01-0405"%2C "Events"%2C "objQ"%2C "subtype"]%0A%0A#Change the value of attribute 'ResultS'%0Atemp = this.Result_S + this.Value_To_Add%0Athis.Result_S = temp%0A%0Atemp = my_super.Result_P + this.Value_To_Add%0A%0Amy_super.Result_P = temp%0A%0A#-----------------------------------------------------------%0A%0Agenerate objS1:FinishedS() to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,FinishedS,,1,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,Object_P,StartP,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,Object_P,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,FinishedS,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,Object_P,StartP,Subtype_State,,,
transition,,,,,,,,
transition,Idle,,Object_P,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,,FinishedS,Cannot_Happen,,,
transition,,,,,,,,
transition,Subtype_State,,Object_P,StartP,Ignore,,,
transition,,,,,,,,
transition,Subtype_State,,Object_P,Finished,Ignore,,,
transition,,,,,,,,
transition,Subtype_State,,,FinishedS,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Object_T,objT,23,,,,,
attribute,Reference_T,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Result_T,,,Reference_T,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
event,StartT,,1,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
object,,,,,,,,
object,Object_U,objU,24,,,,,
attribute,Reference_T,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R8,,,,Reference_T,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,Result_U,,,Reference_T,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,latest_test,,,Result_U,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Object_U,Idle,,1,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# in this state check that all the events have been processed %0A# and then verify the result%0A#-----------------------------------------------------------%0A%0Aif this.Result_U != 0 then%0A   [] = objVERPOL1:verify_polymorphic[ "Object U"%2C this.Reference_T%2C Test_Number ]%0A#   [] = objVERPOL1:verify_polymorphic[ "Object U"%2C this.latest_test%2C Test_Number ]%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Object_U,Subtype_State,,2,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# SUBTYPE%0A#-----------------------------------------------------------%0A%0A[] = RPT1:Start_Test[this.latest_test%2C "Null Requid"%2C "Events"%2C "objU"%2C "subtype"]%0A%0A#Change the value of attribute 'ResultU'%0Atemp = this.Result_U + 555%0Athis.Result_U = temp%0A%0A%0A#-----------------------------------------------------------%0A%0Agenerate objU2:Finished(Test_Number) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,StartU,,1,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finished,,2,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,Object_T,StartT,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,StartU,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,Object_T,StartT,Subtype_State,,,
transition,,,,,,,,
transition,Idle,,,StartU,Subtype_State,,,
transition,,,,,,,,
transition,Idle,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Subtype_State,,Object_T,StartT,Ignore,,,
transition,,,,,,,,
transition,Subtype_State,,,StartU,Ignore,,,
transition,,,,,,,,
transition,Subtype_State,,,Finished,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Object_Verify_Creation_Terminal,objVERCETL,28,,,,,
attribute,ReferenceCETL,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, Referential attribute.%0A,,,,,,,
attribute,,,,,,,,
attribute,ResultA,,,ReferenceCETL,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Object_Verify_Creation_Terminal,Idle,,1,,,
codeblock,#None,,,,,,,
codeblock,,,,,,,,
description, Idle state.%0A,,,,,,,
state,,,,,,,,
state,,Object_Verify_Creation_Terminal,Verify_State,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# Verify state%0A#-----------------------------------------------------------%0A%0A#-----------------------------------------------------------%0A# Test 1 - Verify an event to a creation state%0A#-----------------------------------------------------------%0A%0Aif Test = 1 then%0A%0A   [] = RPT1:Start_Test[Test_Number%2C "Null Requid"%2C "Events"%2C "Verify"%2C "Verify Creation state"]%0A%0A   has_failed = FALSE%0A   an_inst_create = find-one Creation_Object where ReferenceCREATE = 1%0A%0A   if an_inst_create = UNDEFINED then%0A      [] = RPT3:Test_Failed["Creation State"%2C Test_Number%2C -1]%0A      has_failed = TRUE%0A   else%0A      this.ResultA = 10%0A      [] = RPT2:Test_Passed["Creation State"%2C Test_Number%2C 10]%0A   endif%0A%0Aendif%0A%0A#-----------------------------------------------------------%0A# Test 2 - Verify an event to a terminal state%0A#-----------------------------------------------------------%0A%0Aif Test = 2 then%0A%0A   [] = RPT1:Start_Test[Test_Number%2C "1241-0000-01-0206"%2C "Events"%2C "Verify"%2C "Verify Terminal state"]%0A%0A   has_failed = FALSE%0A   {all_terminal_instance} = find-all Terminal_Object%0A%0A   count_of_terminal_instances = countof {all_terminal_instance}%0A%0A   if count_of_terminal_instances != 1 then%0A      [] = RPT3:Test_Failed["Terminal State"%2C Test_Number%2C count_of_terminal_instances]%0A      has_failed = TRUE%0A   else%0A      this.ResultA = 20%0A      [] = RPT2:Test_Passed["Terminal State"%2C Test_Number%2C 20]%0A   endif%0A%0Aendif%0A%0A#-----------------------------------------------------------%0A# Test 3 - Verify an event to a terminal state%0A#-----------------------------------------------------------%0A%0Aif Test = 3 then%0A%0A   [] = RPT1:Start_Test[Test_Number%2C "1241-0000-01-0206"%2C "Events"%2C "Verify"%2C "Verify Terminal state"]%0A%0A   has_failed = FALSE%0A   {all_terminal_instance} = find-all Terminal_Object%0A%0A   count_of_terminal_instances = countof {all_terminal_instance}%0A%0A   if count_of_terminal_instances != 0 then%0A      [] = RPT3:Test_Failed["Terminal State"%2C Test_Number%2C count_of_terminal_instances]%0A      has_failed = TRUE%0A   else%0A      this.ResultA = 30%0A      [] = RPT2:Test_Passed["Terminal State"%2C Test_Number%2C 30]%0A   endif%0A%0Aendif%0A%0A#-----------------------------------------------------------%0A%0Agenerate objVERCETL1:Finished() to this,,,,,,,
codeblock,,,,,,,,
description, This state verifies that the tests performed within the objects%0A 'Creation_Object' and 'Terminal_Object' provide the correct results.%0A %0A The following tests produced the following results:%0A %0A     Test      Object      Reference      ResultA%0A     1         Creation    1              10%0A     19        Deletion    2              20%0A     21        Deletion    3              30%0A %0A %0A Test:      Test case identity.%0A Object:    Indicates which object to which the test applies.%0A Reference: Indicates which instance of Object_Verify_Creation_Deletion%0A            was used to verify the tests performed in the above objects.%0A ResultA:   Indicates the value written into the attribute 'ResultA'%0A            if the test was successful.%0A,,,,,,,
state,,,,,,,,
event,Finished,,1,,,,,
event,,,,,,,,
event,Verify,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Fault,,3,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Verify,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Verify,Verify_State,,,
transition,,,,,,,,
transition,Idle,,,Fault,Ignore,,,
transition,,,,,,,,
transition,Verify_State,,,Finished,Idle,,,
transition,,,,,,,,
transition,Verify_State,,,Verify,Cannot_Happen,,,
transition,,,,,,,,
transition,Verify_State,,,Fault,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Object_Verify_Polymorphic,objVERPOL,13,,,,,
attribute,ReferenceVER,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, Referential attribute.%0A,,,,,,,
attribute,,,,,,,,
attribute,ResultSUPERTYPE,,,ReferenceVER,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, This attribute is manipulated to indicate that the event was received by the supertype object.%0A,,,,,,,
attribute,,,,,,,,
attribute,ResultSUBTYPE,,,ResultSUPERTYPE,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, This attribute is manipulated to indicate that the event was received by the subtype object.%0A,,,,,,,
attribute,,,,,,,,
operation,Events,Object_Verify_Polymorphic,public,verify_polymorphic,,,1,
parameter,Object,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Test_Reference,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#-------------------------------------------------------------------------%0A# Verify that the event was received%0A#-------------------------------------------------------------------------%0A%0A   Has_Failed = FALSE%0A%0A#-------------------------------------------------------------------------%0A#Test 1 - This test verifies that the event was received in the supertype %0A#         and then in the subtype object.%0A#-------------------------------------------------------------------------%0A%0A   if Test_Reference = 1 then%0A      [] = RPT5:Test_Text[Test_Number%2C "Verify Poly"]%0A      super_instanceD = find-one Object_D where ReferenceD = Test_Reference%0A%0A      if super_instanceD = UNDEFINED then%0A         [] = RPT3:Test_Failed["Object D"%2C  Test_Number%2C super_instanceD.ResultA]%0A      else%0A%0A         if super_instanceD.ResultA != 9999 then%0A            [] = RPT3:Test_Failed["Object D"%2C  Test_Number%2C super_instanceD.ResultA]%0A         else%0A            [] = RPT2:Test_Passed["Object D"%2C  Test_Number%2C super_instanceD.ResultA]%0A         endif%0A%0A      endif%0A%0A      sub_instanceE = find-one Object_E where ReferenceE = Test_Reference%0A%0A      if sub_instanceE.ResultA != 999 then%0A         [] = RPT3:Test_Failed[Object%2C  sub_instanceE.Report_Test_No%2C sub_instanceE.ResultA]%0A      else%0A         [] = RPT2:Test_Passed[Object%2C  sub_instanceE.Report_Test_No%2C sub_instanceE.ResultA]%0A      endif%0A%0A   endif%0A%0A# End Test 1%0A%0A#-------------------------------------------------------------------------%0A# Test 2 - This test verifies that the event was received in the subtype %0A#          but it is not passed onto the supertype.%0A#-------------------------------------------------------------------------%0A%0A   if Test_Reference = 2 then%0A      [] = RPT5:Test_Text[Test_Number%2C "Verify Poly"]%0A      super_instanceD = find-one Object_D where ReferenceD = Test_Reference%0A%0A      if super_instanceD.ResultA != 0 then%0A         [] = RPT3:Test_Failed["Object D"%2C  Test_Number%2C super_instanceD.ResultA]%0A  #   else%0A  #      [] = RPT2:Test_Passed["Object D"%2C  Test_Number%2C super_instanceD.ResultA]%0A      endif%0A%0A      sub_instanceE = find-one Object_E where ReferenceE = 2%0A%0A      if sub_instanceE.ResultA != 20 then%0A         [] = RPT3:Test_Failed[Object%2C  sub_instanceE.Report_Test_No%2C sub_instanceE.ResultA]%0A      else%0A         [] = RPT2:Test_Passed[Object%2C  sub_instanceE.Report_Test_No%2C sub_instanceE.ResultA]%0A      endif%0A%0A   endif%0A%0A# End Test 2%0A%0A#-------------------------------------------------------------------------%0A# Test 3 - This test verifies that the event was received in the supertype %0A#          but it is not received in the subtype since the relationship %0A#          has not been formalised.%0A#-------------------------------------------------------------------------%0A%0A   # This test is not valid as every supertype must have at least one%0A   # subtype object linked to it. Or least that is the decision taken%0A   # by the code-gen team. J. Mann%2C A Field & D Beatty 15 Dec 1999.%0A%0A   if Test_Reference = 3 then%0A%0A      super_instanceD = find-one Object_D where ReferenceD = Test_Reference%0A%0A      if super_instanceD.ResultA != 30 then%0A         [] = RPT3:Test_Failed["Object D"%2C  Test_Number%2C super_instanceD.ResultA]%0A      else%0A         [] = RPT2:Test_Passed["Object D"%2C  Test_Number%2C super_instanceD.ResultA]%0A      endif%0A%0A      sub_instanceE = find-one Object_E where ReferenceE = 3%0A%0A      if sub_instanceE.ResultA != 30 then%0A         [] = RPT3:Test_Failed[Object%2C  sub_instanceE.Report_Test_No%2C sub_instanceE.ResultA]%0A      else%0A         [] = RPT2:Test_Passed[Object%2C  sub_instanceE.Report_Test_No%2C sub_instanceE.ResultA]%0A      endif%0A%0A   endif%0A%0A# End Test 3%0A%0A#-------------------------------------------------------------------------%0A# Test 4 - This test verifies that the event was received in the supertype %0A#          but it was not received in the subtype since the subtype object %0A#          may not receive the event.%0A#-------------------------------------------------------------------------%0A%0A   if Test_Reference = 4 then%0A%0A      super_instanceD = find-one Object_D where ReferenceD = Test_Reference%0A      sub_instanceE   = find-one Object_E where ReferenceE = 4%0A%0A      if super_instanceD.ResultA = 40 then%0A%0A         if sub_instanceE.ResultA = 0 then%0A            [] = RPT2:Test_Passed["Object D"%2C  Test_Number%2C super_instanceD.ResultA]%0A%0A         else%0A            [] = RPT3:Test_Failed[Object%2C  sub_instanceE.Report_Test_No%2C sub_instanceE.ResultA]%0A         endif%0A%0A      else%0A         [] = RPT3:Test_Failed["Object D"%2C  Test_Number%2C super_instanceD.ResultA]%0A      endif%0A%0A   endif%0A%0A# End Test 4%0A%0A#-------------------------------------------------------------------------%0A# Test 5 - %0A#-------------------------------------------------------------------------%0A%0A   if Test_Reference = 5 then%0A%0A      super_instanceD = find-one Object_D where ReferenceD = Test_Reference%0A%0A      if super_instanceD = UNDEFINED then%0A         [] = RPT3:Test_Failed["Object D"%2C  Test_Number%2C super_instanceD.ResultA]%0A      else%0A         [] = RPT2:Test_Passed["Object D"%2C  Test_Number%2C super_instanceD.ResultA]%0A      endif%0A%0A      sub_instanceF = find-one Object_F where ReferenceF = Test_Reference%0A%0A      if sub_instanceF.ResultA != 10 then%0A         [] = RPT3:Test_Failed[Object%2C  sub_instanceF.Report_Test_No%2C sub_instanceF.ResultA]%0A      else%0A         [] = RPT2:Test_Passed[Object%2C  sub_instanceF.Report_Test_No%2C sub_instanceF.ResultA]%0A      endif%0A%0A   endif%0A%0A# End Test 5%0A%0A#-------------------------------------------------------------------------%0A# Test 6 - This test verifies that the event was received in the subtype %0A#          but it is not passed onto the supertype.%0A#-------------------------------------------------------------------------%0A%0A   if Test_Reference = 6 then%0A%0A      super_instanceD = find-one Object_D where ReferenceD = Test_Reference%0A      sub_instanceF   = find-one Object_F where ReferenceF = Test_Reference%0A%0A      if super_instanceD.ResultA = 0 then%0A%0A         if sub_instanceF.ResultA   != 20 then%0A            [] = RPT3:Test_Failed[Object%2C  sub_instanceF.Report_Test_No%2C sub_instanceF.ResultA]%0A         else%0A            [] = RPT2:Test_Passed[Object%2C  sub_instanceF.Report_Test_No%2C sub_instanceF.ResultA]%0A         endif%0A%0A      else%0A         [] = RPT3:Test_Failed[Object%2C  sub_instanceF.Report_Test_No%2C super_instanceD.ResultA]%0A      endif%0A  %0A   endif%0A%0A# End Test 6%0A%0A#-------------------------------------------------------------------------%0A# Test 7 - This test verifies that the event was received in the supertype %0A#          but it is not received in the subtype since the relationship %0A#          has not been formalised.%0A#-------------------------------------------------------------------------%0A%0A   # The supertype MUST contain a subtype%2C otherwise the code-gen will %0A   # fail at run-time. This is a grey area. I-SIM allows solitary %0A   # supertypes although Shlaer-Mellor is ambiguous.%0A%0A   if Test_Reference = 7 then%0A%0A      super_instanceD = find-one Object_D where ReferenceD = Test_Reference%0A%0A      if super_instanceD.ResultA != 30 then%0A         [] = RPT3:Test_Failed["Object D"%2C  Test_Number%2C super_instanceD.ResultA]%0A      else%0A         [] = RPT2:Test_Passed["Object D"%2C  Test_Number%2C super_instanceD.ResultA]%0A      endif%0A%0A      sub_instanceF = find-one Object_F where ReferenceF = Test_Reference%0A%0A      if sub_instanceF.ResultA != 30 then%0A         [] = RPT3:Test_Failed[Object%2C  sub_instanceF.Report_Test_No%2C sub_instanceF.ResultA]%0A      else%0A         [] = RPT2:Test_Passed[Object%2C  sub_instanceF.Report_Test_No%2C sub_instanceF.ResultA]%0A      endif%0A%0A   endif%0A%0A# End Test 7%0A%0A#-------------------------------------------------------------------------%0A# Test 8 - This test verifies that the event was received in the supertype %0A#          but it was not received in the subtype since the subtype object %0A#          may not receive the event.%0A#-------------------------------------------------------------------------%0A%0A   if Test_Reference = 8 then%0A%0A      super_instanceD = find-one Object_D where ReferenceD = Test_Reference%0A      sub_instanceF   = find-one Object_F where ReferenceF = Test_Reference%0A%0A      if super_instanceD.ResultA = 40 then%0A%0A         if sub_instanceF.ResultA != 0 then%0A            [] = RPT3:Test_Failed["Object D"%2C  Test_Number%2C sub_instanceF.ResultA]%0A         else%0A            [] = RPT2:Test_Passed["Object D"%2C  Test_Number%2C sub_instanceF.ResultA]%0A         endif%0A%0A      else%0A         [] = RPT3:Test_Failed["Object D"%2C  Test_Number%2C super_instanceD.ResultA]%0A      endif%0A%0A   endif%0A%0A# End Test 8%0A%0A#-------------------------------------------------------------------------%0A# Test 9 - This test verifies that if only the supertype object contains a %0A#          state machine then the polymorphic event does not get passed %0A#          onto the subtype object%0A#-------------------------------------------------------------------------%0A%0A   # Reinstated for issue 2.0.2%0A   # Test ref 9 is a throwback%2C remove it later.%0A   if Test_Reference = 9 then%0A#   if Test_Reference = 13 then%0A%0A      # UNSUPPORTED TEST%0A      super_instanceA = find-one Object_A where ReferenceA = Test_Reference%0A%0A      # Prove that navigation for super active object to sub passive objects%0A      sub_B_inst = super_instanceA -> R1.Object_B%0A%0A      if super_instanceA.ResultA = 50 then%0A%0A         if sub_B_inst.ResultB != 0 then%0A            [] = RPT3:Test_Failed[Object%2C  Test_Number%2C sub_B_inst.ResultB]%0A         else%0A            [] = RPT2:Test_Passed[Object%2C  Test_Number%2C sub_B_inst.ResultB]%0A         endif%0A%0A      else%0A         [] = RPT3:Test_Failed[Object%2C  Test_Number%2C super_instanceA.ResultA]%0A      endif%0A %0A   endif%0A%0A# End Test 9%0A%0A#-------------------------------------------------------------------------%0A# Test 10 - This test verifies that if only the supertype object contains %0A#           a state machine then the polymorphic event does not get passed %0A#           onto the subtype object%0A#-------------------------------------------------------------------------%0A%0A   # Reinstated for issue 2.0.2%0A%0A   if Test_Reference = 10 then%0A#   if Test_Reference = 14 then%0A%0A      # UNSUPPORTED TEST%0A      super_instanceA = find-one Object_A where ReferenceA = Test_Reference%0A%0A      # Prove that navigation for super active object to sub passive objects%0A      sub_C_inst = super_instanceA -> R1.Object_C%0A%0A      if super_instanceA.ResultA = 50 then%0A%0A         if sub_C_inst.ResultC != 0 then%0A            [] = RPT3:Test_Failed[Object%2C  Test_Number%2C sub_C_inst.ResultC]%0A         else%0A            [] = RPT2:Test_Passed[Object%2C  Test_Number%2C sub_C_inst.ResultC]%0A         endif%0A%0A      else%0A         [] = RPT3:Test_Failed[Object%2C  Test_Number%2C super_instanceA.ResultA]%0A      endif%0A%0A   endif%0A%0A# End Test 10%0A%0A#-------------------------------------------------------------------------%0A%0A%0A# Proof that an event from an empty supertype is delivered to the subtype%0A# containing a state machine is polymorphically delivered.%0A%0Aif Test_Reference = 11 or Test_Reference = 12 then%0A#if Test_Number = 15 or Test_Number = 16 then%0A%0A#  No referential attributes read from here%2C thankyou very much.%0A%0A   subU = find-one Object_U where latest_test  = Test_Number%0A%0A   superT = subU -> R8.Object_T%0A%0A   if subU.Result_U = 555 &\%0A      superT.Reference_T = Test_Reference then%0A%0A      [] = RPT2:Test_Passed[Object%2C Test_Number%2C subU.Result_U]%0A   else%0A      [] = RPT3:Test_Failed[Object%2C Test_Number%2C subU.Result_U]%0A   endif%0A%0Aendif%0A%0A#-------------------------------------------------------------------------%0A# Test 17 - This test verifies nested supertype/subtype relationships.%0A#-------------------------------------------------------------------------%0A%0Aif Test_Reference = 17 then%0A%0A   sub_instanceJ = find-one Object_J where ReferenceJ = Test_Reference%0A%0A   if sub_instanceJ.ResultJ = 70 then%0A      sub_instanceK = sub_instanceJ -> R7.Object_K%0A%0A      if sub_instanceK.ResultK = 70 then%0A%0A         [] = RPT2:Test_Passed[Object%2C  Test_Number%2C 70]%0A%0A      else%0A         [] = RPT3:Test_Failed[Object%2C  Test_Number%2C -12]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed[Object%2C  Test_Number%2C -13]%0A   endif%0A%0Aendif%0A%0A%0A#-------------------------------------------------------------------------%0A# Test 18 - This test verifies nested supertype/subtype relationships.%0A#-------------------------------------------------------------------------%0A%0Aif Test_Reference = 18 then%0A%0A   # if this is test 18%2C then look for an object J with referenceJ 17%0A   find_value = Test_Reference - 1%0A%0A   sub_instanceJ = find-one Object_J where ReferenceJ = find_value%0A%0A   if sub_instanceJ.ResultJ = 70 then%0A      sub_instanceK = sub_instanceJ -> R7.Object_K%0A%0A      if sub_instanceK.ResultK = 70 then%0A%0A         [] = RPT2:Test_Passed[Object%2C  Test_Number%2C 70]%0A%0A      else%0A         [] = RPT3:Test_Failed[Object%2C  Test_Number%2C -12]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed[Object%2C  Test_Number%2C -13]%0A   endif%0A%0Aendif%0A%0A#-------------------------------------------------------------------------%0A# Test 28 - This test verifies nested supertype/subtype relationships.%0A#-------------------------------------------------------------------------%0A%0Aif Test_Reference = 19 then%0A%0A   SuperinstanceP = find-one Object_P where Reference_P = 19%0A%0A   if SuperinstanceP != UNDEFINED then%0A%0A      SubinstanceQ = find-one Object_Q where latest_test = Test_Number%0A%0A      if SubinstanceQ != UNDEFINED then%0A%0A         if SuperinstanceP.Result_P = 11 and \%0A            SubinstanceQ.Result_Q = 1 then%0A %0A            [] = RPT2:Test_Passed[Object%2C Test_Number%2C SuperinstanceP.Result_P]%0A%0A         else%0A%0A            [] = RPT3:Test_Failed[Object%2C Test_Number%2C SuperinstanceP.Result_P]%0A%0A         endif%0A%0A      else%0A%0A         [] = RPT3:Test_Failed["Object Q"%2C Test_Number%2C -2]%0A%0A      endif%0A%0A%0A   else%0A%0A      [] = RPT3:Test_Failed["Object Q"%2C Test_Number%2C -1]%0A%0A   endif%0A%0Aendif%0A%0A#-------------------------------------------------------------------------%0A# Test 29 - This test verifies nested supertype/subtype relationships.%0A#-------------------------------------------------------------------------%0A%0Aif Test_Reference = 20 then%0A%0A   SuperinstanceP = find-one Object_P where Reference_P = 20%0A%0A   if SuperinstanceP != UNDEFINED then%0A%0A      SubinstanceR = find-one Object_R where latest_test = Test_Number%0A%0A      if SubinstanceR != UNDEFINED then%0A%0A         if SuperinstanceP.Result_P = 12 and \%0A            SubinstanceR.Result_R = 2   then%0A %0A            [] = RPT2:Test_Passed[Object%2C Test_Number%2C SuperinstanceP.Result_P]%0A%0A         else%0A%0A            [] = RPT3:Test_Failed[Object%2C Test_Number%2C SuperinstanceP.Result_P]%0A%0A         endif%0A%0A      else%0A%0A         [] = RPT3:Test_Failed[Object%2C Test_Number%2C -2]%0A%0A      endif%0A%0A%0A   else%0A%0A      [] = RPT3:Test_Failed[Object%2C Test_Number%2C -1]%0A%0A   endif%0A%0Aendif%0A%0A#-------------------------------------------------------------------------%0A# Test 35 - This test verifies nested supertype/subtype relationships.%0A#-------------------------------------------------------------------------%0A%0Aif Test_Reference = 21 then%0A%0A   SuperinstanceP = find-one Object_P where Reference_P = 21%0A%0A   if SuperinstanceP != UNDEFINED then%0A%0A      SubinstanceS = find-one Object_S where latest_test = Test_Number%0A%0A      if SubinstanceS != UNDEFINED then%0A%0A         if SuperinstanceP.Result_P = 13 and \%0A            SubinstanceS.Result_S = 3   then%0A %0A            [] = RPT2:Test_Passed[Object%2C Test_Number%2C SuperinstanceP.Result_P]%0A%0A         else%0A%0A            [] = RPT3:Test_Failed[Object%2C Test_Number%2C SuperinstanceP.Result_P]%0A%0A         endif%0A%0A      else%0A%0A         [] = RPT3:Test_Failed[Object%2C Test_Number%2C -2]%0A%0A      endif%0A%0A%0A   else%0A%0A      [] = RPT3:Test_Failed[Object%2C Test_Number%2C -1]%0A%0A   endif%0A%0Aendif%0A,,,,,,,
codeblock,,,,,,,,
description, This function will verify the polymorphic event tests%0A,,,,,,,
operation,,,,,,,,
state,,Object_Verify_Polymorphic,Idle,,1,,,
codeblock,#None,,,,,,,
codeblock,,,,,,,,
description, Idle state.%0A,,,,,,,
state,,,,,,,,
state,,Object_Verify_Polymorphic,Verify_Event_Received,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# Verify that the event was received%0A#-----------------------------------------------------------%0A%0A#-----------------------------------------------------------%0A# Test 1 - This test verifies that the event was received in %0A#          the supertype and then in the subtype object.%0A#-----------------------------------------------------------%0A%0A   if Test = 1 then%0A%0A      super_instanceD = find-one Object_D where ReferenceD = 1%0A%0A      if super_instanceD.ResultA != 10 then%0A         generate objVERPOL2:Fault() to this%0A      else%0A         this.ResultSUPERTYPE = 10%0A      endif%0A%0A      sub_instanceE = find-one Object_E where ReferenceE = 1%0A%0A      if sub_instanceE.ResultA != 10 then%0A         generate objVERPOL2:Fault() to this%0A      else%0A         this.ResultSUBTYPE = 10%0A      endif%0A%0A      # Remove the relationship between the two instances%0A      unlink super_instanceD R5 sub_instanceE%0A%0A   endif%0A%0A#-----------------------------------------------------------%0A# Test 2 - This test verifies that the event was received in %0A#          the subtype but it is not passed onto the supertype.%0A#-----------------------------------------------------------%0A%0A   if Test = 2 then%0A%0A      super_instanceD = find-one Object_D where ReferenceD = 2%0A%0A      if super_instanceD.ResultA != 0 then%0A         generate objVERPOL2:Fault() to this%0A      else%0A         this.ResultSUPERTYPE = 20%0A      endif%0A%0A      sub_instanceE = find-one Object_E where ReferenceE = 2%0A   %0A      if sub_instanceE.ResultA != 20 then%0A         generate objVERPOL2:Fault() to this%0A      else%0A         this.ResultSUBTYPE = 20%0A      endif%0A%0A      # Remove the relationship between the two instances%0A      unlink super_instanceD R5 sub_instanceE%0A%0A   endif%0A%0A#-----------------------------------------------------------%0A# Test 3 - This test verifies that the event was received in %0A#          the supertype but it is not received in the subtype%0A#          since the relationship has not been formalised.%0A#-----------------------------------------------------------%0A%0A   if Test = 3 then%0A%0A      super_instanceD = find-one Object_D where ReferenceD = 3%0A%0A      if super_instanceD.ResultA != 30 then%0A         generate objVERPOL2:Fault() to this%0A      else%0A         this.ResultSUPERTYPE = 30%0A      endif%0A%0A      sub_instanceE = find-one Object_E where ReferenceE = 3%0A%0A      if sub_instanceE.ResultA != 0 then%0A         generate objVERPOL2:Fault() to this%0A      else%0A         this.ResultSUBTYPE = 30%0A      endif%0A%0A   endif%0A%0A#-----------------------------------------------------------%0A# Test 4 - This test verifies that the event was received in %0A#          the supertype but it was not received in the subtype %0A#          since the subtype object may not receive the event.%0A#-----------------------------------------------------------%0A%0A#if Test = 4 then%0A%0A#   super_instanceD = find-one Object_D where ReferenceD = 4%0A#   if super_instanceD.ResultA != 40 then%0A#      generate objVERPOL2:Fault() to this%0A#   else%0A#      this.ResultSUPERTYPE = 40%0A#   endif%0A#   sub_instanceE = find-one Object_E where ReferenceE = 4%0A#   if sub_instanceE.ResultA != 0 then%0A#      generate objVERPOL2:Fault() to this%0A#   else%0A#      this.ResultSUBTYPE = 40%0A#   endif%0A%0A   #Remove the relationship between the two instances%0A#   unlink super_instanceD R5 sub_instanceE%0A%0A#endif%0A%0A#-----------------------------------------------------------%0A# Test 5 - This test verifies that if only the supertype %0A#          object contains a state machine then the polymorphic %0A#          event does not get passed onto the subtype object%0A#-----------------------------------------------------------%0A%0A#if Test = 5 then%0A%0A#   super_instanceA = find-one Object_A where ReferenceA = 5%0A#   if super_instanceA.ResultA != 50 then%0A#      generate objVERPOL2:Fault() to this%0A#   else%0A#      this.ResultSUPERTYPE = 50%0A#   endif%0A%0A   #Remove the relationship between the two instances%0A#   sub_instanceB = find-one Object_B where ReferenceA = 5%0A#   unlink super_instanceA R3 sub_instanceB%0A%0A#endif%0A%0A#-----------------------------------------------------------%0A# Test 6 - This test verifies that if the supertype object %0A#          does not contain a state machine%2C that an event %0A#          sent to the supertype object is also passed onto %0A#          the subtype object.%0A#-----------------------------------------------------------%0A%0A#if Test = 6 then%0A#   sub_instanceH = find-one Object_H where ReferenceH = 6%0A#   if sub_instanceH.ResultA != 60 then%0A#      generate objVERPOL2:Fault() to this%0A#   else%0A#      this.ResultSUBTYPE = 60%0A#   endif%0A#endif%0A%0A#-----------------------------------------------------------%0A# Test 7 - This test verifies nested supertype/subtype %0A#          relationships.%0A#-----------------------------------------------------------%0A%0Aif Test = 7 then%0A#   sub_instanceJ = find-one Object_J where ReferenceJ = 7%0A#   if sub_instanceJ.ResultA = 70 then%0A#      sub_instanceK = find-one Object_K where ReferenceJ = 7%0A#      if sub_instanceK.ResultA = 70 then%0A%0A#         this.ResultSUPERTYPE = 70%0A#         this.ResultSUBTYPE = 70%0A%0A      #  sub_instanceL = find-one Object_L where ReferenceL = 7%0A      #   if sub_instanceL.ResultA = 70 then%0A      #      this.ResultSUPERTYPE = 70%0A      #      this.ResultSUBTYPE = 70%0A      #   else%0A      #      generate objVERPOL2:Fault() to this%0A      #   endif%0A      #else%0A      #   generate objVERPOL2:Fault() to this%0A%0A#      endif%0A#   else%0A#      generate objVERPOL2:Fault() to this%0A#   endif%0Aendif%0A%0A#-----------------------------------------------------------%0A%0Agenerate objVERPOL1:Finished() to this,,,,,,,
codeblock,,,,,,,,
description, This state verifies that the event was received or not received in the %0A subtype or the supertype object depending upon the test being performed.%0A %0A The following test create the followng results:%0A %0A     Test  File    Super  Sub  Super     Sub        Verify   Verify%0A                   Obj    Obj  ResultA   ResultA    ResultA  ResultB%0A     1     001     D      E    10        10         10       10%0A           002%0A     2     003     D      E    0         20         20       20%0A           004%0A     3     005     D      E    30        0          30       30%0A           006%0A     4     007     D      E    40        0          40       0%0A           008%0A     5     009     A      B    50        0          60       0%0A           010%0A     6     011     G      H    0         60         0        60%0A           012%0A     7     013     J/K    K/L  70        70         70       70%0A           014%0A %0A Test:           Test case identity.%0A File:           Indicates the scenario file used within each test case.%0A Super Obj:      Indicates the 'SUPERtype' object used within the test%0A                 case.%0A Sub Obj:        Indicates the 'SUBtype' object used within the test case.%0A Super ResultA:  The attribute 'ResultA' is manipulated within the%0A                 'SUPERtype' Object to indicate if required operation was%0A                 successful.%0A Sub ResultA:    The attribute 'ResultA' is manipulated within the%0A                 'SUBtype' Object to indicate if required operation was%0A                 successful.%0A Verify ResultA: The attribute 'ResultA' is manipulated within the%0A                 Verify_Object to indicate that the required operation was%0A                 successful for the 'SUPERtype' object.%0A Verify ResultB: The attribute 'ResultB' is manipulated within the%0A                 Verify_Object to indicate that the required operation was%0A                 success for the 'SUBtype' object.%0A,,,,,,,
state,,,,,,,,
state,,Object_Verify_Polymorphic,Fail,,3,,,
codeblock,#None,,,,,,,
codeblock,,,,,,,,
description, Fail state.%0A,,,,,,,
state,,,,,,,,
event,Finished,,1,,,,,
event,,,,,,,,
event,Fault,,2,,,,,
event,,,,,,,,
event,Verify,,3,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Verify,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Verify,Verify_Event_Received,,,
transition,,,,,,,,
transition,Verify_Event_Received,,,Finished,Idle,,,
transition,,,,,,,,
transition,Verify_Event_Received,,,Fault,Fail,,,
transition,,,,,,,,
transition,Verify_Event_Received,,,Verify,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Verify,Cannot_Happen,,,
transition,,,,,,,,
transitiontable,,,,,,,,
description, This object verifies that both the subtype and supertype objects receiver the polymorphic event.%0A,,,,,,,
object,,,,,,,,
object,Object_X,objX,60,,,,,
attribute,ResultX,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,The_Test_No,,,ResultX,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Integer_Att,,,The_Test_No,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Real_Att,,,Integer_Att,,,,
typeref,real,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Text_Att,,,Real_Att,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Boolean_Att,,,Text_Att,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Object_X,Idle,,1,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,The_Test,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Returning_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,if The_Test = "Check_Attributes" then%0A%0A   if Returning_No = 1 then%0A      [] = RPT2:Test_Passed["Check attributes"%2C Test_No%2C Returning_No]%0A   else%0A      [] = RPT3:Test_Failed["Local attributes not read"%2C Test_No%2C Returning_No]%0A   endif%0A%0Aendif%0A%0A#---------------------------------------------------------------------------%0A%0Aif The_Test = "Check_New_Attributes" then%0A%0A   if this.Integer_Att = 200 then%0A%0A      if this.Real_Att = 199.9 then%0A%0A         if this.Text_Att = "New_Data" then%0A%0A            if not this.Boolean_Att then%0A               [] = RPT2:Test_Passed["Target attributes updated"%2C Test_No%2C 0]%0A            else%0A               [] = RPT3:Test_Failed["Target attributes not updated"%2C Test_No%2C -10]%0A            endif%0A%0A         else%0A            [] = RPT3:Test_Failed["Target attributes not updated"%2C Test_No%2C -20]%0A         endif%0A%0A      else%0A         [] = RPT3:Test_Failed["Target attributes not updated"%2C Test_No%2C -30]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed["Target attributes not updated"%2C Test_No%2C -40]%0A   endif%0A%0Aendif%0A%0A#---------------------------------------------------------------------------%0A%0Aif The_Test = "Check_Inst_Attributes" then%0A%0A   if Returning_No = 1 then%0A      [] = RPT2:Test_Passed["Check instance attributes"%2C Test_No%2C Returning_No]%0A   else%0A      [] = RPT3:Test_Failed["Instance attributes not read"%2C Test_No%2C Returning_No]%0A   endif%0A%0Aendif%0A%0A#---------------------------------------------------------------------------%0A%0Aif The_Test = "Check_New_Inst_Attributes" then%0A%0A   temp_Inst = find-one Object_X where The_Test_No = Test_No%0A%0A   if temp_Inst.Integer_Att = 300 then%0A%0A      if temp_Inst.Real_Att = 299.9 then%0A%0A         if temp_Inst.Text_Att = "More_Data" then%0A%0A            if not temp_Inst.Boolean_Att then%0A               [] = RPT2:Test_Passed["Other inst attributes updated"%2C Test_No%2C 0]%0A            else%0A               [] = RPT3:Test_Failed["Other inst attributes not updated"%2C Test_No%2C -10]%0A            endif%0A%0A         else%0A            [] = RPT3:Test_Failed["Other inst attributes not updated"%2C Test_No%2C -20]%0A         endif%0A%0A      else%0A         [] = RPT3:Test_Failed["Other inst attributes not updated"%2C Test_No%2C -30]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed["Other inst attributes not updated"%2C Test_No%2C -40]%0A   endif%0A%0Aendif%0A%0A#---------------------------------------------------------------------------%0A%0Aif The_Test = "Check_Other_Object" then%0A%0A   if Returning_No = 1 then%0A      [] = RPT2:Test_Passed["Check other attributes"%2C Test_No%2C Returning_No]%0A   else%0A      [] = RPT3:Test_Failed["Other attributes not read"%2C Test_No%2C Returning_No]%0A   endif%0A%0Aendif%0A%0A#---------------------------------------------------------------------------%0A%0Aif The_Test = "Check_New_Other_Object" then%0A%0A   instZ = find-one Object_Z where The_Test_No = Test_No%0A%0A   if instZ.Int_Att = 2000 then%0A%0A      if instZ.Real_Att = 2000.0 then%0A%0A         if instZ.Text_Att = "New_Test_Data" then%0A            [] = RPT2:Test_Passed["Other object attributes updated"%2C Test_No%2C 0]%0A         else%0A            [] = RPT3:Test_Failed["Other object attributes not updated"%2C Test_No%2C -10]%0A         endif%0A%0A      else%0A         [] = RPT3:Test_Failed["Other object attributes not updated"%2C Test_No%2C -20]%0A      endif%0A%0A   else%0A      [] = RPT3:Test_Failed["Other object attributes not updated"%2C Test_No%2C -30]%0A   endif%0A%0Aendif%0A%0A#---------------------------------------------------------------------------%0A%0Aif The_Test = "Check_State_Generation" then%0A%0A   if Returning_No = 2 then%0A      [] = RPT2:Test_Passed["Generated from State Action"%2C Test_No%2C Returning_No]%0A   else%0A%0A      if Returning_No = 3 then%0A         [] = RPT2:Test_Passed["Generated from Sync Service"%2C Test_No%2C Returning_No]%0A      else%0A %0A         if Returning_No = 4 then%0A            [] = RPT2:Test_Passed["Generated from Bridge"%2C Test_No%2C Returning_No]%0A         else%0A%0A            if Returning_No = 5 then%0A               [] = RPT2:Test_Passed["Generated from Scenario"%2C Test_No%2C Returning_No]%0A            else%0A               [] = RPT3:Test_Failed["Failed to generate"%2C Test_No%2C Returning_No]%0A            endif%0A%0A         endif%0A%0A      endif%0A%0A   endif%0A%0Aendif%0A%0A#---------------------------------------------------------------------------%0A%0Aif The_Test = "Check_ASL_In_Instance" then%0A%0A   if Returning_No = 200 then%0A      [] = RPT2:Test_Passed["ASL in instance"%2C Test_No%2C Returning_No]%0A   else%0A      [] = RPT3:Test_Failed["ASL in instance"%2C Test_No%2C Returning_No]%0A   endif%0A%0Aendif%0A%0A#---------------------------------------------------------------------------%0A%0Aif The_Test = "Unknown_Test" then%0A   [] = RPT3:Test_Failed["Unknown_Test"%2C Test_No%2C Returning_No]%0Aendif%0A%0A#---------------------------------------------------------------------------%0A%0Aif The_Test = "Lots_Of_Params" then%0A%0A   # in this state check that all the events have been processed and then verify %0A   # the result%0A   if this.ResultX = 67108863 then%0A      [] = RPT2:Test_Passed["Lots of Params"%2C Test_No%2C this.ResultX]%0A   else%0A      [] = RPT3:Test_Failed["Lots of Params"%2C Test_No%2C this.ResultX]%0A   endif%0A%0Aendif%0A%0A,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Object_X,Check_ASL,,2,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,ASL_Type,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,if ASL_Type = "State Action" then%0A   Returning_No = 2%0A%0Aelse%0A %0A   if ASL_Type = "Sync Service" then%0A      Returning_No = 3%0A   else%0A   %0A      if ASL_Type = "Bridge" then%0A         Returning_No = 4%0A      else%0A%0A         if ASL_Type = "Scenario" then%0A            Returning_No = 5%0A         else%0A            Returning_No = -10%0A         endif%0A%0A      endif%0A%0A   endif%0A%0Aendif%0A%0Agenerate objX2:Finished(Test_No%2C "Check_State_Generation"%2C Returning_No) to this%0A,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Object_X,Generate_From_State,,3,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,generate objX1:Check_ASL(Test_No%2C "State Action") to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Object_X,Check_Attributes,,4,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Which_Test,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,if Which_Test = "Read_Target_Instance" then%0A%0A   if this.Integer_Att = 100 then%0A%0A      if this.Real_Att = 99.9 then%0A%0A         if this.Text_Att = "Test_Data" then%0A%0A            if not this.Boolean_Att then%0A               Returning_No = -10%0A            else%0A               Returning_No = 1%0A            endif%0A%0A         else%0A            Returning_No = -20%0A         endif%0A%0A      else%0A         Returning_No = -30%0A      endif%0A%0A   else%0A      Returning_No = -40%0A   endif%0A%0A   generate objX2:Finished(Test_No%2C "Check_Attributes"%2C Returning_No) to this%0A%0Aelse%0A%0A   if Which_Test = "Write_Target_Instance" then%0A%0A      this.Integer_Att = 200%0A      this.Real_Att    = 199.9%0A      this.Text_Att    = "New_Data"%0A      this.Boolean_Att = FALSE%0A%0A      generate objX2:Finished(Test_No%2C "Check_New_Attributes"%2C Returning_No) to this%0A%0A   else%0A%0A      if Which_Test = "Read_Other_Instance" then%0A%0A         temp_Inst = find-one Object_X where The_Test_No = Test_No%0A%0A         if temp_Inst != UNDEFINED then%0A%0A            if temp_Inst.Integer_Att = 1111 then%0A %0A               if temp_Inst.Real_Att = 11.1 then%0A%0A                  if temp_Inst.Text_Att = "Dummy_Data" then%0A%0A                     if temp_Inst.Boolean_Att then%0A                        Returning_No = -10%0A                     else%0A                        Returning_No = 1%0A                     endif%0A%0A                  else%0A                     Returning_No = -20%0A                  endif%0A%0A               else%0A                  Returning_No = -30%0A               endif%0A%0A            else%0A               Returning_No = -40%0A            endif%0A%0A         else%0A            Returning_No = -50%0A         endif%0A%0A         generate objX2:Finished(Test_No%2C "Check_Inst_Attributes"%2C Returning_No) to this%0A%0A      else%0A%0A         if Which_Test = "Write_Other_Instance" then%0A%0A            temp_Inst = find-one Object_X where The_Test_No = Test_No%0A%0A            temp_Inst.Integer_Att = 300%0A            temp_Inst.Real_Att    = 299.9%0A            temp_Inst.Text_Att    = "More_Data"%0A            temp_Inst.Boolean_Att = FALSE%0A%0A            generate objX2:Finished(Test_No%2C "Check_New_Inst_Attributes"%2C Returning_No) to this%0A%0A         else%0A%0A            if Which_Test = "Read_Other_Object" then%0A%0A               tempZ = find-one Object_Z where The_Test_No = Test_No%0A %0A               if tempZ.Int_Att = 1000 then%0A%0A                  if tempZ.Real_Att = 1000.0 then%0A%0A                     if tempZ.Text_Att = "Test_Data" then%0A                        Returning_No = 1%0A                     else%0A                        Returning_No = -10%0A                     endif%0A%0A                  else%0A                     Returning_No = -20%0A                  endif%0A%0A               else%0A                  Returning_No = -30%0A               endif%0A%0A               generate objX2:Finished(Test_No%2C "Check_Other_Object"%2C Returning_No) to this%0A%0A            else%0A%0A               if Which_Test = "Write_Other_Object" then%0A %0A                  tempZ = find-one Object_Z where The_Test_No = Test_No%0A%0A                  tempZ.Int_Att = 2000%0A                  tempZ.Real_Att = 2000.0%0A                  tempZ.Text_Att = "New_Test_Data"%0A%0A                  generate objX2:Finished(Test_No%2C "Check_New_Other_Object"%2C Returning_No) to this %0A               else%0A                  generate objX2:Finished(Test_No%2C "Unknown_Test"%2C Returning_No) to this %0A%0A               endif%0A%0A            endif%0A%0A         endif%0A%0A      endif%0A%0A   endif%0A%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Object_X,Check_ASL_In_State,,6,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Input_Param,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,%0Aif Input_Param = 100 then%0A   Returning_No = Input_Param + 100%0Aelse%0A   Returning_No = -10%0Aendif%0A%0Agenerate objX2:Finished(Test_No%2C "Check_ASL_In_Instance"%2C Returning_No) to this%0A,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Object_X,Lots_Of_Parameters,,7,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_A,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_B,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_C,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_D,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_E,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_F,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_G,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_H,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_I,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_J,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_K,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_L,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_M,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_N,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_O,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_P,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_Q,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_R,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_S,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_T,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_U,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_V,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_W,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_X,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_Y,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_Z,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#-------------------------------------------------------------------------%0A# Supertype%0A#-------------------------------------------------------------------------%0A%0Atemp = Param_A + Param_B + Param_C + Param_D + Param_E + Param_F + \%0A       Param_G + Param_H + Param_I + Param_J + Param_K + Param_L + \%0A       Param_M + Param_N + Param_O + Param_P + Param_Q + Param_R + \%0A       Param_S + Param_T + Param_U + Param_V + Param_W + Param_X + \%0A       Param_Y + Param_Z%0A%0Athis.ResultX = temp%0A%0A#-------------------------------------------------------------------------%0A%0Agenerate objX2:Finished(Test_No%2C "Lots_Of_Params"%2C 0) to this%0A%0A,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Check_ASL,,1,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,ASL_Type,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finished,,2,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,The_Test,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Returning_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,From_State,,3,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Check_Attributes,,4,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Which_Test,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Check_ASL_In_State,,5,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Input_Param,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Check_Lots_Of_Params,,6,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_A,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_B,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_C,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_D,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_E,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_F,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_G,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_H,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_I,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_J,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_K,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_L,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_M,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_N,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_O,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_P,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_Q,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_R,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_S,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_T,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_U,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_V,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_W,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_X,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_Y,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Param_Z,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Check_ASL,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,From_State,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Check_Attributes,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Check_ASL_In_State,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Check_Lots_Of_Params,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Check_ASL,Check_ASL,,,
transition,,,,,,,,
transition,Idle,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,,From_State,Generate_From_State,,,
transition,,,,,,,,
transition,Idle,,,Check_Attributes,Check_Attributes,,,
transition,,,,,,,,
transition,Idle,,,Check_ASL_In_State,Check_ASL_In_State,,,
transition,,,,,,,,
transition,Idle,,,Check_Lots_Of_Params,Lots_Of_Parameters,,,
transition,,,,,,,,
transition,Check_ASL,,,Check_ASL,Ignore,,,
transition,,,,,,,,
transition,Check_ASL,,,Finished,Idle,,,
transition,,,,,,,,
transition,Check_ASL,,,From_State,Ignore,,,
transition,,,,,,,,
transition,Check_ASL,,,Check_Attributes,Ignore,,,
transition,,,,,,,,
transition,Check_ASL,,,Check_ASL_In_State,Ignore,,,
transition,,,,,,,,
transition,Check_ASL,,,Check_Lots_Of_Params,Ignore,,,
transition,,,,,,,,
transition,Generate_From_State,,,Check_ASL,Check_ASL,,,
transition,,,,,,,,
transition,Generate_From_State,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Generate_From_State,,,From_State,Ignore,,,
transition,,,,,,,,
transition,Generate_From_State,,,Check_Attributes,Ignore,,,
transition,,,,,,,,
transition,Generate_From_State,,,Check_ASL_In_State,Ignore,,,
transition,,,,,,,,
transition,Generate_From_State,,,Check_Lots_Of_Params,Ignore,,,
transition,,,,,,,,
transition,Check_Attributes,,,Check_ASL,Ignore,,,
transition,,,,,,,,
transition,Check_Attributes,,,Finished,Idle,,,
transition,,,,,,,,
transition,Check_Attributes,,,From_State,Ignore,,,
transition,,,,,,,,
transition,Check_Attributes,,,Check_Attributes,Ignore,,,
transition,,,,,,,,
transition,Check_Attributes,,,Check_ASL_In_State,Ignore,,,
transition,,,,,,,,
transition,Check_Attributes,,,Check_Lots_Of_Params,Ignore,,,
transition,,,,,,,,
transition,Check_ASL_In_State,,,Check_ASL,Ignore,,,
transition,,,,,,,,
transition,Check_ASL_In_State,,,Finished,Idle,,,
transition,,,,,,,,
transition,Check_ASL_In_State,,,From_State,Ignore,,,
transition,,,,,,,,
transition,Check_ASL_In_State,,,Check_Attributes,Ignore,,,
transition,,,,,,,,
transition,Check_ASL_In_State,,,Check_ASL_In_State,Ignore,,,
transition,,,,,,,,
transition,Check_ASL_In_State,,,Check_Lots_Of_Params,Ignore,,,
transition,,,,,,,,
transition,Lots_Of_Parameters,,,Check_ASL,Ignore,,,
transition,,,,,,,,
transition,Lots_Of_Parameters,,,Finished,Idle,,,
transition,,,,,,,,
transition,Lots_Of_Parameters,,,From_State,Ignore,,,
transition,,,,,,,,
transition,Lots_Of_Parameters,,,Check_Attributes,Ignore,,,
transition,,,,,,,,
transition,Lots_Of_Parameters,,,Check_ASL_In_State,Ignore,,,
transition,,,,,,,,
transition,Lots_Of_Parameters,,,Check_Lots_Of_Params,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Object_Z,objZ,61,,,,,
attribute,The_Test_No,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Int_Att,,,The_Test_No,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Real_Att,,,Int_Att,,,,
typeref,real,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Text_Att,,,Real_Att,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Object_Z,Idle,,1,,,
state,,,,,,,,
state,,Object_Z,Add,,2,,,
codeblock,temp = this.Int_Att%0Atemp = temp + 1%0A%0Athis.Int_Att = temp%0A%0Agenerate objZ2:Finish() to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Object_Z,Check,,3,,,
codeblock,if this.Int_Att = 1000 then%0A   [] = RPT2:Test_Passed["Many queued events"%2C this.The_Test_No%2C this.Int_Att]%0Aelse%0A   [] = RPT3:Test_Failed["Many queued events"%2C this.The_Test_No%2C this.Int_Att]%0Aendif%0A%0Agenerate objZ2:Finish() to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Start,,1,,,,,
event,,,,,,,,
event,Finish,,2,,,,,
event,,,,,,,,
event,Check_Total,,3,,,,,
event,,,,,,,,
event,Part1,,4,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Start,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finish,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Check_Total,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Part1,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Start,Add,,,
transition,,,,,,,,
transition,Idle,,,Finish,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Check_Total,Check,,,
transition,,,,,,,,
transition,Idle,,,Part1,Ignore,,,
transition,,,,,,,,
transition,Add,,,Start,Ignore,,,
transition,,,,,,,,
transition,Add,,,Finish,Idle,,,
transition,,,,,,,,
transition,Add,,,Check_Total,Ignore,,,
transition,,,,,,,,
transition,Add,,,Part1,Ignore,,,
transition,,,,,,,,
transition,Check,,,Start,Ignore,,,
transition,,,,,,,,
transition,Check,,,Finish,Idle,,,
transition,,,,,,,,
transition,Check,,,Check_Total,Ignore,,,
transition,,,,,,,,
transition,Check,,,Part1,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Priority_A,PriA,64,,,,,
attribute,RefA,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,A_ID,,,RefA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Event_Count,,,A_ID,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Done_It,,,Event_Count,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Poly_A,,,Done_It,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Poly_B,,,Poly_A,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Priority_A,Idle,,1,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,[] = Events5::Dump_Text["Finish Event In PriA Triggered"]%0A%0Atemp = this.Event_Count%0Atemp = temp + 1%0Athis.Event_Count = temp%0A%0Aif this.Event_Count = 1 then%0A   this.Poly_A = TRUE%0Aendif%0A%0Aif this.Event_Count = 2 then%0A%0A   if this.RefA = 10 then%0A      this.RefA = 20%0A   endif%0A%0Aendif%0A%0Aif this.Event_Count = 3 then%0A%0A   if this.RefA = 20 then%0A      this.RefA = 30%0A   endif%0A%0Aendif%0A%0Aif this.Event_Count = 3 then%0A%0A   if this.RefA = 30 then%0A      [] = RPT2:Test_Passed["Event Priorities"%2C Test_No%2C this.RefA]%0A   else%0A      [] = RPT3:Test_Failed["Event Priorities"%2C Test_No%2C this.RefA]%0A   endif%0A%0A   [] = RPT9:Perform_Req_Anal[]%0A%0A   my_test = find-one Test_Data%0A   The_Test_Number = my_test.Current_Test_Number%0A%0A   [] = Events2::Delete_Report_Data[]%0A%0A   my_test = find-one Test_Data%0A%0A   if my_test != UNDEFINED then%0A      delete my_test%0A   endif%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Priority_A,Check_Priority,,2,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Index,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,InstPA = find-one Priority_A where A_ID = 1%0A%0Aif this.Poly_A and this.Poly_B then%0A%0A   if this.RefA = 0 then%0A      this.RefA = 10%0A   endif%0A%0Aendif%0A%0A[] = Events5::Dump_Text["Start Event In PriA Triggered"]%0A%0Aif !this.Done_It then%0A   [] = Events5::Dump_Text["StartB Event In PriA Generated To Inst Of PriA"]%0A   generate PriA3:StartB(Test_No%2C 2) to InstPA%0A   this.Done_It = TRUE%0Aendif%0A%0A[] = Events5::Dump_Text["Finish Event In PriA Generated To Self"]%0Agenerate PriA2:Finish(Test_No) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,ST_Start,,1,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Index,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finish,,2,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,StartB,,3,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Index,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,ST_Start,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finish,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,StartB,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,ST_Start,Check_Priority,,,
transition,,,,,,,,
transition,Idle,,,Finish,Idle,,,
transition,,,,,,,,
transition,Idle,,,StartB,Check_Priority,,,
transition,,,,,,,,
transition,Check_Priority,,,ST_Start,Check_Priority,,,
transition,,,,,,,,
transition,Check_Priority,,,Finish,Idle,,,
transition,,,,,,,,
transition,Check_Priority,,,StartB,Check_Priority,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Priority_B,PriB,65,,,,,
attribute,B_ID,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Priority_B,Idle,,1,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,InstPA = find-one Priority_A where A_ID = 1%0A%0AInstPA.Poly_B = TRUE%0A%0A[] = Events5::Dump_Text["Finished Event In PriB Triggered"]%0A%0A,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Priority_B,Check,,2,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Index,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,InstPA = find-one Priority_A where A_ID = 1%0A%0A[] = Events5::Dump_Text["Start Event In PriB Triggered"]%0A%0A[] = Events5::Dump_Text["StartB Event In PriA Generated From PriB"]%0Agenerate PriA3:StartB(Test_No%2C 0) to InstPA%0A%0A[] = Events5::Dump_Text["Finished Event In PriB Generated To Self"]%0Agenerate PriB1:Finished(Test_No) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Finished,,1,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Start,,2,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Index,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,Priority_A,ST_Start,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,Priority_A,Finish,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,Priority_A,StartB,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Start,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,Priority_A,ST_Start,Check,,,
transition,,,,,,,,
transition,Idle,,Priority_A,Finish,Ignore,,,
transition,,,,,,,,
transition,Idle,,Priority_A,StartB,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Finished,Idle,,,
transition,,,,,,,,
transition,Idle,,,Start,Check,,,
transition,,,,,,,,
transition,Check,,Priority_A,ST_Start,Check,,,
transition,,,,,,,,
transition,Check,,Priority_A,Finish,Idle,,,
transition,,,,,,,,
transition,Check,,Priority_A,StartB,Ignore,,,
transition,,,,,,,,
transition,Check,,,Finished,Idle,,,
transition,,,,,,,,
transition,Check,,,Start,Check,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Reflexive,REFLECT,25,,,,,
attribute,ResultA,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, This attribute is manipulated to indicate that the required operation was successful.%0A,,,,,,,
attribute,,,,,,,,
attribute,ReferenceREFLECT,preferred,,ResultA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Reflexive,Idle,,1,,,
codeblock,#None,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Reflexive,Test_state,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Counter,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# Test state%0A#-----------------------------------------------------------%0A%0A#-----------------------------------------------------------%0A# Test 1 - Send events to own instance handle%0A#-----------------------------------------------------------%0A%0A   if Test = 1 then%0A%0A      if Counter = 0 then%0A         # Only dump this string if this is the first time%0A         [] = RPT1:Start_Test[Test_Number%2C "Null Requid"%2C "Events"%2C "objREFLECT"%2C "Reflexive navigation"]%0A         count = 0%0A      endif%0A%0A      temp = this.ResultA + 10%0A      this.ResultA = temp%0A%0A      # Set counter value%0A      count = Counter + 1%0A%0A      # Generate event to one's self%0A      if count < 6 then%0A         generate REFLECT3:StartA(Test%2C count%2C Test_Number) to this%0A      endif%0A%0A     if count = 6 then%0A%0A        if this.ResultA != 60 then%0A           [] = RPT3:Test_Failed["Reflexive"%2C Test_Number%2C this.ResultA]%0A           generate REFLECT2:Fault() to this%0A        else%0A           [] = RPT2:Test_Passed["Reflexive"%2C Test_Number%2C this.ResultA]%0A           generate REFLECT1:Finished() to this%0A        endif%0A%0A     endif%0A%0A   endif%0A%0A#-----------------------------------------------------------%0A# Test 2 - Send events to another instance of same object%0A#-----------------------------------------------------------%0A%0A   fault_flag = FALSE%0A   fault_code = 0%0A   count      = 0%0A%0A   if Test = 2 then%0A%0A      if Counter = 0 then %0A         [] = RPT1:Start_Test[Test_Number%2C "Null Requid"%2C "Events"%2C "objREFLECT"%2C "Reflexive navigations"]%0A      endif%0A%0A      temp = this.ResultA + 20%0A      this.ResultA = temp%0A%0A      # Set counter value%0A      count = Counter + 1%0A%0A      # Find an instance to send the event to%0A      an_instance = find-one Reflexive where ReferenceREFLECT = count%0A%0A      if count < 5 then%0A         # Generate event to one's self%0A%0A         if an_instance != UNDEFINED then%0A            generate REFLECT3:StartA(Test%2C count%2C Test_Number) to an_instance%0A         else%0A            fault_code = -3%0A            fault_flag = TRUE%0A         endif%0A%0A      endif%0A%0A      # Verify results%0A      if count = 5 then%0A         {all_instance} = find Reflexive where ReferenceREFLECT = 2%0A%0A         for each_instance in {all_instance} do%0A%0A            if each_instance = UNDEFINED then%0A               fault_flag = TRUE%0A               fault_code = -2%0A            else%0A%0A               if each_instance.ResultA != 20 then%0A                  fault_flag = TRUE%0A                  fault_code = each_instance.ResultA%0A               endif%0A%0A            endif%0A%0A         endfor%0A%0A         if fault_flag = FALSE then%0A            [] = RPT2:Test_Passed["objREFLECT"%2C Test_Number%2C this.ResultA ]%0A            generate REFLECT1:Finished() to this%0A         else%0A            [] = RPT3:Test_Failed["objREFELCT"%2C Test_Number%2C fault_code]%0A            generate REFLECT2:Fault() to this%0A         endif%0A%0A         [] = Events2::Delete_Report_Data[]%0A      endif%0A%0A   endif%0A%0A#-----------------------------------------------------------%0A,,,,,,,
codeblock,,,,,,,,
description, This state verifies that an instance of a reflexive object %0A can send an event to its self and to other instances of %0A the same object.%0A %0A The following tests give the following results:%0A %0A     Test      Reference      ResultA%0A     13        1              60%0A     14        2%2C 3%2C 4        20%0A %0A Test:      Test case identity.%0A Reference: Indicates which instances of the %0A            object 'Reflexive' was included in the test.%0A ResultA:   Indicates the final value written into %0A            the attribute 'ResultA' at the end of %0A            the test%2C the value of this attribute %0A            may change during the test.%0A,,,,,,,
state,,,,,,,,
state,,Reflexive,Fail,,3,,,
codeblock,#None,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Finished,,1,,,,,
event,,,,,,,,
event,Fault,,2,,,,,
event,,,,,,,,
event,StartA,,3,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Counter,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,StartA,Test_state,,,
transition,,,,,,,,
transition,Test_state,,,Finished,Idle,,,
transition,,,,,,,,
transition,Test_state,,,Fault,Fail,,,
transition,,,,,,,,
transition,Test_state,,,StartA,Test_state,,,
transition,,,,,,,,
transition,Fail,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,StartA,Cannot_Happen,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Report_Data,RD,52,,,,,
attribute,Report_Data_Unique_id,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Reported_Domain_Number,,,Report_Data_Unique_id,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,State_Check,SC,59,,,,,
attribute,The_ID,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,The_Test_No,,,The_ID,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Whats_The_State,,,The_Test_No,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,State_Check,Idle,,1,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,if this.Whats_The_State = "Check_State" then%0A   [] = RPT2:Test_Passed["Check state"%2C Test_No%2C 0]%0Aelse%0A   [] = RPT3:Test_Failed["Check_State"%2C Test_No%2C -10]%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,State_Check,Check_State,,2,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,if this.Current_State = 'Check_State' then%0A   this.Whats_The_State = "Check_State"%0Aelse%0A   this.Whats_The_State = "Wrong_State"%0Aendif%0A%0Agenerate SC2:Finished(Test_No) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Check_The_State,,1,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finished,,2,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Check_The_State,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Check_The_State,Check_State,,,
transition,,,,,,,,
transition,Idle,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Check_State,,,Check_The_State,Ignore,,,
transition,,,,,,,,
transition,Check_State,,,Finished,Idle,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,SubA,sbA,8,,,,,
attribute,idA,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R13,,,,idA,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,idA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,SubA,Idle,,1,,,
state,,,,,,,,
state,,SubA,Update,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,# find the supertype%0Amy_super = this -> R13.SuperA%0A%0Atemp = my_super.ResultA + this.Value_To_Add%0A%0A[] = RPT5:Test_Text[temp%2C "SubA updaing supertype object"]%0A%0Amy_super.ResultA = temp,,,,,,,
codeblock,,,,,,,,
description, Add the value specified in the attribute to the supertype%0A attribute ResultA.%0A,,,,,,,
state,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,SuperA,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Verify_Test,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Creation_Event,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Polymorphic,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,SuperA,StartA,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Verify_Test,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Fault,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Polymorphic,Update,,,
transition,,,,,,,,
transition,Update,,SuperA,StartA,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Verify_Test,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Fault,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Finished,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Polymorphic,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,SubB,sbB,32,,,,,
attribute,idA,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R13,,,,idA,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,idA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,SubB,Idle,,1,,,
codeblock,#-------------------------------------------------------------------#%0A%0A[] = RPT5:Test_Text[0%2C "SubB creation state"]%0A# Do nothing%2C instance gets created in this state,,,,,,,
codeblock,,,,,,,,
description, The instance gets created in this state%0A by the supertype.%0A,,,,,,,
state,,,,,,,,
state,,SubB,Update,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,# find the supertype%0Amy_super = this -> R13.SuperA%0A%0Atemp = my_super.ResultA + this.Value_To_Add%0Amy_super.ResultA = temp%0A,,,,,,,
codeblock,,,,,,,,
description, Idle state.%0A,,,,,,,
state,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,SuperA,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Verify_Test,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Creation_Event,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Polymorphic,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,SuperA,StartA,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Verify_Test,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Fault,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Polymorphic,Update,,,
transition,,,,,,,,
transition,Update,,SuperA,StartA,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Verify_Test,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Fault,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Finished,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Polymorphic,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,SubC,sbC,33,,,,,
attribute,idA,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R14,,,,idA,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,idA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,SubC,Idle,,1,,,
codeblock,[] = RPT5:Test_Text[1%2C"SubC creation state"]%0A# Do nothing%2C instance gets created in this state,,,,,,,
codeblock,,,,,,,,
description, The instance gets created in this state by the supertype.%0A,,,,,,,
state,,,,,,,,
state,,SubC,Update,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,my_super = this -> R14.SuperA%0A%0Atemp = my_super.ResultA + this.Value_To_Add%0Amy_super.ResultA = temp%0A,,,,,,,
codeblock,,,,,,,,
description, Idle state.%0A,,,,,,,
state,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,SuperA,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Verify_Test,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Creation_Event,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Polymorphic,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,SuperA,StartA,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Verify_Test,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Fault,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Polymorphic,Update,,,
transition,,,,,,,,
transition,Update,,SuperA,StartA,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Verify_Test,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Fault,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Finished,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Polymorphic,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,SubD,sbD,7,,,,,
attribute,idA,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R14,,,,idA,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,idA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,SubD,Idle,,1,,,
state,,,,,,,,
state,,SubD,Update,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,my_super = this -> R14.SuperA%0A%0Atemp = my_super.ResultA + this.Value_To_Add%0Amy_super.ResultA = temp,,,,,,,
codeblock,,,,,,,,
description, Add the value specified in the attribute to the supertype%0A ResultA attribute.%0A,,,,,,,
state,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,SuperA,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Verify_Test,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Creation_Event,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Polymorphic,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,SuperA,StartA,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Verify_Test,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Fault,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Polymorphic,Update,,,
transition,,,,,,,,
transition,Update,,SuperA,StartA,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Verify_Test,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Fault,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Finished,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Polymorphic,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,SubE,sbE,14,,,,,
attribute,idA,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R6,,,,idA,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,idA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,SubE,Idle,,1,,,
state,,,,,,,,
state,,SubE,Update,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,# find the supertype%0Amy_super = this -> R6.SuperA%0A%0Atemp = my_super.ResultA + 20%0Amy_super.ResultA = temp,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,SuperA,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Verify_Test,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Creation_Event,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Polymorphic,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,SuperA,StartA,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Verify_Test,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Fault,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Polymorphic,Update,,,
transition,,,,,,,,
transition,Update,,SuperA,StartA,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Verify_Test,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Fault,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Finished,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Polymorphic,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,SubF,sbF,15,,,,,
attribute,idA,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R6,,,,idA,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,Value_To_Add,,,idA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,SubF,Idle,,1,,,
state,,,,,,,,
state,,SubF,Update,,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,# find the supertype%0Amy_super = this -> R6.SuperA%0A%0Atemp = my_super.ResultA + 40%0Amy_super.ResultA = temp,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,SuperA,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Verify_Test,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Creation_Event,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,SuperA,Polymorphic,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,SuperA,StartA,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Verify_Test,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Fault,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Idle,,SuperA,Polymorphic,Update,,,
transition,,,,,,,,
transition,Update,,SuperA,StartA,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Verify_Test,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Fault,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Finished,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Update,,SuperA,Polymorphic,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Sub_Level_1_A,SL_ONE_A,35,,,,,
attribute,SL1A_id,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Sub_Level_1_B,SL_ONE_B,39,,,,,
attribute,SL1B_id,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
event,Wake_Up,,1,,,,,
event,,,,,,,,
object,,,,,,,,
object,Sub_Level_2_A,SL_TWO_A,40,,,,,
attribute,SL2A_id,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Sub_Level_2_B,SL_TWO_B,41,,,,,
attribute,SL2B_id,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Sub_Level_2_C,SL_TWO_C,42,,,,,
attribute,SL2C_id,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
event,Go_Two,,1,,,,,
event,,,,,,,,
object,,,,,,,,
object,Sub_Level_2_D,SL_TWO_D,43,,,,,
attribute,SL2D_id,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Sub_Level_3_A,SL_THREE_A,44,,,,,
attribute,SL3A_id,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
event,Go_Three,,1,,,,,
event,,,,,,,,
object,,,,,,,,
object,Sub_Level_3_B,SL_THREE_B,45,,,,,
attribute,SL3B_id,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Sub_Level_3_C,SL_THREE_C,46,,,,,
attribute,SL3C_id,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Sub_Level_3_D,SL_THREE_D,47,,,,,
attribute,SL3D_id,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
event,Go_Three,,1,,,,,
event,,,,,,,,
object,,,,,,,,
object,SuperA,SprA,30,,,,,
attribute,idA,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, Preferred identifier.%0A,,,,,,,
attribute,,,,,,,,
attribute,ResultA,,,idA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, This attribute is manipulated to indicate that the required operation was successful.%0A,,,,,,,
attribute,,,,,,,,
attribute,Reference_ID,,,ResultA,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,SuperA,Wait_Here,,1,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,%0Agenerate SprA6:Polymorphic(Test) to this,,,,,,,
codeblock,,,,,,,,
description, Idle state.%0A,,,,,,,
state,,,,,,,,
state,,SuperA,Fail,,2,,,
codeblock,###### There is no ASL for this state ######,,,,,,,
codeblock,,,,,,,,
description, An instance current state is changed to fail%0A if the test failed.%0A,,,,,,,
state,,,,,,,,
state,,SuperA,Verify_Migration,,3,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,#-------------------------------------------------------------------#%0A# Verify tests%0A#-------------------------------------------------------------------#%0A%0A# Initialise the fault flag%0A%0Afault_flag  = FALSE%0Atested      = FALSE%0Afault_value = -5%0A%0A#-------------------------------------------------------------------#%0A%0Aif this.Reference_ID = 1 then%0A%0A   tested = TRUE%0A%0A   #Find an instance of object SubB%0A#   an_instanceSubB = find-one SubB where idA = Test%0A%0Aan_instanceSubB = this -> R13.SubB%0A%0A   #Check that the instance was created%0A   if an_instanceSubB = UNDEFINED then%0A      fault_flag = TRUE%0A      fault_value = -1%0A   else%0A%0A      #Find an instance of object SubC%0A#      an_instanceSubC = find-one SubC where idA = Test%0A%0Aan_instanceSubC = this -> R14.SubC%0A%0A      #Check that the instance was created%0A      if an_instanceSubC = UNDEFINED then%0A         fault_flag = TRUE%0A         fault_value = -2%0A      else%0A%0A#         an_instanceSubE = find-one SubE where idA = Test%0A%0Aan_instanceSubE = this -> R6.SubE%0A%0A         if an_instanceSubE = UNDEFINED then%0A            fault_flag = TRUE%0A            fault_value = -3%0A%0A         else%0A%0A            # Check that the polymorphic events got delivered%0A            if this.ResultA != 41 then%0A               fault_flag = TRUE%0A               fault_value = this.ResultA%0A            endif%0A%0A         endif%0A%0A      endif%0A%0A   endif%0A%0Aendif%0A%0Aif this.Reference_ID = 2 then%0A%0A   tested = TRUE%0A%0A   #Find an instance of object SubA%0A#   an_instanceSubA = find-one SubA where idA = Test%0Aan_instanceSubA = this -> R13.SubA%0A%0A%0A   #Check that the instance was created%0A   if an_instanceSubA = UNDEFINED then%0A      fault_flag = TRUE%0A      fault_value = -1%0A   else%0A%0A      #Find an instance of object SubD%0A#      an_instanceSubD = find-one SubD where idA = Test%0Aan_instanceSubD = this -> R14.SubD%0A%0A      #Check that the instance was created%0A      if an_instanceSubD = UNDEFINED then%0A         fault_flag = TRUE%0A         fault_value = -2%0A      else%0A%0A#         an_instanceSubE = find-one SubF where idA = Test%0Aan_instanceSubE = this -> R6.SubE%0A%0A         if an_instanceSubE = UNDEFINED then%0A            fault_flag = TRUE%0A            fault_value = -3%0A%0A         else%0A%0A            # Check that the polymorphic events got delivered%0A            if this.ResultA != 25 then%0A               fault_flag = TRUE%0A               fault_value = this.ResultA%0A            endif%0A%0A         endif%0A%0A      endif%0A%0A   endif%0A%0Aendif%0A%0A%0A#-------------------------------------------------------------------#%0A%0A#Tests complete%0Aif fault_flag = FALSE and tested = TRUE then%0A%0A   #Indicate that the test was successful and complete%0A   temp = this.ResultA + 10%0A   this.ResultA = temp%0A   [] = RPT2:Test_Passed["SuperA"%2C Test%2C temp]%0A%0A   generate SprA4:Finished(Test) to this%0A%0Aelse%0A%0A   #Indicate that the test failed%0A   [] = RPT3:Test_Failed["SuperA"%2C Test%2C fault_value]%0A   has_failed = TRUE%0A%0A   generate SprA3:Fault() to this%0A%0Aendif%0A%0A#-------------------------------------------------------------------#%0A,,,,,,,
codeblock,,,,,,,,
description, This state verifies the following:%0A %0A [1] Creation events are possible. - UNSUPPORTED%0A [2] Polymorphic events to multiple %0A     sub-type families are possible.%0A [3] Subtype Migration is possible.%0A,,,,,,,
state,,,,,,,,
state,,SuperA,Migrate,,5,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,%0A[] = RPT1:Start_Test[Test%2C "Null Requid"%2C "Events"%2C "SuperA"%2C "Multiple subtypes called"]%0A%0A[] = RPT5:Test_Text[Test%2C "Super A Migrate state"]%0A%0A#OldSubB = find-one SubB where idA = Test%0A%0AOldSubB = this -> R13.SubB%0A%0A# Unlink and remove any old instances of this sub type that are%0A# kicking around. They were only ever used in the scenario%0A# as faking a creation event into a Super type (such as this)%0A# requires associated subtypes to be defined and linked.%0A%0A# Supertypes must have a subtype defined and linked.%0A# What we are doing here qualifies as Subtype Migration%0A%0Aif OldSubB != UNDEFINED then%0A   unlink OldSubB R13 this%0Aelse%0A   [] = RPT5:Test_Text[Test%2C "Cannot find SubB"]%0Aendif%0A%0A#OldSubC = find-one SubC where idA = Test%0AOldSubC = this -> R14.SubC%0A%0A# Unlink and remove any old instances of this sub type that are%0A# kicking around. They were only ever used in the scenario%0A# as faking a creation event into a Super type (such as this)%0A# requires associated subtypes to be defined and linked.%0A %0Aif OldSubC != UNDEFINED then%0A   unlink OldSubC R14 this%0Aelse%0A   [] = RPT5:Test_Text[Test%2C "Cannot find SubC"]%0Aendif%0A%0A# Test subtype migration to another instance of the same object%0A%0Aif this.Reference_ID = 1 then%0A%0A   #Create an instance of the subtype%2C changing value to add attribute.%0A   newSubB = create SubB with idA = this.idA &\%0A                              Value_To_Add = 10 &\%0A                              Current_State = 'Idle'%0A%0A   #Create an instance of the subtype%0A   newSubC = create SubC with idA = this.idA &\%0A                              Value_To_Add = 11 &\%0A                              Current_State = 'Idle'%0A%0A   link newSubB R13 this%0A   link newSubC R14 this%0A%0A%0Aendif%0A%0Aif this.Reference_ID = 2 then%0A%0A#   Old_SubF = find-one SubF where idA = Test%0A%0A   # Old SubF is linked%2C so navigate to it%2C just to prove we can%2C before%0A   # unlinking it%2C and deleting it.%0A%0A   Old_SubF = this -> R6.SubF%0A%0A   # Unlink and remove any old instances of this sub type that are%0A   # kicking around. They were only ever used in the scenario%0A   # as faking a creation event into a Super type (such as this)%0A   # requires associated subtypes to be defined and linked.%0A%0A   # Supertypes must have a subtype defined and linked.%0A   # What we are doing here qualifies as Subtype Migration%0A%0A   if Old_SubF != UNDEFINED then%0A%0A      unlink Old_SubF R6 this%0A%0A      delete Old_SubF%0A%0A      New_SubE = find-one SubE where Value_To_Add = 0%0A%0A      if New_SubE != UNDEFINED then%0A%0A         link New_SubE R6 this%0A%0A      else%0A%0A         [] = RPT5:Test_Text[Test%2C "Cannot find SubE"]%0A%0A      endif%0A%0A   else%0A%0A      [] = RPT5:Test_Text[Test%2C "Cannot find SubF"]%0A%0A   endif%0A%0A   #Create an instance of the subtype%2C changing value to add attribute.%0A   newSubA = create SubA with idA = this.idA &\%0A                              Value_To_Add = 2 &\%0A                              Current_State = 'Idle'%0A%0A   #Create an instance of the subtype%0A   newSubD = create SubD with idA = this.idA &\%0A                              Value_To_Add = 3 &\%0A                              Current_State = 'Idle'%0A%0A   # Create the link to the other subtype in the family.%0A%0A   link newSubA R13 this%0A   link newSubD R14 this%0A%0A%0A%0Aendif%0A%0Agenerate SprA1:StartA(Test) to this%0A%0A%0A%0A%0A#-------------------------------------------------------------------#%0A%0A,,,,,,,
codeblock,,,,,,,,
description, Migrate the sub types.%0A,,,,,,,
state,,,,,,,,
state,,SuperA,Idle,,7,,,
state,,,,,,,,
event,StartA,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Verify_Test,,2,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Fault,,3,,,,,
event,,,,,,,,
event,Finished,,4,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Creation_Event,,5,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Polymorphic,,6,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Verify_Test,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Creation_Event,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Polymorphic,Cannot_Happen,,,
transition,,,,,,,,
transition,Wait_Here,,,StartA,Ignore,,,
transition,,,,,,,,
transition,Wait_Here,,,Verify_Test,Verify_Migration,,,
transition,,,,,,,,
transition,Wait_Here,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Wait_Here,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Wait_Here,,,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Wait_Here,,,Polymorphic,Ignore,,,
transition,,,,,,,,
transition,Fail,,,StartA,Ignore,,,
transition,,,,,,,,
transition,Fail,,,Verify_Test,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Fault,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Fail,,,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Fail,,,Polymorphic,Ignore,,,
transition,,,,,,,,
transition,Verify_Migration,,,StartA,Ignore,,,
transition,,,,,,,,
transition,Verify_Migration,,,Verify_Test,Cannot_Happen,,,
transition,,,,,,,,
transition,Verify_Migration,,,Fault,Fail,,,
transition,,,,,,,,
transition,Verify_Migration,,,Finished,Wait_Here,,,
transition,,,,,,,,
transition,Verify_Migration,,,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Verify_Migration,,,Polymorphic,Ignore,,,
transition,,,,,,,,
transition,Migrate,,,StartA,Wait_Here,,,
transition,,,,,,,,
transition,Migrate,,,Verify_Test,Ignore,,,
transition,,,,,,,,
transition,Migrate,,,Fault,Ignore,,,
transition,,,,,,,,
transition,Migrate,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Migrate,,,Creation_Event,Ignore,,,
transition,,,,,,,,
transition,Migrate,,,Polymorphic,Ignore,,,
transition,,,,,,,,
transition,Idle,,,StartA,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Verify_Test,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Fault,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Creation_Event,Migrate,,,
transition,,,,,,,,
transition,Idle,,,Polymorphic,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
description, Supertype object.%0A,,,,,,,
object,,,,,,,,
object,Terminal_Object,objTERMINAL,27,,,,,
attribute,ReferenceTERM,preferred,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, Referential attribute.%0A,,,,,,,
attribute,,,,,,,,
attribute,ResultA,,,ReferenceTERM,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description, This attribute is manipulated to indicate that the required operation was successful.%0A,,,,,,,
attribute,,,,,,,,
state,,Terminal_Object,Idle,,1,,,
codeblock,#None,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Terminal_Object,Terminal_State,terminal,2,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,#-----------------------------------------------------------%0A# Terminal state%0A#-----------------------------------------------------------%0A%0A[] = RPT1:Start_Test[Test_Number%2C "1241-0000-01-0206"%2C "Events"%2C "Terminal"%2C "Terminal state test"]%0A%0Athis.ResultA  = 10%0A%0A{tob} = find-all Terminal_Object%0A%0Anotob = countof{tob}%0A%0A# Due to the vaguaries of the queueing system and the fact that%0A# the scenario runs to completion before events are de-queued%2C %0A# for test 1 there will be two instances of Terminal_Object %0A# loitering in the system waiting to be jumped on. %0A# This state will delete one of them%2C leaving one to fend for itself.%0A%0A# Then in test two%2C the final instance will exit stage left.%0A%0Aif Test = 1 and notob = 2 then%0A%0A   # Report a success%2C there really isn't anything else it could be.%0A   [] = RPT2:Test_Passed["Terminal"%2C Test_Number%2C this.ResultA]%0Aelse%0A%0A   if Test = 2 and notob = 1 then%0A      [] = RPT2:Test_Passed["Terminal"%2C Test_Number%2C this.ResultA]%0A   else%0A      # There is more than one of this object. There shouldn't be.%0A      [] = RPT3:Test_Failed["Terminal"%2C Test_Number%2C notob]%0A   endif%0A%0Aendif%0A   %0A# Delete the instance.%0Adelete this,,,,,,,
codeblock,,,,,,,,
description, This state shall delete it's own instance%2C but only %0A after reporting itself as available for deletion.%0A,,,,,,,
state,,,,,,,,
event,StartA,,1,,,,,
parameter,Test,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Test_Number,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,StartA,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,StartA,Terminal_State,,,
transition,,,,,,,,
transition,Terminal_State,,,StartA,Cannot_Happen,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Test_Data,TD,31,,,,,
attribute,Current_Test_Number,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,Test_Effects,TE,69,,,,,
attribute,ID,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Result,,,ID,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Test_Effects,Idle,,1,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Effect_Type,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
state,,,,,,,,
state,,Test_Effects,Gen_Ignore_Event,,2,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,   [] = RPT1:Start_Test[Test_No%2C "1241-0000-01-0210"%2C "Events"%2C "State"%2C "Ignore Event"]%0A   [] = RPT8:Specify_Requid[Test_No%2C "1241-0000-01-0207"]%0A   [] = RPT8:Specify_Requid[Test_No%2C "1241-0000-01-0208"]%0A%0A   temp = this.Result%0A   temp = temp + 10%0A%0A   this.Result = temp%0A%0A   generate TE1:Gen_Ignore(Test_No) to this%0A%0A   generate TE3:Finish(Test_No%2C "Ignored") to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Test_Effects,Update_Result,,3,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Effect_Type,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,if Effect_Type = "Ignored" then%0A%0A   if this.Result = 10 then%0A      [] = RPT2:Test_Passed["Ignored event"%2C Test_No%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Ignored event"%2C Test_No%2C this.Result]%0A   endif  %0A%0Aendif%0A%0Aif Effect_Type = "Cannot Happen" then%0A%0A   if this.Result = 10 then%0A      [] = RPT2:Test_Passed["Cannot Happen event"%2C Test_No%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Cannot Happen event"%2C Test_No%2C this.Result]%0A   endif %0A%0Aendif%0A%0Aif Effect_Type = "Undefined" then%0A%0A   if this.Result = 10 then%0A      [] = RPT2:Test_Passed["Undefined event"%2C Test_No%2C 0]%0A   else%0A      [] = RPT3:Test_Failed["Undefined event"%2C Test_No%2C this.Result]%0A   endif %0A%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Test_Effects,Check_Ignore_State,,4,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,   [] = RPT1:Start_Test[Test_No%2C "1241-0000-01-0211"%2C "Events"%2C "State"%2C "Ignore Event"]%0A%0A   generate TE1:Gen_Ignore(Test_No) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Test_Effects,Gen_Cannot_Happen_Event,,5,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,   [] = RPT1:Start_Test[Test_No%2C "1241-0000-01-0212"%2C "Events"%2C "State"%2C "Cannot Happen Event"]%0A   [] = RPT8:Specify_Requid[Test_No%2C "1241-0000-01-0207"]%0A   [] = RPT8:Specify_Requid[Test_No%2C "1241-0000-01-0208"]%0A%0A   temp = this.Result%0A   temp = temp + 10%0A%0A   this.Result = temp%0A%0A   generate TE4:Gen_Cannot_Happen(Test_No) to this%0A%0A   generate TE3:Finish(Test_No%2C "Cannot Happen") to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Test_Effects,Check_Cannot_Happen_State,,6,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,   [] = RPT1:Start_Test[Test_No%2C "1241-0000-01-0213"%2C "Events"%2C "State"%2C "Ignore Event"]%0A%0A   generate TE4:Gen_Cannot_Happen(Test_No) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Test_Effects,Unsupported,,7,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,The_Reqid,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Effect_Type,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,   [] = RPT1:Start_Test[Test_No%2C The_Reqid%2C "Events"%2C "State"%2C Effect_Type]%0A%0A   [] = RPT4:Test_Unsupported[Test_No]%0A%0A   generate TE3:Finish(Test_No%2C Effect_Type) to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Test_Effects,Gen_Indefined_Event,,8,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,   [] = RPT1:Start_Test[Test_No%2C "1241-0000-01-0212"%2C "Events"%2C "State"%2C "Ignore Event"]%0A   [] = RPT8:Specify_Requid[Test_No%2C "1241-0000-01-0207"]%0A   [] = RPT8:Specify_Requid[Test_No%2C "1241-0000-01-0208"]%0A%0A   temp = this.Result%0A   temp = temp + 10%0A%0A   this.Result = temp%0A%0A   generate TE7:Gen_To_Undefined(Test_No) to this%0A%0A   generate TE3:Finish(Test_No%2C "Undefined") to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Gen_Ignore,,1,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Check_Ignore_State,,2,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finish,,3,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Effect_Type,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Gen_Cannot_Happen,,4,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Check_CH_State,,5,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Gen_To_Unsupported,,6,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,The_Reqid,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,Effect_Type,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Gen_To_Undefined,,7,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Gen_Ignore,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Check_Ignore_State,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finish,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Gen_Cannot_Happen,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Check_CH_State,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Gen_To_Unsupported,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Gen_To_Undefined,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Gen_Ignore,Gen_Ignore_Event,,,
transition,,,,,,,,
transition,Idle,,,Check_Ignore_State,Check_Ignore_State,,,
transition,,,,,,,,
transition,Idle,,,Finish,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Gen_Cannot_Happen,Gen_Cannot_Happen_Event,,,
transition,,,,,,,,
transition,Idle,,,Check_CH_State,Check_Cannot_Happen_State,,,
transition,,,,,,,,
transition,Idle,,,Gen_To_Unsupported,Unsupported,,,
transition,,,,,,,,
transition,Idle,,,Gen_To_Undefined,Gen_Indefined_Event,,,
transition,,,,,,,,
transition,Gen_Ignore_Event,,,Gen_Ignore,Ignore,,,
transition,,,,,,,,
transition,Gen_Ignore_Event,,,Check_Ignore_State,Cannot_Happen,,,
transition,,,,,,,,
transition,Gen_Ignore_Event,,,Finish,Update_Result,,,
transition,,,,,,,,
transition,Gen_Ignore_Event,,,Gen_Cannot_Happen,Ignore,,,
transition,,,,,,,,
transition,Gen_Ignore_Event,,,Check_CH_State,Ignore,,,
transition,,,,,,,,
transition,Gen_Ignore_Event,,,Gen_To_Unsupported,Ignore,,,
transition,,,,,,,,
transition,Gen_Ignore_Event,,,Gen_To_Undefined,Ignore,,,
transition,,,,,,,,
transition,Update_Result,,,Gen_Ignore,Cannot_Happen,,,
transition,,,,,,,,
transition,Update_Result,,,Check_Ignore_State,Cannot_Happen,,,
transition,,,,,,,,
transition,Update_Result,,,Finish,Cannot_Happen,,,
transition,,,,,,,,
transition,Update_Result,,,Gen_Cannot_Happen,Ignore,,,
transition,,,,,,,,
transition,Update_Result,,,Check_CH_State,Ignore,,,
transition,,,,,,,,
transition,Update_Result,,,Gen_To_Unsupported,Ignore,,,
transition,,,,,,,,
transition,Update_Result,,,Gen_To_Undefined,Ignore,,,
transition,,,,,,,,
transition,Check_Ignore_State,,,Gen_Ignore,Ignore,,,
transition,,,,,,,,
transition,Check_Ignore_State,,,Check_Ignore_State,Cannot_Happen,,,
transition,,,,,,,,
transition,Check_Ignore_State,,,Finish,Cannot_Happen,,,
transition,,,,,,,,
transition,Check_Ignore_State,,,Gen_Cannot_Happen,Ignore,,,
transition,,,,,,,,
transition,Check_Ignore_State,,,Check_CH_State,Ignore,,,
transition,,,,,,,,
transition,Check_Ignore_State,,,Gen_To_Unsupported,Ignore,,,
transition,,,,,,,,
transition,Check_Ignore_State,,,Gen_To_Undefined,Ignore,,,
transition,,,,,,,,
transition,Gen_Cannot_Happen_Event,,,Gen_Ignore,Ignore,,,
transition,,,,,,,,
transition,Gen_Cannot_Happen_Event,,,Check_Ignore_State,Ignore,,,
transition,,,,,,,,
transition,Gen_Cannot_Happen_Event,,,Finish,Update_Result,,,
transition,,,,,,,,
transition,Gen_Cannot_Happen_Event,,,Gen_Cannot_Happen,Cannot_Happen,,,
transition,,,,,,,,
transition,Gen_Cannot_Happen_Event,,,Check_CH_State,Ignore,,,
transition,,,,,,,,
transition,Gen_Cannot_Happen_Event,,,Gen_To_Unsupported,Ignore,,,
transition,,,,,,,,
transition,Gen_Cannot_Happen_Event,,,Gen_To_Undefined,Ignore,,,
transition,,,,,,,,
transition,Check_Cannot_Happen_State,,,Gen_Ignore,Ignore,,,
transition,,,,,,,,
transition,Check_Cannot_Happen_State,,,Check_Ignore_State,Ignore,,,
transition,,,,,,,,
transition,Check_Cannot_Happen_State,,,Finish,Ignore,,,
transition,,,,,,,,
transition,Check_Cannot_Happen_State,,,Gen_Cannot_Happen,Cannot_Happen,,,
transition,,,,,,,,
transition,Check_Cannot_Happen_State,,,Check_CH_State,Ignore,,,
transition,,,,,,,,
transition,Check_Cannot_Happen_State,,,Gen_To_Unsupported,Ignore,,,
transition,,,,,,,,
transition,Check_Cannot_Happen_State,,,Gen_To_Undefined,Ignore,,,
transition,,,,,,,,
transition,Unsupported,,,Gen_Ignore,Ignore,,,
transition,,,,,,,,
transition,Unsupported,,,Check_Ignore_State,Ignore,,,
transition,,,,,,,,
transition,Unsupported,,,Finish,Idle,,,
transition,,,,,,,,
transition,Unsupported,,,Gen_Cannot_Happen,Ignore,,,
transition,,,,,,,,
transition,Unsupported,,,Check_CH_State,Ignore,,,
transition,,,,,,,,
transition,Unsupported,,,Gen_To_Unsupported,Ignore,,,
transition,,,,,,,,
transition,Unsupported,,,Gen_To_Undefined,Ignore,,,
transition,,,,,,,,
transition,Gen_Indefined_Event,,,Gen_Ignore,Ignore,,,
transition,,,,,,,,
transition,Gen_Indefined_Event,,,Check_Ignore_State,Ignore,,,
transition,,,,,,,,
transition,Gen_Indefined_Event,,,Finish,Update_Result,,,
transition,,,,,,,,
transition,Gen_Indefined_Event,,,Gen_Cannot_Happen,Ignore,,,
transition,,,,,,,,
transition,Gen_Indefined_Event,,,Check_CH_State,Ignore,,,
transition,,,,,,,,
transition,Gen_Indefined_Event,,,Gen_To_Unsupported,Ignore,,,
transition,,,,,,,,
transition,Gen_Indefined_Event,,,Gen_To_Undefined,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Test_Persistence,objTP,67,,,,,
attribute,TPID,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Test_Persistence,Idle,,1,,,
state,,,,,,,,
state,,Test_Persistence,Stage_A,,2,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,A_Val,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,temp = 1%0A%0A[temp] = Events6::Add_One[A_Val]%0A%0Aif A_Val = 10 then%0A  [] = RPT2:Test_Passed["Persistence"%2C Test_No%2C 0]%0Aelse%0A   [] = RPT3:Test_Failed["Persistence"%2C Test_No%2C A_Val]%0Aendif%0A%0Agenerate objTP3:Finished() to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Test_Persistence,Test_Real,,4,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Real_Val,in,,,,,,
typeref,real,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,if Real_Val = 99.9 then%0A  [] = RPT2:Test_Passed["Real Input"%2C Test_No%2C 0]%0Aelse%0A  [] = RPT3:Test_Failed["Real Input"%2C Test_No%2C -10]%0Aendif%0A%0Agenerate objTP3:Finished() to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Test_Persistence,Test_Text,,5,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Text_Input,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,if Text_Input = "Text Passed" then%0A  [] = RPT2:Test_Passed["Text Input"%2C Test_No%2C 0]%0Aelse%0A   [] = RPT3:Test_Failed["Text Input"%2C Test_No%2C -10]%0Aendif%0A%0Agenerate objTP3:Finished() to this,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Start_A,,1,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,A_Val,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Start_B,,2,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Finished,,3,,,,,
event,,,,,,,,
event,Pass_Real,,4,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Real_Val,in,,,,,,
typeref,real,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Pass_IH,,5,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Pass_Input,in,,,,,,
typeref,instance of Test_Persistence,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,Pass_Text,,6,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,Text_Input,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Start_A,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Start_B,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finished,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Pass_Real,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Pass_IH,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Pass_Text,Cannot_Happen,,,
transition,,,,,,,,
transition,Idle,,,Start_A,Stage_A,,,
transition,,,,,,,,
transition,Idle,,,Start_B,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Finished,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Pass_Real,Test_Real,,,
transition,,,,,,,,
transition,Idle,,,Pass_IH,Ignore,,,
transition,,,,,,,,
transition,Idle,,,Pass_Text,Test_Text,,,
transition,,,,,,,,
transition,Stage_A,,,Start_A,Ignore,,,
transition,,,,,,,,
transition,Stage_A,,,Start_B,Ignore,,,
transition,,,,,,,,
transition,Stage_A,,,Finished,Idle,,,
transition,,,,,,,,
transition,Stage_A,,,Pass_Real,Ignore,,,
transition,,,,,,,,
transition,Stage_A,,,Pass_IH,Ignore,,,
transition,,,,,,,,
transition,Stage_A,,,Pass_Text,Ignore,,,
transition,,,,,,,,
transition,Test_Real,,,Start_A,Ignore,,,
transition,,,,,,,,
transition,Test_Real,,,Start_B,Ignore,,,
transition,,,,,,,,
transition,Test_Real,,,Finished,Idle,,,
transition,,,,,,,,
transition,Test_Real,,,Pass_Real,Ignore,,,
transition,,,,,,,,
transition,Test_Real,,,Pass_IH,Ignore,,,
transition,,,,,,,,
transition,Test_Real,,,Pass_Text,Ignore,,,
transition,,,,,,,,
transition,Test_Text,,,Start_A,Ignore,,,
transition,,,,,,,,
transition,Test_Text,,,Start_B,Ignore,,,
transition,,,,,,,,
transition,Test_Text,,,Finished,Idle,,,
transition,,,,,,,,
transition,Test_Text,,,Pass_Real,Ignore,,,
transition,,,,,,,,
transition,Test_Text,,,Pass_IH,Ignore,,,
transition,,,,,,,,
transition,Test_Text,,,Pass_Text,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
object,Top_Level,TL,34,,,,,
attribute,TL_id,,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,Result,,,TL_id,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
state,,Top_Level,Check,,1,,,
codeblock,[] = Events5::Dump_Text["Top Level"]%0A%0Atemp = this.Result%0Atemp = temp + 1%0Athis.Result = temp,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,Top_Level,Finish,,2,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,[Host] = WAW1:What_Env[]%0A%0Aif Host = "ISIM" then%0A   Total = 3%0Aelse%0A   Total = 4%0Aendif%0A%0Aif this.Result = Total then%0A   [] = RPT2:Test_Passed["Event persistence"%2C Test_No%2C 0]%0Aelse%0A   [] = RPT3:Test_Failed["Event persistence"%2C Test_No%2C this.Result]%0Aendif,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,Go,,1,,,,,
event,,,,,,,,
event,Finish,,2,,,,,
parameter,Test_No,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,Go,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,Finish,Cannot_Happen,,,
transition,,,,,,,,
transition,Check,,,Go,Check,,,
transition,,,,,,,,
transition,Check,,,Finish,Finish,,,
transition,,,,,,,,
transition,Finish,,,Go,Check,,,
transition,,,,,,,,
transition,Finish,,,Finish,Ignore,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
pragma,version,,,,,,,
pragmaitem,23,,,,,,,
pragmaitem,,,,,,,,
pragma,,,,,,,,
description, Tests the various forms of event transmission%2C in particular polymorphic events and event data.%0A,,,,,,,
domain,,,,,,,,
