project TSV2 is
  domain DomainA is
    terminator Navigate is
      public service Single_Bridge_Navigate (Test : in  integer);

      public service Shared_Bridge_Navigate (Test : in  integer);

      public service One_to_One_Navigate (Test : in  integer);

      public service One_to_Many_Navigate (Test : in  integer);

      public service Many_to_Many_Navigate (Test : in  integer);

      public service Misc_Calls (Test : in  integer);

      public service Enum_Test (Test       : in  integer,
                                Enum_Input : in  Test_Enum_Type);

      public service Big_Bridge_Navigation (Test       : in  integer,
                                            Enum_Input : in  Test_Enum_Type);

      public service Pass_IH (Test   : in  integer,
                              The_IH : in  instance of Object_A);

      public service Pass_Parameters (The_Int_Input  : in  integer,
                                      The_Real_Input : in  real,
                                      The_Text_Input : in  string,
                                      The_Bool_Input : in  boolean,
                                      The_Result     : out integer);

    end terminator;
    pragma key_letter ("NAV");


    terminator Report is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name : in  string);

      public service Specify_Requid (Requid_Test_Number : in  integer,
                                     The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");


    terminator TerminatorA is
      public service Sync1A (inputA  : in  integer,
                             inputB  : in  integer,
                             Test    : in  integer,
                             outputA : out integer,
                             outputB : out integer);

      public service Sync2A (inputA  : in  integer,
                             inputB  : in  integer,
                             Test    : in  integer,
                             outputA : out integer,
                             outputB : out integer);

      public service Sync3A (InputA  : in  integer,
                             InputB  : in  integer,
                             Test    : in  integer,
                             OutputA : out integer,
                             OutputB : out integer);

      public service Sync4A (InputA  : in  integer,
                             InputB  : in  integer,
                             Test    : in  integer,
                             OutputA : out integer,
                             OutputB : out integer);

      public service Common_Named_Object_Usage (Test_Number_Parameter   : in  integer,
                                                This_Test_Has_Failed    : out boolean,
                                                This_Test_Failure_Value : out integer);

    end terminator;
    pragma key_letter ("termA");


  end domain;

  domain Creation_Deletion is

    terminator Report_Terminator is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name   : in  string,
                                           This_Domain_Number : in  integer);

      public service Specify_Requid (Requid_Test_Number : in  integer,
                                     The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");


  end domain;

  domain DomainB is
    terminator Navigate is
      public service Navigate_One_to_One (Test : in  integer);

      public service Navigate_One_to_Many (Test : in  integer);

      public service Navigate_Many_to_Many (Test : in  integer);

      public service Misc_Calls (Test : in  integer);

      public service Enum_Test (Test       : in  integer,
                                Enum_Input : in  Test_Enum_Type);

    end terminator;
    pragma key_letter ("NAV");


    terminator Report is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name : in  string);

      public service Specify_Requid (Requid_Test_Number : in  integer,
                                     The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");



  end domain;

  domain Find_and_Sets is

    terminator Report is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name : in  string);

      public service Specify_Requid (Requid_Test_Number : in  integer,
                                     The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");


    terminator Where_Are_We is
      public service What_Env (Env_Text : out string);

    end terminator;
    pragma key_letter ("WAW");


  end domain;

  domain Function_Calls is
    terminator Nav_To_Bridge is
      public service Call_Domain_Sync_Service (Test        : in  integer,
                                               InputValue1 : in  integer,
                                               InputValue2 : in  integer,
                                               InputValue3 : in  integer);

      public service Call_Object_Sync_Service (Test        : in  integer,
                                               Text_Input  : in  string,
                                               The_Integer : in  integer,
                                               The_Real    : in  real);

    end terminator;
    pragma key_letter ("NTB");


    terminator Report is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name : in  string);

      public service Specify_Requid (Requid_Test_Number : in  integer,
                                     The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");


    terminator Where_Are_We is
      public service What_Env (Env_Text : out string);

    end terminator;
    pragma key_letter ("WAW");


  end domain;

  domain RP is
  end domain;

  domain FTE is
  end domain;

  domain HWADDR is
  end domain;

  domain Struct is
    terminator Env_Terminator is
      public service Env_String (Env_Text : out string);

      public service Env_Number (Env_Integer : out integer);

    end terminator;
    pragma key_letter ("ET");


    terminator Report is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name : in  string);

      public service Specify_Requid (Requid_Test_Number : in  integer,
                                     The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");


  end domain;

  domain SBONE is
    terminator Into_The_Great_Wide_Open is
      public service Across_The_Great_Divide (Test                  : in  integer,
                                              A_Structure_To_Send   : in  sequence of Source_Structure_Type,
                                              Control_Integer       : in  integer,
                                              Control_Real          : in  real,
                                              Control_String        : in  string,
                                              Control_Enum          : in  Colour_Type,
                                              Control_Boolean       : in  boolean,
                                              Elements_In_Structure : in  integer,
                                              Result                : out boolean,
                                              A_Structure_To_Return : out sequence of Source_Structure_Type);

      public service Wide_Blue_Yonder (Test                    : in  integer,
                                       Simple_Source_Structure : in  sequence of Very_Simple_Structure_Type);

      public service Test_Structure_In_Bridge (Test            : in  integer,
                                               Input_Structure : in  sequence of Structure_Of_UDTs);

      public service The_IH_Struct_Across_Bridge (The_IHA           : in  instance of Very_Simple_Data_Object,
                                                  The_IHB           : in  instance of Very_Simple_Data_Object,
                                                  The_IHC           : in  instance of Very_Simple_Data_Object,
                                                  Decomposed_Struct : out sequence of VSD_Struct);

    end terminator;
    pragma key_letter ("ITGWO");


    terminator Report is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name : in  string);

    end terminator;
    pragma key_letter ("RPT");


  end domain;

  domain SBTWO is
    terminator Report is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name : in  string);

    end terminator;
    pragma key_letter ("RPT");



  end domain;

  domain TAGS is
    terminator Env_Terminator is
      public service Env_String (Env_Text : out string);

      public service Env_Number (Env_Integer : out integer);

    end terminator;
    pragma key_letter ("ET");


    terminator Report is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name   : in  string,
                                           This_Domain_Number : in  integer);

      public service Specify_Requid (Requid_Test_Number : in  integer,
                                     The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");


    terminator Tagged_Terminator is
      public service A_Tagged_Project_Terminator (Incoming_Parameter_3 : in  integer,
                                                  Outgoing_Parameter_3 : out integer);

      public service A_Tagged_Dummy_Terminator_One (Mickey_Mouse_Input_One  : in  integer,
                                                    Minnie_Mouse_Output_One : out integer);

      public service A_Tagged_Dummy_Terminator_Two (Input_Two  : in  integer,
                                                    Output_Two : out integer);

    end terminator;
    pragma key_letter ("TT");


    terminator Untagged_Terminator is
      public service An_Untagged_Project_Terminator (Incoming_Parameter_4 : in  integer,
                                                     Outgoing_Parameter_4 : out integer);

    end terminator;
    pragma key_letter ("UT");


  end domain;

  domain UDT is
    terminator Bridge_Too_Far is
      public service I_H_Type_Across (Param1_IH     : in  instance of Object_Into_Bridge,
                                      Success       : out boolean,
                                      Success_Value : out integer);

      public service User_Defined_Types_Across (Param1         : in  Subset_Zero_Of_Integer,
                                                Param2         : in  Simple_Enumeration_Type,
                                                Success        : out boolean,
                                                Success_Value  : out integer,
                                                A_Return_Param : out One_To_Maximum_Integer);

      public service Timer_Enum_Across_Bridge (Test : in  integer);

    end terminator;
    pragma key_letter ("BTF");


    terminator Report is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name : in  string);

      public service Specify_A_Requid (Requid_Test_Number : in  integer,
                                       The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");



  end domain;

  domain Events is
    terminator Generate_From_Bridge is
      public service Generate_Event (Test_No : in  integer,
                                     The_IH  : in  instance of Object_X);

    end terminator;
    pragma key_letter ("GFB");


    terminator Report is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name : in  string);

      public service Specify_Requid (Requid_Test_Number : in  integer,
                                     The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");


    terminator Where_Are_We is
      public service What_Env (Local_Env_Text : out string);

    end terminator;
    pragma key_letter ("WAW");


  end domain;

  domain ASL_Mapping is
    terminator Report_Result is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name : in  string);

      public service Specify_Requid (Requid_Test_Number : in  integer,
                                     The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");


    terminator Where_Are_We is
      public service What_Env (Env_Text : out string);

    end terminator;
    pragma key_letter ("WAW");


  end domain;

  domain CPR_One is
    terminator One_To_Four is
      public service Nav_To_CPR_Four (Source_IH      : in  instance of Many_End_Of_CPR_Relationship,
                                      Returned_Value : out integer);

    end terminator;
    pragma key_letter ("OTF");


    terminator Report is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name   : in  string,
                                           This_Domain_Number : in  integer);

      public service Specify_Requid (Requid_Test_Number : in  integer,
                                     The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");


    terminator Simple_Terminator is
      public service Create_and_Link_CPR (This_IH      : in  instance of Object_One,
                                          It_Worked    : out boolean,
                                          Result_Value : out integer);

      public service Navigate_CPR (The_Object_One_IH : in  instance of Object_One,
                                   It_Worked         : out boolean,
                                   Result_Value      : out integer);

    end terminator;
    pragma key_letter ("ST");


    terminator Simple_CPR_In_Object_One is
      public service Link_To_CPR2_Domain (This_IH      : in  instance of Object_One,
                                          Success      : out boolean,
                                          Success_With : out integer);

      public service Link_To_CPR2_Domain_Again (Starting_IH  : in  instance of Object_One,
                                                Success      : out boolean,
                                                Success_With : out integer);

      public service Return_Attribute (This_IH      : in  instance of Object_One,
                                       Success      : out boolean,
                                       Success_With : out integer);

      public service Navigate_To_CPR_Two_Object_Two (This_IH             : in  instance of Object_One,
                                                     Navigation_Possible : out boolean,
                                                     To_Object_ID        : out integer);

    end terminator;
    pragma key_letter ("S_OBJ_ONE");


  end domain;

  domain CPR_Two is
    terminator Normal_Bridge is
      public service Create_Object_One (Create_Int  : in  integer,
                                        Create_Real : in  real,
                                        Create_Bool : in  boolean,
                                        Create_Text : in  string,
                                        Return_id   : out integer);

      public service Create_A_Many (Instance_Number : in  integer,
                                    This_Many_ID    : out integer);

    end terminator;
    pragma key_letter ("NB");


    terminator Report is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name   : in  string,
                                           This_Domain_Number : in  integer);

      public service Specify_Requid (Requid_Test_Number : in  integer,
                                     The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");


    terminator Simple_Object_Two_Counterpart_CPR_Two is
      public service Retrieve_Object_One_Using_this (First_Attribute  : out integer,
                                                     Second_Attribute : out real,
                                                     Third_Attribute  : out boolean,
                                                     Fourth_Attribute : out string);

      public service Link_To_Object_One_Using_IH (Input_Param1  : in  integer,
                                                  Source_IH     : in  instance of Object_Two,
                                                  Return_Param1 : out boolean);

      public service Link_To_Object_One_Using_this (Input_Param1  : in  integer,
                                                    Return_Param1 : out boolean);

      public service Retrieve_Object_One_Using_IH (Source_IH        : in  instance of Object_Two,
                                                   First_Attribute  : out integer,
                                                   Second_Attribute : out real,
                                                   Third_Attribute  : out boolean,
                                                   Fourth_Attribute : out string);

      public service Link_To_Object_To_Pass (The_IH                   : in  instance of Object_Two,
                                             Object_To_Pass_Return_ID : out integer);

      public service Link_To_Object_One (The_IH               : in  instance of Object_Two,
                                         Object_One_Return_ID : out integer);

    end terminator;
    pragma key_letter ("S_OBJ_TWO");


    terminator Simple_Single_End_Link is
      public service Link_A_Specified_Many (Instance_Number : in  integer,
                                            The_IH          : in  instance of Single_End);

      public service Create_And_Link_A_New_Many (Many_Identifier : in  integer,
                                                 The_IH          : in  instance of Single_End);

      public service Navigate_To_Many (The_IH         : in  instance of Single_End,
                                       How_Many_Found : out integer);

      public service Find_And_Unlink_A_Many (Instance_Number_To_Unlink : in  integer,
                                             The_IH                    : in  instance of Single_End);

    end terminator;
    pragma key_letter ("S_SEL");


  end domain;

  domain CPR_Three is
    terminator Domain_Two_Operations is
      public service Create_Object_Two_Instance (Link_What : in  Link_Type,
                                                 OK        : out boolean,
                                                 Two_ID    : out integer,
                                                 One_ID    : out integer,
                                                 Pass_ID   : out integer);

    end terminator;
    pragma key_letter ("D_Two_Ops");


    terminator Local_Object_Bridge is
      public service Link_First_To_Second (Primary_Object_IH   : in  instance of First_Object,
                                           Secondary_Object_IH : in  instance of Second_Object,
                                           Linked_OK           : out boolean,
                                           Supported           : out boolean);

      public service Navigate_First_To_Second (Primary_Object_IH   : in  instance of First_Object,
                                               Secondary_Object_IH : out instance of Second_Object,
                                               Supported           : out boolean);

      public service Navigate_Second_To_First (Secondary_Object_IH : in  instance of Second_Object,
                                               Primary_Object_IH   : out instance of First_Object,
                                               Supported           : out boolean);

      public service Unlink_First_From_Second (Primary_Object_IH   : in  instance of First_Object,
                                               Secondary_Object_IH : in  instance of Second_Object,
                                               Unlinked_OK         : out boolean,
                                               Supported           : out boolean);

    end terminator;
    pragma key_letter ("LO_Bridge");


    terminator Report is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name   : in  string,
                                           This_Domain_Number : in  integer);

      public service Specify_Requid (Requid_Test_Number : in  integer,
                                     The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");


    terminator Simple_Third_Boundary_To_Domain_One is
      public service Get_Object_One (The_IH       : in  instance of Third_Way,
                                     Return_Value : out integer);

      public service Link_To_Object_One (The_IH    : in  instance of Third_Way,
                                         It_Linked : out boolean);

    end terminator;
    pragma key_letter ("S_TB_One");


    terminator Simple_Third_Boundary_To_Object_Two is
      public service Get_Object_Two (Domain_Two_Target_ID : in  integer,
                                     Link_To_What         : in  Link_Type,
                                     The_IH               : in  instance of Third_Way,
                                     Object_One_ID        : out integer,
                                     Object_To_Pass_ID    : out integer);

      public service Get_Single_Object (The_IH    : in  instance of Third_Way,
                                        Linked_To : out integer);

    end terminator;
    pragma key_letter ("S_TB_Two");


  end domain;

  domain CPR_Four is
    terminator A_Normal_Bridge is
      public service Link_To_CPR_Three_Third_Object (An_Instance_To_Link : in  instance of An_Active_Object,
                                                     Linked_OK           : out boolean);

      public service Link_To_CPR_One_Many_Object (The_IH              : in  instance of An_Active_Object,
                                                  Something_To_Return : out boolean,
                                                  Linked_To           : out integer);

      //! Navigate to CPR One Many End object and return how many there
      //! are currently linked.
      public service Navigate_To_CPR_One_Many_Object (The_IH         : in  instance of An_Active_Object,
                                                      How_Many_Found : out integer);

      public service Navigate_To_CPR_Three_Third_Object (The_IH              : in  instance of An_Active_Object,
                                                         Something_To_Return : out integer);

      public service Unlink_From_CPR_Three_Third_Object (Source_IH   : in  instance of An_Active_Object,
                                                         Unlinked_OK : out boolean);

      public service Unlink_From_CPR_One_Many_Object (Source_IH     : in  instance of An_Active_Object,
                                                      Unlinked_OK   : out boolean,
                                                      Unlinked_From : out integer);

      public service Link_To_CPR8_Three_Third_Object (Source_IH  : in  instance of An_Active_Object,
                                                      The_Result : out boolean,
                                                      Linked_To  : out integer);

      public service Navigate_To_CPR8_Three_Third_Object (Source_IH         : in  instance of An_Active_Object,
                                                          Navigation_Result : out integer);

      public service Unlink_From_CPR8_Three_Third_Object (Source_IH : in  instance of An_Active_Object,
                                                          Unlinked  : out boolean);

      public service Link_First_Object (Source_IH           : in  instance of First_Active_Object,
                                        Specified_Attribute : in  integer,
                                        Linked_OK           : out boolean,
                                        Linked_Attribute    : out integer);

      public service Navigate_From_First_Object (Source_IH                       : in  instance of First_Active_Object,
                                                 Failed_To_Navigate              : out boolean,
                                                 Attribute_Of_Navigated_Instance : out integer);

      public service Invoke_Test_In_CPR_One (Destination_ID : in  integer,
                                             Source_ID      : in  integer);

    end terminator;
    pragma key_letter ("ANB");


    terminator Report is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name   : in  string,
                                           This_Domain_Number : in  integer);

      public service Specify_Requid (Requid_Test_Number : in  integer,
                                     The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");


  end domain;

  domain Relationships is
    terminator Report is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name : in  string);

      public service Specify_Requid (Requid_Test_Number : in  integer,
                                     The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");


    terminator Where_Are_We is
      public service What_Env (Env_Text : out string);

    end terminator;
    pragma key_letter ("WAW");


  end domain;

  domain TT is
    terminator Report_Results is
      public service Start_Test (Test_Number     : in  integer,
                                 Requid          : in  string,
                                 Invoking_Domain : in  string,
                                 Invoking_Object : in  string,
                                 Purpose         : in  string);

      public service Test_Passed (Test_Object_Domain : in  string,
                                  Test_Number        : in  integer,
                                  Test_Value         : in  integer);

      public service Test_Failed (Failed_Domain_Object : in  string,
                                  Failed_Test_Number   : in  integer,
                                  Failed_Test_Value    : in  integer);

      public service Test_Unsupported (Unsupported_Test_Number : in  integer);

      public service Test_Text (Test_Number : in  integer,
                                Free_Text   : in  string);

      public service Domain_Test_Start (This_Domain_Name : in  string);

      public service Domain_Test_Finished (This_Domain_Name : in  string);

      public service Specify_Requid (Requid_Test_Number : in  integer,
                                     The_Requid_Itself  : in  string);

    end terminator;
    pragma key_letter ("RPT");



    terminator Where_Are_We is
      public service What_Env (Env_Text : out string);

    end terminator;
    pragma key_letter ("WAW");


  end domain;

end project;
